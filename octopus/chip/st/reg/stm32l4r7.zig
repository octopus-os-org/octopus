const mmio = @import("mmio.zig");

pub const devices = struct {
    ///  STM32L4R7
    pub const STM32L4R7 = struct {
        pub const properties = struct {
            pub const @"cpu.endian" = "little";
            pub const @"cpu.mpuPresent" = "true";
            pub const @"cpu.revision" = "r0p1";
            pub const @"cpu.name" = "CM4";
            pub const @"cpu.nvicPrioBits" = "4";
            pub const @"cpu.vendorSystickConfig" = "false";
            pub const @"cpu.fpuPresent" = "true";
        };

        pub const VectorTable = extern struct {
            const Handler = 4;
            const unhandled = 4;

            initial_stack_pointer: u32,
            Reset: Handler = unhandled,
            NMI: Handler = unhandled,
            HardFault: Handler = unhandled,
            MemManageFault: Handler = unhandled,
            BusFault: Handler = unhandled,
            UsageFault: Handler = unhandled,
            reserved5: [4]u32 = undefined,
            SVCall: Handler = unhandled,
            reserved10: [2]u32 = undefined,
            PendSV: Handler = unhandled,
            SysTick: Handler = unhandled,
            ///  Window Watchdog interrupt
            WWDG: Handler = unhandled,
            ///  PVD through EXTI line detection
            PVD_PVM: Handler = unhandled,
            ///  Tamper and TimeStamp interrupts
            TAMP_STAMP: Handler = unhandled,
            ///  RTC Tamper or TimeStamp /CSS on LSE through EXTI line 19 interrupts
            RTC_WKUP: Handler = unhandled,
            ///  Flash global interrupt
            FLASH: Handler = unhandled,
            ///  RCC global interrupt
            RCC: Handler = unhandled,
            ///  EXTI Line 0 interrupt
            EXTI0: Handler = unhandled,
            ///  EXTI Line 1 interrupt
            EXTI1: Handler = unhandled,
            ///  EXTI Line 2 interrupt
            EXTI2: Handler = unhandled,
            ///  EXTI Line 3 interrupt
            EXTI3: Handler = unhandled,
            ///  EXTI Line 4 interrupt
            EXTI4: Handler = unhandled,
            ///  DMA1 Channel1 global interrupt
            DMA1_CH1: Handler = unhandled,
            ///  DMA1 Channel2 global interrupt
            DMA1_CH2: Handler = unhandled,
            ///  DMA1 Channel3 interrupt
            DMA1_CH3: Handler = unhandled,
            ///  DMA1 Channel4 interrupt
            DMA1_CH4: Handler = unhandled,
            ///  DMA1 Channel5 interrupt
            DMA1_CH5: Handler = unhandled,
            ///  DMA1 Channel6 interrupt
            DMA1_CH6: Handler = unhandled,
            ///  DMA1 Channel 7 interrupt
            DMA1_CH7: Handler = unhandled,
            ///  ADC1 and ADC2 global interrupt
            ADC1: Handler = unhandled,
            ///  CAN1 TX interrupts
            CAN1_TX: Handler = unhandled,
            ///  CAN1 RX0 interrupts
            CAN1_RX0: Handler = unhandled,
            ///  CAN1 RX1 interrupts
            CAN1_RX1: Handler = unhandled,
            ///  CAN1 SCE interrupt
            CAN1_SCE: Handler = unhandled,
            ///  EXTI Line5 to Line9 interrupts
            EXTI9_5: Handler = unhandled,
            ///  TIM1 Break/TIM15 global interrupts
            TIM1_BRK_TIM15: Handler = unhandled,
            ///  TIM1 Update/TIM16 global interrupts
            TIM1_UP_TIM16: Handler = unhandled,
            ///  TIM1 Trigger and Commutation interrupts and TIM17 global interrupt
            TIM1_TRG_COM_TIM17: Handler = unhandled,
            ///  TIM1 Capture Compare interrupt
            TIM1_CC: Handler = unhandled,
            ///  TIM2 global interrupt
            TIM2: Handler = unhandled,
            ///  TIM3 global interrupt
            TIM3: Handler = unhandled,
            ///  TIM4 global interrupt
            TIM4: Handler = unhandled,
            ///  I2C1 event interrupt
            I2C1_EV: Handler = unhandled,
            ///  I2C1 error interrupt
            I2C1_ER: Handler = unhandled,
            ///  I2C2 event interrupt
            I2C2_EV: Handler = unhandled,
            ///  I2C2 error interrupt
            I2C2_ER: Handler = unhandled,
            ///  SPI1 global interrupt
            SPI1: Handler = unhandled,
            ///  SPI2 global interrupt
            SPI2: Handler = unhandled,
            ///  USART1 global interrupt
            USART1: Handler = unhandled,
            ///  USART2 global interrupt
            USART2: Handler = unhandled,
            ///  USART3 global interrupt
            USART3: Handler = unhandled,
            ///  EXTI Lines 10 to 15 interrupts
            EXTI15_10: Handler = unhandled,
            ///  RTC alarms through EXTI line 18 interrupts
            RTC_ALARM: Handler = unhandled,
            ///  DFSDM1_FLT3 global interrupt
            DFSDM1_FLT3: Handler = unhandled,
            ///  TIM8 Break Interrupt
            TIM8_BRK: Handler = unhandled,
            ///  TIM8 Update Interrupt
            TIM8_UP: Handler = unhandled,
            ///  TIM8 Trigger and Commutation Interrupt
            TIM8_TRG_COM: Handler = unhandled,
            ///  TIM8 Capture Compare Interrupt
            TIM8_CC: Handler = unhandled,
            ///  ADC3 global interrupt
            ADC3: Handler = unhandled,
            ///  FMC global Interrupt
            FMC: Handler = unhandled,
            ///  SDMMC global Interrupt
            SDMMC1: Handler = unhandled,
            ///  TIM5 global Interrupt
            TIM5: Handler = unhandled,
            ///  SPI3 global Interrupt
            SPI3: Handler = unhandled,
            ///  UART4 global Interrupt
            UART4: Handler = unhandled,
            ///  UART5 global Interrupt
            UART5: Handler = unhandled,
            ///  TIM6 global and DAC1 and 2 underrun error interrupts
            TIM6_DACUNDER: Handler = unhandled,
            ///  TIM7 global interrupt
            TIM7: Handler = unhandled,
            ///  DMA2 Channel 1 global Interrupt
            DMA2_CH1: Handler = unhandled,
            ///  DMA2 Channel 2 global Interrupt
            DMA2_CH2: Handler = unhandled,
            ///  DMA2 Channel 3 global Interrupt
            DMA2_CH3: Handler = unhandled,
            ///  DMA2 Channel 4 global Interrupt
            DMA2_CH4: Handler = unhandled,
            ///  DMA2 Channel 5 global Interrupt
            DMA2_CH5: Handler = unhandled,
            ///  DFSDM1_FLT0 global interrupt
            DFSDM1_FLT0: Handler = unhandled,
            ///  DFSDM1_FLT1 global interrupt
            DFSDM1_FLT1: Handler = unhandled,
            ///  DFSDM1_FLT2 global interrupt
            DFSDM1_FLT2: Handler = unhandled,
            ///  COMP1 and COMP2 interrupts
            COMP: Handler = unhandled,
            ///  LP TIM1 interrupt
            LPTIM1: Handler = unhandled,
            ///  LP TIM2 interrupt
            LPTIM2: Handler = unhandled,
            ///  USB OTG FS global Interrupt
            OTG_FS: Handler = unhandled,
            ///  DMA2 Channel 6 global Interrupt
            DMA2_CH6: Handler = unhandled,
            ///  DMA2 Channel 7 global Interrupt
            DMA2_CH7: Handler = unhandled,
            ///  LPUART1 global interrupt
            LPUART1: Handler = unhandled,
            ///  OCTOSPI1 global interrupt
            OCTOSPI1: Handler = unhandled,
            ///  I2C3 event interrupt
            I2C3_EV: Handler = unhandled,
            ///  I2C3 error interrupt
            I2C3_ER: Handler = unhandled,
            ///  SAI1 global interrupt
            SAI1: Handler = unhandled,
            ///  SAI2 global interrupt
            SAI2: Handler = unhandled,
            ///  OCTOSPI2 global interrupt
            OCTOSPI2: Handler = unhandled,
            ///  TSC global interrupt
            TSC: Handler = unhandled,
            ///  DSI global interrupt
            DSIHSOT: Handler = unhandled,
            ///  AES global interrupt
            AES: Handler = unhandled,
            ///  RNG and HASH global interrupt
            RNG_HASH: Handler = unhandled,
            ///  Floating point interrupt
            FPU: Handler = unhandled,
            ///  CRS global interrupt
            CRS: Handler = unhandled,
            ///  I2C4 error interrupt
            I2C4_ER: Handler = unhandled,
            ///  I2C4 event interrupt
            I2C4_EV: Handler = unhandled,
            ///  DCMI global interrupt
            DCMI: Handler = unhandled,
            reserved100: [4]u32 = undefined,
            ///  DMA2D global interrupt
            DMA2D: Handler = unhandled,
            ///  LTDC global interrupt
            LCD_TFT: Handler = unhandled,
            ///  LTDC global error interrupt
            LCD_TFT_ER: Handler = unhandled,
            ///  GFXMMU global error interrupt
            GFXMMU: Handler = unhandled,
            ///  DMAMUX Overrun interrupt
            DMAMUX_OVR: Handler = unhandled,
        };

        pub const peripherals = struct {
            ///  General-purpose-timers
            pub const TIM2 = @as(*volatile types.peripherals.TIM2, @ptrFromInt(0x40000000));
            ///  General-purpose-timers
            pub const TIM3 = @as(*volatile types.peripherals.TIM2, @ptrFromInt(0x40000400));
            ///  General-purpose-timers
            pub const TIM4 = @as(*volatile types.peripherals.TIM2, @ptrFromInt(0x40000800));
            ///  General-purpose-timers
            pub const TIM5 = @as(*volatile types.peripherals.TIM2, @ptrFromInt(0x40000c00));
            ///  Basic-timers
            pub const TIM6 = @as(*volatile types.peripherals.TIM6, @ptrFromInt(0x40001000));
            ///  Basic-timers
            pub const TIM7 = @as(*volatile types.peripherals.TIM6, @ptrFromInt(0x40001400));
            ///  Real-time clock
            pub const RTC = @as(*volatile types.peripherals.RTC, @ptrFromInt(0x40002800));
            ///  System window watchdog
            pub const WWDG = @as(*volatile types.peripherals.WWDG, @ptrFromInt(0x40002c00));
            ///  Independent watchdog
            pub const IWDG = @as(*volatile types.peripherals.IWDG, @ptrFromInt(0x40003000));
            ///  Serial peripheral interface/Inter-IC sound
            pub const SPI2 = @as(*volatile types.peripherals.SPI1, @ptrFromInt(0x40003800));
            ///  Serial peripheral interface/Inter-IC sound
            pub const SPI3 = @as(*volatile types.peripherals.SPI1, @ptrFromInt(0x40003c00));
            ///  Universal synchronous asynchronous receiver transmitter
            pub const USART2 = @as(*volatile types.peripherals.USART1, @ptrFromInt(0x40004400));
            ///  Universal synchronous asynchronous receiver transmitter
            pub const USART3 = @as(*volatile types.peripherals.USART1, @ptrFromInt(0x40004800));
            ///  Universal synchronous asynchronous receiver transmitter
            pub const UART4 = @as(*volatile types.peripherals.USART1, @ptrFromInt(0x40004c00));
            ///  Universal synchronous asynchronous receiver transmitter
            pub const UART5 = @as(*volatile types.peripherals.USART1, @ptrFromInt(0x40005000));
            ///  Inter-integrated circuit
            pub const I2C1 = @as(*volatile types.peripherals.I2C1, @ptrFromInt(0x40005400));
            ///  Inter-integrated circuit
            pub const I2C2 = @as(*volatile types.peripherals.I2C1, @ptrFromInt(0x40005800));
            ///  Inter-integrated circuit
            pub const I2C3 = @as(*volatile types.peripherals.I2C1, @ptrFromInt(0x40005c00));
            ///  Clock recovery system
            pub const CRS = @as(*volatile types.peripherals.CRS, @ptrFromInt(0x40006000));
            ///  Controller area network
            pub const CAN1 = @as(*volatile types.peripherals.CAN1, @ptrFromInt(0x40006400));
            ///  Power control
            pub const PWR = @as(*volatile types.peripherals.PWR, @ptrFromInt(0x40007000));
            ///  Digital-to-analog converter
            pub const DAC = @as(*volatile types.peripherals.DAC, @ptrFromInt(0x40007400));
            ///  Operational amplifiers
            pub const OPAMP = @as(*volatile types.peripherals.OPAMP, @ptrFromInt(0x40007800));
            ///  Low power timer
            pub const LPTIM1 = @as(*volatile types.peripherals.LPTIM1, @ptrFromInt(0x40007c00));
            ///  Universal synchronous asynchronous receiver transmitter
            pub const LPUART1 = @as(*volatile types.peripherals.LPUART1, @ptrFromInt(0x40008000));
            ///  Inter-integrated circuit
            pub const I2C4 = @as(*volatile types.peripherals.I2C1, @ptrFromInt(0x40008400));
            ///  Single Wire Protocol Master Interface
            pub const SWPMI1 = @as(*volatile types.peripherals.SWPMI1, @ptrFromInt(0x40008800));
            ///  Low power timer
            pub const LPTIM2 = @as(*volatile types.peripherals.LPTIM1, @ptrFromInt(0x40009400));
            ///  System configuration controller
            pub const SYSCFG = @as(*volatile types.peripherals.SYSCFG, @ptrFromInt(0x40010000));
            ///  Voltage reference buffer
            pub const VREFBUF = @as(*volatile types.peripherals.VREFBUF, @ptrFromInt(0x40010030));
            ///  Comparator
            pub const COMP = @as(*volatile types.peripherals.COMP, @ptrFromInt(0x40010200));
            ///  External interrupt/event controller
            pub const EXTI = @as(*volatile types.peripherals.EXTI, @ptrFromInt(0x40010400));
            ///  Firewall
            pub const FIREWALL = @as(*volatile types.peripherals.FIREWALL, @ptrFromInt(0x40011c00));
            ///  Advanced-timers
            pub const TIM1 = @as(*volatile types.peripherals.TIM1, @ptrFromInt(0x40012c00));
            ///  Serial peripheral interface/Inter-IC sound
            pub const SPI1 = @as(*volatile types.peripherals.SPI1, @ptrFromInt(0x40013000));
            ///  Advanced-timers
            pub const TIM8 = @as(*volatile types.peripherals.TIM8, @ptrFromInt(0x40013400));
            ///  Universal synchronous asynchronous receiver transmitter
            pub const USART1 = @as(*volatile types.peripherals.USART1, @ptrFromInt(0x40013800));
            ///  General purpose timers
            pub const TIM15 = @as(*volatile types.peripherals.TIM15, @ptrFromInt(0x40014000));
            ///  General purpose timers
            pub const TIM16 = @as(*volatile types.peripherals.TIM16, @ptrFromInt(0x40014400));
            ///  General purpose timers
            pub const TIM17 = @as(*volatile types.peripherals.TIM16, @ptrFromInt(0x40014800));
            ///  Serial audio interface
            pub const SAI1 = @as(*volatile types.peripherals.SAI1, @ptrFromInt(0x40015400));
            ///  Serial audio interface
            pub const SAI2 = @as(*volatile types.peripherals.SAI1, @ptrFromInt(0x40015800));
            ///  Digital filter for sigma delta modulators
            pub const DFSDM1 = @as(*volatile types.peripherals.DFSDM1, @ptrFromInt(0x40016000));
            ///  Liquid crystal display controller
            pub const LTCD = @as(*volatile types.peripherals.LTCD, @ptrFromInt(0x40016800));
            ///  DSI Host
            pub const DSI = @as(*volatile types.peripherals.DSI, @ptrFromInt(0x40016c00));
            ///  Direct memory access controller
            pub const DMA1 = @as(*volatile types.peripherals.DMA1, @ptrFromInt(0x40020000));
            ///  Direct memory access controller
            pub const DMA2 = @as(*volatile types.peripherals.DMA1, @ptrFromInt(0x40020400));
            ///  Reset and clock control
            pub const RCC = @as(*volatile types.peripherals.RCC, @ptrFromInt(0x40021000));
            ///  Flash
            pub const FLASH = @as(*volatile types.peripherals.FLASH, @ptrFromInt(0x40022000));
            ///  Cyclic redundancy check calculation unit
            pub const CRC = @as(*volatile types.peripherals.CRC, @ptrFromInt(0x40023000));
            ///  Touch sensing controller
            pub const TSC = @as(*volatile types.peripherals.TSC, @ptrFromInt(0x40024000));
            ///  DMA2D controller
            pub const DMA2D = @as(*volatile types.peripherals.DMA2D, @ptrFromInt(0x4002b000));
            ///  Graphic MMU
            pub const GFXMMU = @as(*volatile types.peripherals.GFXMMU, @ptrFromInt(0x4002c000));
            ///  General-purpose I/Os
            pub const GPIOA = @as(*volatile types.peripherals.GPIOA, @ptrFromInt(0x48000000));
            ///  General-purpose I/Os
            pub const GPIOB = @as(*volatile types.peripherals.GPIOB, @ptrFromInt(0x48000400));
            ///  General-purpose I/Os
            pub const GPIOC = @as(*volatile types.peripherals.GPIOC, @ptrFromInt(0x48000800));
            ///  General-purpose I/Os
            pub const GPIOD = @as(*volatile types.peripherals.GPIOC, @ptrFromInt(0x48000c00));
            ///  General-purpose I/Os
            pub const GPIOE = @as(*volatile types.peripherals.GPIOC, @ptrFromInt(0x48001000));
            ///  General-purpose I/Os
            pub const GPIOF = @as(*volatile types.peripherals.GPIOC, @ptrFromInt(0x48001400));
            ///  General-purpose I/Os
            pub const GPIOG = @as(*volatile types.peripherals.GPIOC, @ptrFromInt(0x48001800));
            ///  General-purpose I/Os
            pub const GPIOH = @as(*volatile types.peripherals.GPIOC, @ptrFromInt(0x48001c00));
            ///  General-purpose I/Os
            pub const GPIOI = @as(*volatile types.peripherals.GPIOI, @ptrFromInt(0x48002000));
            ///  USB on the go full speed
            pub const OTG_FS_GLOBAL = @as(*volatile types.peripherals.OTG_FS_GLOBAL, @ptrFromInt(0x50000000));
            ///  USB on the go full speed
            pub const OTG_FS_HOST = @as(*volatile types.peripherals.OTG_FS_HOST, @ptrFromInt(0x50000400));
            ///  USB on the go full speed
            pub const OTG_FS_DEVICE = @as(*volatile types.peripherals.OTG_FS_DEVICE, @ptrFromInt(0x50000800));
            ///  USB on the go full speed
            pub const OTG_FS_PWRCLK = @as(*volatile types.peripherals.OTG_FS_PWRCLK, @ptrFromInt(0x50000e00));
            ///  Analog-to-Digital Converter
            pub const ADC = @as(*volatile types.peripherals.ADC, @ptrFromInt(0x50040000));
            ///  Analog-to-Digital Converter
            pub const ADC_Common = @as(*volatile types.peripherals.ADC_Common, @ptrFromInt(0x50040300));
            ///  Digital camera interface
            pub const DCMI = @as(*volatile types.peripherals.DCMI, @ptrFromInt(0x50050000));
            ///  Advanced encryption standard hardware accelerator
            pub const AES = @as(*volatile types.peripherals.AES, @ptrFromInt(0x50060000));
            ///  Hash processor
            pub const HASH = @as(*volatile types.peripherals.HASH, @ptrFromInt(0x50060400));
            ///  Random number generator
            pub const RNG = @as(*volatile types.peripherals.RNG, @ptrFromInt(0x50060800));
            ///  OctoSPI IO Manager
            pub const OCTOSPIM = @as(*volatile types.peripherals.OCTOSPIM, @ptrFromInt(0x50061c00));
            ///  Secure digital input/output interface
            pub const SDMMC1 = @as(*volatile types.peripherals.SDMMC1, @ptrFromInt(0x50062400));
            ///  Flexible memory controller
            pub const FMC = @as(*volatile types.peripherals.FMC, @ptrFromInt(0xa0000000));
            ///  OctoSPI
            pub const OCTOSPI1 = @as(*volatile types.peripherals.OCTOSPI1, @ptrFromInt(0xa0001000));
            ///  OctoSPI
            pub const OCTOSPI2 = @as(*volatile types.peripherals.OCTOSPI1, @ptrFromInt(0xa0001400));
            ///  System control block ACTLR
            pub const SCB_ACTRL = @as(*volatile types.peripherals.SCB_ACTRL, @ptrFromInt(0xe000e008));
            ///  SysTick timer
            pub const STK = @as(*volatile types.peripherals.STK, @ptrFromInt(0xe000e010));
            ///  Nested Vectored Interrupt Controller
            pub const NVIC = @as(*volatile types.peripherals.NVIC, @ptrFromInt(0xe000e100));
            ///  System control block
            pub const SCB = @as(*volatile types.peripherals.SCB, @ptrFromInt(0xe000ed00));
            ///  Floating point unit CPACR
            pub const FPU_CPACR = @as(*volatile types.peripherals.FPU_CPACR, @ptrFromInt(0xe000ed88));
            ///  Memory protection unit
            pub const MPU = @as(*volatile types.peripherals.MPU, @ptrFromInt(0xe000ed90));
            ///  Nested vectored interrupt controller
            pub const NVIC_STIR = @as(*volatile types.peripherals.NVIC_STIR, @ptrFromInt(0xe000ef00));
            ///  Floting point unit
            pub const FPU = @as(*volatile types.peripherals.FPU, @ptrFromInt(0xe000ef34));
            ///  Debug support
            pub const DBGMCU = @as(*volatile types.peripherals.DBGMCU, @ptrFromInt(0xe0042000));
        };
    };
};

pub const types = struct {
    pub const peripherals = struct {
        ///  Digital-to-analog converter
        pub const DAC = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  DAC channel1 enable
                EN1: u1,
                reserved2: u1,
                ///  DAC channel1 trigger enable
                TEN1: u1,
                ///  DAC channel1 trigger selection
                TSEL1: u3,
                ///  DAC channel1 noise/triangle wave generation enable
                WAVE1: u2,
                ///  DAC channel1 mask/amplitude selector
                MAMP1: u4,
                ///  DAC channel1 DMA enable
                DMAEN1: u1,
                ///  DAC channel1 DMA Underrun Interrupt enable
                DMAUDRIE1: u1,
                ///  DAC Channel 1 calibration enable
                CEN1: u1,
                reserved16: u1,
                ///  DAC channel2 enable
                EN2: u1,
                reserved18: u1,
                ///  DAC channel2 trigger enable
                TEN2: u1,
                ///  DAC channel2 trigger selection
                TSEL2: u3,
                ///  DAC channel2 noise/triangle wave generation enable
                WAVE2: u2,
                ///  DAC channel2 mask/amplitude selector
                MAMP2: u4,
                ///  DAC channel2 DMA enable
                DMAEN2: u1,
                ///  DAC channel2 DMA underrun interrupt enable
                DMAUDRIE2: u1,
                ///  DAC Channel 2 calibration enable
                CEN2: u1,
                padding: u1,
            }),
            ///  software trigger register
            SWTRIGR: mmio.Mmio(packed struct(u32) {
                ///  DAC channel1 software trigger
                SWTRIG1: u1,
                ///  DAC channel2 software trigger
                SWTRIG2: u1,
                padding: u30,
            }),
            ///  channel1 12-bit right-aligned data holding register
            DHR12R1: mmio.Mmio(packed struct(u32) {
                ///  DAC channel1 12-bit right-aligned data
                DACC1DHR: u12,
                padding: u20,
            }),
            ///  channel1 12-bit left-aligned data holding register
            DHR12L1: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  DAC channel1 12-bit left-aligned data
                DACC1DHR: u12,
                padding: u16,
            }),
            ///  channel1 8-bit right-aligned data holding register
            DHR8R1: mmio.Mmio(packed struct(u32) {
                ///  DAC channel1 8-bit right-aligned data
                DACC1DHR: u8,
                padding: u24,
            }),
            ///  channel2 12-bit right aligned data holding register
            DHR12R2: mmio.Mmio(packed struct(u32) {
                ///  DAC channel2 12-bit right-aligned data
                DACC2DHR: u12,
                padding: u20,
            }),
            ///  channel2 12-bit left aligned data holding register
            DHR12L2: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  DAC channel2 12-bit left-aligned data
                DACC2DHR: u12,
                padding: u16,
            }),
            ///  channel2 8-bit right-aligned data holding register
            DHR8R2: mmio.Mmio(packed struct(u32) {
                ///  DAC channel2 8-bit right-aligned data
                DACC2DHR: u8,
                padding: u24,
            }),
            ///  Dual DAC 12-bit right-aligned data holding register
            DHR12RD: mmio.Mmio(packed struct(u32) {
                ///  DAC channel1 12-bit right-aligned data
                DACC1DHR: u12,
                reserved16: u4,
                ///  DAC channel2 12-bit right-aligned data
                DACC2DHR: u12,
                padding: u4,
            }),
            ///  DUAL DAC 12-bit left aligned data holding register
            DHR12LD: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  DAC channel1 12-bit left-aligned data
                DACC1DHR: u12,
                reserved20: u4,
                ///  DAC channel2 12-bit left-aligned data
                DACC2DHR: u12,
            }),
            ///  DUAL DAC 8-bit right aligned data holding register
            DHR8RD: mmio.Mmio(packed struct(u32) {
                ///  DAC channel1 8-bit right-aligned data
                DACC1DHR: u8,
                ///  DAC channel2 8-bit right-aligned data
                DACC2DHR: u8,
                padding: u16,
            }),
            ///  channel1 data output register
            DOR1: mmio.Mmio(packed struct(u32) {
                ///  DAC channel1 data output
                DACC1DOR: u12,
                padding: u20,
            }),
            ///  channel2 data output register
            DOR2: mmio.Mmio(packed struct(u32) {
                ///  DAC channel2 data output
                DACC2DOR: u12,
                padding: u20,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                reserved13: u13,
                ///  DAC channel1 DMA underrun flag
                DMAUDR1: u1,
                ///  DAC Channel 1 calibration offset status
                CAL_FLAG1: u1,
                ///  DAC Channel 1 busy writing sample time flag
                BWST1: u1,
                reserved29: u13,
                ///  DAC channel2 DMA underrun flag
                DMAUDR2: u1,
                ///  DAC Channel 2 calibration offset status
                CAL_FLAG2: u1,
                ///  DAC Channel 2 busy writing sample time flag
                BWST2: u1,
            }),
            ///  calibration control register
            CCR: mmio.Mmio(packed struct(u32) {
                ///  DAC Channel 1 offset trimming value
                OTRIM1: u5,
                reserved16: u11,
                ///  DAC Channel 2 offset trimming value
                OTRIM2: u5,
                padding: u11,
            }),
            ///  mode control register
            MCR: mmio.Mmio(packed struct(u32) {
                ///  DAC Channel 1 mode
                MODE1: u3,
                reserved16: u13,
                ///  DAC Channel 2 mode
                MODE2: u3,
                padding: u13,
            }),
            ///  Sample and Hold sample time register 1
            SHSR1: mmio.Mmio(packed struct(u32) {
                ///  DAC Channel 1 sample Time
                TSAMPLE1: u10,
                padding: u22,
            }),
            ///  Sample and Hold sample time register 2
            SHSR2: mmio.Mmio(packed struct(u32) {
                ///  DAC Channel 2 sample Time
                TSAMPLE2: u10,
                padding: u22,
            }),
            ///  Sample and Hold hold time register
            SHHR: mmio.Mmio(packed struct(u32) {
                ///  DAC Channel 1 hold Time
                THOLD1: u10,
                reserved16: u6,
                ///  DAC Channel 2 hold time
                THOLD2: u10,
                padding: u6,
            }),
            ///  Sample and Hold refresh time register
            SHRR: mmio.Mmio(packed struct(u32) {
                ///  DAC Channel 1 refresh Time
                TREFRESH1: u8,
                reserved16: u8,
                ///  DAC Channel 2 refresh Time
                TREFRESH2: u8,
                padding: u8,
            }),
        };

        ///  Direct memory access controller
        pub const DMA1 = extern struct {
            ///  interrupt status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  Channel x global interrupt flag (x = 1 ..7)
                GIF1: u1,
                ///  Channel x transfer complete flag (x = 1 ..7)
                TCIF1: u1,
                ///  Channel x half transfer flag (x = 1 ..7)
                HTIF1: u1,
                ///  Channel x transfer error flag (x = 1 ..7)
                TEIF1: u1,
                ///  Channel x global interrupt flag (x = 1 ..7)
                GIF2: u1,
                ///  Channel x transfer complete flag (x = 1 ..7)
                TCIF2: u1,
                ///  Channel x half transfer flag (x = 1 ..7)
                HTIF2: u1,
                ///  Channel x transfer error flag (x = 1 ..7)
                TEIF2: u1,
                ///  Channel x global interrupt flag (x = 1 ..7)
                GIF3: u1,
                ///  Channel x transfer complete flag (x = 1 ..7)
                TCIF3: u1,
                ///  Channel x half transfer flag (x = 1 ..7)
                HTIF3: u1,
                ///  Channel x transfer error flag (x = 1 ..7)
                TEIF3: u1,
                ///  Channel x global interrupt flag (x = 1 ..7)
                GIF4: u1,
                ///  Channel x transfer complete flag (x = 1 ..7)
                TCIF4: u1,
                ///  Channel x half transfer flag (x = 1 ..7)
                HTIF4: u1,
                ///  Channel x transfer error flag (x = 1 ..7)
                TEIF4: u1,
                ///  Channel x global interrupt flag (x = 1 ..7)
                GIF5: u1,
                ///  Channel x transfer complete flag (x = 1 ..7)
                TCIF5: u1,
                ///  Channel x half transfer flag (x = 1 ..7)
                HTIF5: u1,
                ///  Channel x transfer error flag (x = 1 ..7)
                TEIF5: u1,
                ///  Channel x global interrupt flag (x = 1 ..7)
                GIF6: u1,
                ///  Channel x transfer complete flag (x = 1 ..7)
                TCIF6: u1,
                ///  Channel x half transfer flag (x = 1 ..7)
                HTIF6: u1,
                ///  Channel x transfer error flag (x = 1 ..7)
                TEIF6: u1,
                ///  Channel x global interrupt flag (x = 1 ..7)
                GIF7: u1,
                ///  Channel x transfer complete flag (x = 1 ..7)
                TCIF7: u1,
                ///  Channel x half transfer flag (x = 1 ..7)
                HTIF7: u1,
                ///  Channel x transfer error flag (x = 1 ..7)
                TEIF7: u1,
                padding: u4,
            }),
            ///  interrupt flag clear register
            IFCR: mmio.Mmio(packed struct(u32) {
                ///  Channel x global interrupt clear (x = 1 ..7)
                CGIF1: u1,
                ///  Channel x transfer complete clear (x = 1 ..7)
                CTCIF1: u1,
                ///  Channel x half transfer clear (x = 1 ..7)
                CHTIF1: u1,
                ///  Channel x transfer error clear (x = 1 ..7)
                CTEIF1: u1,
                ///  Channel x global interrupt clear (x = 1 ..7)
                CGIF2: u1,
                ///  Channel x transfer complete clear (x = 1 ..7)
                CTCIF2: u1,
                ///  Channel x half transfer clear (x = 1 ..7)
                CHTIF2: u1,
                ///  Channel x transfer error clear (x = 1 ..7)
                CTEIF2: u1,
                ///  Channel x global interrupt clear (x = 1 ..7)
                CGIF3: u1,
                ///  Channel x transfer complete clear (x = 1 ..7)
                CTCIF3: u1,
                ///  Channel x half transfer clear (x = 1 ..7)
                CHTIF3: u1,
                ///  Channel x transfer error clear (x = 1 ..7)
                CTEIF3: u1,
                ///  Channel x global interrupt clear (x = 1 ..7)
                CGIF4: u1,
                ///  Channel x transfer complete clear (x = 1 ..7)
                CTCIF4: u1,
                ///  Channel x half transfer clear (x = 1 ..7)
                CHTIF4: u1,
                ///  Channel x transfer error clear (x = 1 ..7)
                CTEIF4: u1,
                ///  Channel x global interrupt clear (x = 1 ..7)
                CGIF5: u1,
                ///  Channel x transfer complete clear (x = 1 ..7)
                CTCIF5: u1,
                ///  Channel x half transfer clear (x = 1 ..7)
                CHTIF5: u1,
                ///  Channel x transfer error clear (x = 1 ..7)
                CTEIF5: u1,
                ///  Channel x global interrupt clear (x = 1 ..7)
                CGIF6: u1,
                ///  Channel x transfer complete clear (x = 1 ..7)
                CTCIF6: u1,
                ///  Channel x half transfer clear (x = 1 ..7)
                CHTIF6: u1,
                ///  Channel x transfer error clear (x = 1 ..7)
                CTEIF6: u1,
                ///  Channel x global interrupt clear (x = 1 ..7)
                CGIF7: u1,
                ///  Channel x transfer complete clear (x = 1 ..7)
                CTCIF7: u1,
                ///  Channel x half transfer clear (x = 1 ..7)
                CHTIF7: u1,
                ///  Channel x transfer error clear (x = 1 ..7)
                CTEIF7: u1,
                padding: u4,
            }),
            ///  channel x configuration register
            CCR1: mmio.Mmio(packed struct(u32) {
                ///  Channel enable
                EN: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Half transfer interrupt enable
                HTIE: u1,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Data transfer direction
                DIR: u1,
                ///  Circular mode
                CIRC: u1,
                ///  Peripheral increment mode
                PINC: u1,
                ///  Memory increment mode
                MINC: u1,
                ///  Peripheral size
                PSIZE: u2,
                ///  Memory size
                MSIZE: u2,
                ///  Channel priority level
                PL: u2,
                ///  Memory to memory mode
                MEM2MEM: u1,
                padding: u17,
            }),
            ///  channel x number of data register
            CNDTR1: mmio.Mmio(packed struct(u32) {
                ///  Number of data to transfer
                NDT: u16,
                padding: u16,
            }),
            ///  channel x peripheral address register
            CPAR1: mmio.Mmio(packed struct(u32) {
                ///  Peripheral address
                PA: u32,
            }),
            ///  channel x memory address register
            CMAR1: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            reserved28: [4]u8,
            ///  channel x configuration register
            CCR2: mmio.Mmio(packed struct(u32) {
                ///  Channel enable
                EN: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Half transfer interrupt enable
                HTIE: u1,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Data transfer direction
                DIR: u1,
                ///  Circular mode
                CIRC: u1,
                ///  Peripheral increment mode
                PINC: u1,
                ///  Memory increment mode
                MINC: u1,
                ///  Peripheral size
                PSIZE: u2,
                ///  Memory size
                MSIZE: u2,
                ///  Channel priority level
                PL: u2,
                ///  Memory to memory mode
                MEM2MEM: u1,
                padding: u17,
            }),
            ///  channel x number of data register
            CNDTR2: mmio.Mmio(packed struct(u32) {
                ///  Number of data to transfer
                NDT: u16,
                padding: u16,
            }),
            ///  channel x peripheral address register
            CPAR2: mmio.Mmio(packed struct(u32) {
                ///  Peripheral address
                PA: u32,
            }),
            ///  channel x memory address register
            CMAR2: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            reserved48: [4]u8,
            ///  channel x configuration register
            CCR3: mmio.Mmio(packed struct(u32) {
                ///  Channel enable
                EN: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Half transfer interrupt enable
                HTIE: u1,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Data transfer direction
                DIR: u1,
                ///  Circular mode
                CIRC: u1,
                ///  Peripheral increment mode
                PINC: u1,
                ///  Memory increment mode
                MINC: u1,
                ///  Peripheral size
                PSIZE: u2,
                ///  Memory size
                MSIZE: u2,
                ///  Channel priority level
                PL: u2,
                ///  Memory to memory mode
                MEM2MEM: u1,
                padding: u17,
            }),
            ///  channel x number of data register
            CNDTR3: mmio.Mmio(packed struct(u32) {
                ///  Number of data to transfer
                NDT: u16,
                padding: u16,
            }),
            ///  channel x peripheral address register
            CPAR3: mmio.Mmio(packed struct(u32) {
                ///  Peripheral address
                PA: u32,
            }),
            ///  channel x memory address register
            CMAR3: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            reserved68: [4]u8,
            ///  channel x configuration register
            CCR4: mmio.Mmio(packed struct(u32) {
                ///  Channel enable
                EN: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Half transfer interrupt enable
                HTIE: u1,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Data transfer direction
                DIR: u1,
                ///  Circular mode
                CIRC: u1,
                ///  Peripheral increment mode
                PINC: u1,
                ///  Memory increment mode
                MINC: u1,
                ///  Peripheral size
                PSIZE: u2,
                ///  Memory size
                MSIZE: u2,
                ///  Channel priority level
                PL: u2,
                ///  Memory to memory mode
                MEM2MEM: u1,
                padding: u17,
            }),
            ///  channel x number of data register
            CNDTR4: mmio.Mmio(packed struct(u32) {
                ///  Number of data to transfer
                NDT: u16,
                padding: u16,
            }),
            ///  channel x peripheral address register
            CPAR4: mmio.Mmio(packed struct(u32) {
                ///  Peripheral address
                PA: u32,
            }),
            ///  channel x memory address register
            CMAR4: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            reserved88: [4]u8,
            ///  channel x configuration register
            CCR5: mmio.Mmio(packed struct(u32) {
                ///  Channel enable
                EN: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Half transfer interrupt enable
                HTIE: u1,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Data transfer direction
                DIR: u1,
                ///  Circular mode
                CIRC: u1,
                ///  Peripheral increment mode
                PINC: u1,
                ///  Memory increment mode
                MINC: u1,
                ///  Peripheral size
                PSIZE: u2,
                ///  Memory size
                MSIZE: u2,
                ///  Channel priority level
                PL: u2,
                ///  Memory to memory mode
                MEM2MEM: u1,
                padding: u17,
            }),
            ///  channel x number of data register
            CNDTR5: mmio.Mmio(packed struct(u32) {
                ///  Number of data to transfer
                NDT: u16,
                padding: u16,
            }),
            ///  channel x peripheral address register
            CPAR5: mmio.Mmio(packed struct(u32) {
                ///  Peripheral address
                PA: u32,
            }),
            ///  channel x memory address register
            CMAR5: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            reserved108: [4]u8,
            ///  channel x configuration register
            CCR6: mmio.Mmio(packed struct(u32) {
                ///  Channel enable
                EN: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Half transfer interrupt enable
                HTIE: u1,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Data transfer direction
                DIR: u1,
                ///  Circular mode
                CIRC: u1,
                ///  Peripheral increment mode
                PINC: u1,
                ///  Memory increment mode
                MINC: u1,
                ///  Peripheral size
                PSIZE: u2,
                ///  Memory size
                MSIZE: u2,
                ///  Channel priority level
                PL: u2,
                ///  Memory to memory mode
                MEM2MEM: u1,
                padding: u17,
            }),
            ///  channel x number of data register
            CNDTR6: mmio.Mmio(packed struct(u32) {
                ///  Number of data to transfer
                NDT: u16,
                padding: u16,
            }),
            ///  channel x peripheral address register
            CPAR6: mmio.Mmio(packed struct(u32) {
                ///  Peripheral address
                PA: u32,
            }),
            ///  channel x memory address register
            CMAR6: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            reserved128: [4]u8,
            ///  channel x configuration register
            CCR7: mmio.Mmio(packed struct(u32) {
                ///  Channel enable
                EN: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Half transfer interrupt enable
                HTIE: u1,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Data transfer direction
                DIR: u1,
                ///  Circular mode
                CIRC: u1,
                ///  Peripheral increment mode
                PINC: u1,
                ///  Memory increment mode
                MINC: u1,
                ///  Peripheral size
                PSIZE: u2,
                ///  Memory size
                MSIZE: u2,
                ///  Channel priority level
                PL: u2,
                ///  Memory to memory mode
                MEM2MEM: u1,
                padding: u17,
            }),
            ///  channel x number of data register
            CNDTR7: mmio.Mmio(packed struct(u32) {
                ///  Number of data to transfer
                NDT: u16,
                padding: u16,
            }),
            ///  channel x peripheral address register
            CPAR7: mmio.Mmio(packed struct(u32) {
                ///  Peripheral address
                PA: u32,
            }),
            ///  channel x memory address register
            CMAR7: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            reserved168: [24]u8,
            ///  channel selection register
            CSELR: mmio.Mmio(packed struct(u32) {
                ///  DMA channel 1 selection
                C1S: u4,
                ///  DMA channel 2 selection
                C2S: u4,
                ///  DMA channel 3 selection
                C3S: u4,
                ///  DMA channel 4 selection
                C4S: u4,
                ///  DMA channel 5 selection
                C5S: u4,
                ///  DMA channel 6 selection
                C6S: u4,
                ///  DMA channel 7 selection
                C7S: u4,
                padding: u4,
            }),
        };

        ///  System control block ACTLR
        pub const SCB_ACTRL = extern struct {
            ///  Auxiliary control register
            ACTRL: mmio.Mmio(packed struct(u32) {
                ///  DISMCYCINT
                DISMCYCINT: u1,
                ///  DISDEFWBUF
                DISDEFWBUF: u1,
                ///  DISFOLD
                DISFOLD: u1,
                reserved8: u5,
                ///  DISFPCA
                DISFPCA: u1,
                ///  DISOOFP
                DISOOFP: u1,
                padding: u22,
            }),
        };

        ///  Cyclic redundancy check calculation unit
        pub const CRC = extern struct {
            ///  Data register
            DR: mmio.Mmio(packed struct(u32) {
                ///  Data register bits
                DR: u32,
            }),
            ///  Independent data register
            IDR: mmio.Mmio(packed struct(u32) {
                ///  General-purpose 8-bit data register bits
                IDR: u8,
                padding: u24,
            }),
            ///  Control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  RESET bit
                RESET: u1,
                reserved3: u2,
                ///  Polynomial size
                POLYSIZE: u2,
                ///  Reverse input data
                REV_IN: u2,
                ///  Reverse output data
                REV_OUT: u1,
                padding: u24,
            }),
            reserved16: [4]u8,
            ///  Initial CRC value
            INIT: mmio.Mmio(packed struct(u32) {
                ///  Programmable initial CRC value
                CRC_INIT: u32,
            }),
            ///  polynomial
            POL: mmio.Mmio(packed struct(u32) {
                ///  Programmable polynomial
                Polynomialcoefficients: u32,
            }),
        };

        ///  Liquid crystal display controller
        pub const LTCD = extern struct {
            reserved8: [8]u8,
            ///  LTDC Synchronization Size Configuration Register
            SSCR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Synchronization Height (in units of horizontal scan line)
                VSH: u11,
                reserved16: u5,
                ///  Horizontal Synchronization Width (in units of pixel clock period)
                HSW: u12,
                padding: u4,
            }),
            ///  LTDC Back Porch Configuration Register
            BPCR: mmio.Mmio(packed struct(u32) {
                ///  Accumulated Vertical back porch (in units of horizontal scan line)
                AVBP: u11,
                reserved16: u5,
                ///  Accumulated Horizontal back porch (in units of pixel clock period)
                AHBP: u12,
                padding: u4,
            }),
            ///  LTDC Active Width Configuration Register
            AWCR: mmio.Mmio(packed struct(u32) {
                ///  Accumulated Active Height (in units of horizontal scan line)
                AAH: u11,
                reserved16: u5,
                ///  Accumulated Active Width (in units of pixel clock period)
                AAW: u12,
                padding: u4,
            }),
            ///  LTDC Total Width Configuration Register
            TWCR: mmio.Mmio(packed struct(u32) {
                ///  Total Height (in units of horizontal scan line)
                TOTALH: u11,
                reserved16: u5,
                ///  Total Width (in units of pixel clock period)
                TOTALW: u12,
                padding: u4,
            }),
            ///  LTDC Global Control Register
            GCR: mmio.Mmio(packed struct(u32) {
                ///  LCD-TFT controller enable bit
                LTDCEN: u1,
                reserved4: u3,
                ///  Dither Blue Width
                DBW: u3,
                reserved8: u1,
                ///  Dither Green Width
                DGW: u3,
                reserved12: u1,
                ///  Dither Red Width
                DRW: u3,
                reserved16: u1,
                ///  Dither Enable
                DEN: u1,
                reserved28: u11,
                ///  Pixel Clock Polarity
                PCPOL: u1,
                ///  Not Data Enable Polarity
                DEPOL: u1,
                ///  Vertical Synchronization Polarity
                VSPOL: u1,
                ///  Horizontal Synchronization Polarity
                HSPOL: u1,
            }),
            reserved36: [8]u8,
            ///  LTDC Shadow Reload Configuration Register
            SRCR: mmio.Mmio(packed struct(u32) {
                ///  Immediate Reload
                IMR: u1,
                ///  Vertical Blanking Reload
                VBR: u1,
                padding: u30,
            }),
            reserved44: [4]u8,
            ///  LTDC Background Color Configuration Register
            BCCR: mmio.Mmio(packed struct(u32) {
                ///  Background Color Blue value
                BCBLUE: u8,
                ///  Background Color Green value
                BCGREEN: u8,
                ///  Background Color Red value
                BCRED: u8,
                padding: u8,
            }),
            reserved52: [4]u8,
            ///  LTDC Interrupt Enable Register
            IER: mmio.Mmio(packed struct(u32) {
                ///  Line Interrupt Enable
                LIE: u1,
                ///  FIFO Underrun Interrupt Enable
                FUIE: u1,
                ///  Transfer Error Interrupt Enable
                TERRIE: u1,
                ///  Register Reload interrupt enable
                RRIE: u1,
                padding: u28,
            }),
            ///  LTDC Interrupt Status Register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  Line Interrupt flag
                LIF: u1,
                ///  FIFO Underrun Interrupt flag
                FUIF: u1,
                ///  Transfer Error interrupt flag
                TERRIF: u1,
                ///  Register Reload Interrupt Flag
                RRIF: u1,
                padding: u28,
            }),
            ///  LTDC Interrupt Clear Register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  Clears the Line Interrupt Flag
                CLIF: u1,
                ///  Clears the FIFO Underrun Interrupt flag
                CFUIF: u1,
                ///  Clears the Transfer Error Interrupt Flag
                CTERRIF: u1,
                ///  Clears Register Reload Interrupt Flag
                CRRIF: u1,
                padding: u28,
            }),
            ///  LTDC Line Interrupt Position Configuration Register
            LIPCR: mmio.Mmio(packed struct(u32) {
                ///  Line Interrupt Position
                LIPOS: u11,
                padding: u21,
            }),
            ///  LTDC Current Position Status Register
            CPSR: mmio.Mmio(packed struct(u32) {
                ///  Current Y Position
                CYPOS: u16,
                ///  Current X Position
                CXPOS: u16,
            }),
            ///  LTDC Current Display Status Register
            CDSR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Data Enable display Status
                VDES: u1,
                ///  Horizontal Data Enable display Status
                HDES: u1,
                ///  Vertical Synchronization display Status
                VSYNCS: u1,
                ///  Horizontal Synchronization display Status
                HSYNCS: u1,
                padding: u28,
            }),
            reserved132: [56]u8,
            ///  LTDC Layer Control Register
            L1CR: mmio.Mmio(packed struct(u32) {
                ///  Layer Enable
                LEN: u1,
                ///  Color Keying Enable
                COLKEN: u1,
                reserved4: u2,
                ///  Color Look-Up Table Enable
                CLUTEN: u1,
                padding: u27,
            }),
            ///  LTDC Layer Window Horizontal Position Configuration Register
            L1WHPCR: mmio.Mmio(packed struct(u32) {
                ///  Window Horizontal Start Position
                WHSTPOS: u12,
                reserved16: u4,
                ///  Window Horizontal Stop Position
                WHSPPOS: u12,
                padding: u4,
            }),
            ///  LTDC Layer Window Vertical Position Configuration Register
            L1WVPCR: mmio.Mmio(packed struct(u32) {
                ///  Window Vertical Start Position
                WVSTPOS: u11,
                reserved16: u5,
                ///  Window Vertical Stop Position
                WVSPPOS: u11,
                padding: u5,
            }),
            ///  LTDC Layer Color Keying Configuration Register
            L1CKCR: mmio.Mmio(packed struct(u32) {
                ///  Color Key Blue value
                CKBLUE: u8,
                ///  Color Key Green value
                CKGREEN: u8,
                ///  Color Key Red value
                CKRED: u8,
                padding: u8,
            }),
            ///  LTDC Layer Pixel Format Configuration Register
            L1PFCR: mmio.Mmio(packed struct(u32) {
                ///  Pixel Format
                PF: u3,
                padding: u29,
            }),
            ///  LTDC Layer Constant Alpha Configuration Register
            L1CACR: mmio.Mmio(packed struct(u32) {
                ///  Constant Alpha
                CONSTA: u8,
                padding: u24,
            }),
            ///  LTDC Layer Default Color Configuration Register
            L1DCCR: mmio.Mmio(packed struct(u32) {
                ///  Default Color Blue
                DCBLUE: u8,
                ///  Default Color Green
                DCGREEN: u8,
                ///  Default Color Red
                DCRED: u8,
                ///  Default Color Alpha
                DCALPHA: u8,
            }),
            ///  LTDC Layer Blending Factors Configuration Register
            L1BFCR: mmio.Mmio(packed struct(u32) {
                ///  Blending Factor 2
                BF2: u3,
                reserved8: u5,
                ///  Blending Factor 1
                BF1: u3,
                padding: u21,
            }),
            reserved172: [8]u8,
            ///  LTDC Layer Color Frame Buffer Address Register
            L1CFBAR: mmio.Mmio(packed struct(u32) {
                ///  Color Frame Buffer Start Address
                CFBADD: u32,
            }),
            ///  LTDC Layer Color Frame Buffer Length Register
            L1CFBLR: mmio.Mmio(packed struct(u32) {
                ///  Color Frame Buffer Line Length
                CFBLL: u13,
                reserved16: u3,
                ///  Color Frame Buffer Pitch in bytes
                CFBP: u13,
                padding: u3,
            }),
            ///  LTDC Layer ColorFrame Buffer Line Number Register
            L1CFBLNR: mmio.Mmio(packed struct(u32) {
                ///  Frame Buffer Line Number
                CFBLNBR: u11,
                padding: u21,
            }),
            reserved196: [12]u8,
            ///  LTDC Layerx CLUT Write Register
            L1CLUTWR: mmio.Mmio(packed struct(u32) {
                ///  Blue value
                BLUE: u8,
                ///  Green value
                GREEN: u8,
                ///  Red value
                RED: u8,
                ///  CLUT Address
                CLUTADD: u8,
            }),
            reserved260: [60]u8,
            ///  LTDC Layer Control Register
            L2CR: mmio.Mmio(packed struct(u32) {
                ///  Layer Enable
                LEN: u1,
                ///  Color Keying Enable
                COLKEN: u1,
                reserved4: u2,
                ///  Color Look-Up Table Enable
                CLUTEN: u1,
                padding: u27,
            }),
            ///  LTDC Layerx Window Horizontal Position Configuration Register
            L2WHPCR: mmio.Mmio(packed struct(u32) {
                ///  Window Horizontal Start Position
                WHSTPOS: u12,
                reserved16: u4,
                ///  Window Horizontal Stop Position
                WHSPPOS: u12,
                padding: u4,
            }),
            ///  LTDC Layer Window Vertical Position Configuration Register
            L2WVPCR: mmio.Mmio(packed struct(u32) {
                ///  Window Vertical Start Position
                WVSTPOS: u11,
                reserved16: u5,
                ///  Window Vertical Stop Position
                WVSPPOS: u11,
                padding: u5,
            }),
            ///  LTDC Layer Color Keying Configuration Register
            L2CKCR: mmio.Mmio(packed struct(u32) {
                ///  Color Key Blue value
                CKBLUE: u8,
                ///  Color Key Green value
                CKGREEN: u8,
                ///  Color Key Red value
                CKRED: u8,
                padding: u8,
            }),
            ///  LTDC Layer Pixel Format Configuration Register
            L2PFCR: mmio.Mmio(packed struct(u32) {
                ///  Pixel Format
                PF: u3,
                padding: u29,
            }),
            ///  LTDC Layer Constant Alpha Configuration Register
            L2CACR: mmio.Mmio(packed struct(u32) {
                ///  Constant Alpha
                CONSTA: u8,
                padding: u24,
            }),
            ///  LTDC Layer Default Color Configuration Register
            L2DCCR: mmio.Mmio(packed struct(u32) {
                ///  Default Color Blue
                DCBLUE: u8,
                ///  Default Color Green
                DCGREEN: u8,
                ///  Default Color Red
                DCRED: u8,
                ///  Default Color Alpha
                DCALPHA: u8,
            }),
            reserved292: [4]u8,
            ///  LTDC Layer Blending Factors Configuration Register
            L2BFCR: mmio.Mmio(packed struct(u32) {
                ///  Blending Factor 2
                BF2: u3,
                reserved8: u5,
                ///  Blending Factor 1
                BF1: u3,
                padding: u21,
            }),
            reserved300: [4]u8,
            ///  LTDC Layer Color Frame Buffer Address Register
            L2CFBAR: mmio.Mmio(packed struct(u32) {
                ///  Color Frame Buffer Start Address
                CFBADD: u32,
            }),
            ///  LTDC Layer Color Frame Buffer Length Register
            L2CFBLR: mmio.Mmio(packed struct(u32) {
                ///  Color Frame Buffer Line Length
                CFBLL: u13,
                reserved16: u3,
                ///  Color Frame Buffer Pitch in bytes
                CFBP: u13,
                padding: u3,
            }),
            ///  LTDC Layer ColorFrame Buffer Line Number Register
            L2CFBLNR: mmio.Mmio(packed struct(u32) {
                ///  Frame Buffer Line Number
                CFBLNBR: u11,
                padding: u21,
            }),
            reserved324: [12]u8,
            ///  LTDC Layerx CLUT Write Register
            L2CLUTWR: mmio.Mmio(packed struct(u32) {
                ///  Blue value
                BLUE: u8,
                ///  Green value
                GREEN: u8,
                ///  Red value
                RED: u8,
                ///  CLUT Address
                CLUTADD: u8,
            }),
        };

        ///  Touch sensing controller
        pub const TSC = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Touch sensing controller enable
                TSCE: u1,
                ///  Start a new acquisition
                START: u1,
                ///  Acquisition mode
                AM: u1,
                ///  Synchronization pin polarity
                SYNCPOL: u1,
                ///  I/O Default mode
                IODEF: u1,
                ///  Max count value
                MCV: u3,
                reserved12: u4,
                ///  pulse generator prescaler
                PGPSC: u3,
                ///  Spread spectrum prescaler
                SSPSC: u1,
                ///  Spread spectrum enable
                SSE: u1,
                ///  Spread spectrum deviation
                SSD: u7,
                ///  Charge transfer pulse low
                CTPL: u4,
                ///  Charge transfer pulse high
                CTPH: u4,
            }),
            ///  interrupt enable register
            IER: mmio.Mmio(packed struct(u32) {
                ///  End of acquisition interrupt enable
                EOAIE: u1,
                ///  Max count error interrupt enable
                MCEIE: u1,
                padding: u30,
            }),
            ///  interrupt clear register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  End of acquisition interrupt clear
                EOAIC: u1,
                ///  Max count error interrupt clear
                MCEIC: u1,
                padding: u30,
            }),
            ///  interrupt status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  End of acquisition flag
                EOAF: u1,
                ///  Max count error flag
                MCEF: u1,
                padding: u30,
            }),
            ///  I/O hysteresis control register
            IOHCR: mmio.Mmio(packed struct(u32) {
                ///  G1_IO1
                G1_IO1: u1,
                ///  G1_IO2
                G1_IO2: u1,
                ///  G1_IO3
                G1_IO3: u1,
                ///  G1_IO4
                G1_IO4: u1,
                ///  G2_IO1
                G2_IO1: u1,
                ///  G2_IO2
                G2_IO2: u1,
                ///  G2_IO3
                G2_IO3: u1,
                ///  G2_IO4
                G2_IO4: u1,
                ///  G3_IO1
                G3_IO1: u1,
                ///  G3_IO2
                G3_IO2: u1,
                ///  G3_IO3
                G3_IO3: u1,
                ///  G3_IO4
                G3_IO4: u1,
                ///  G4_IO1
                G4_IO1: u1,
                ///  G4_IO2
                G4_IO2: u1,
                ///  G4_IO3
                G4_IO3: u1,
                ///  G4_IO4
                G4_IO4: u1,
                ///  G5_IO1
                G5_IO1: u1,
                ///  G5_IO2
                G5_IO2: u1,
                ///  G5_IO3
                G5_IO3: u1,
                ///  G5_IO4
                G5_IO4: u1,
                ///  G6_IO1
                G6_IO1: u1,
                ///  G6_IO2
                G6_IO2: u1,
                ///  G6_IO3
                G6_IO3: u1,
                ///  G6_IO4
                G6_IO4: u1,
                ///  G7_IO1
                G7_IO1: u1,
                ///  G7_IO2
                G7_IO2: u1,
                ///  G7_IO3
                G7_IO3: u1,
                ///  G7_IO4
                G7_IO4: u1,
                ///  G8_IO1
                G8_IO1: u1,
                ///  G8_IO2
                G8_IO2: u1,
                ///  G8_IO3
                G8_IO3: u1,
                ///  G8_IO4
                G8_IO4: u1,
            }),
            reserved24: [4]u8,
            ///  I/O analog switch control register
            IOASCR: mmio.Mmio(packed struct(u32) {
                ///  G1_IO1
                G1_IO1: u1,
                ///  G1_IO2
                G1_IO2: u1,
                ///  G1_IO3
                G1_IO3: u1,
                ///  G1_IO4
                G1_IO4: u1,
                ///  G2_IO1
                G2_IO1: u1,
                ///  G2_IO2
                G2_IO2: u1,
                ///  G2_IO3
                G2_IO3: u1,
                ///  G2_IO4
                G2_IO4: u1,
                ///  G3_IO1
                G3_IO1: u1,
                ///  G3_IO2
                G3_IO2: u1,
                ///  G3_IO3
                G3_IO3: u1,
                ///  G3_IO4
                G3_IO4: u1,
                ///  G4_IO1
                G4_IO1: u1,
                ///  G4_IO2
                G4_IO2: u1,
                ///  G4_IO3
                G4_IO3: u1,
                ///  G4_IO4
                G4_IO4: u1,
                ///  G5_IO1
                G5_IO1: u1,
                ///  G5_IO2
                G5_IO2: u1,
                ///  G5_IO3
                G5_IO3: u1,
                ///  G5_IO4
                G5_IO4: u1,
                ///  G6_IO1
                G6_IO1: u1,
                ///  G6_IO2
                G6_IO2: u1,
                ///  G6_IO3
                G6_IO3: u1,
                ///  G6_IO4
                G6_IO4: u1,
                ///  G7_IO1
                G7_IO1: u1,
                ///  G7_IO2
                G7_IO2: u1,
                ///  G7_IO3
                G7_IO3: u1,
                ///  G7_IO4
                G7_IO4: u1,
                ///  G8_IO1
                G8_IO1: u1,
                ///  G8_IO2
                G8_IO2: u1,
                ///  G8_IO3
                G8_IO3: u1,
                ///  G8_IO4
                G8_IO4: u1,
            }),
            reserved32: [4]u8,
            ///  I/O sampling control register
            IOSCR: mmio.Mmio(packed struct(u32) {
                ///  G1_IO1
                G1_IO1: u1,
                ///  G1_IO2
                G1_IO2: u1,
                ///  G1_IO3
                G1_IO3: u1,
                ///  G1_IO4
                G1_IO4: u1,
                ///  G2_IO1
                G2_IO1: u1,
                ///  G2_IO2
                G2_IO2: u1,
                ///  G2_IO3
                G2_IO3: u1,
                ///  G2_IO4
                G2_IO4: u1,
                ///  G3_IO1
                G3_IO1: u1,
                ///  G3_IO2
                G3_IO2: u1,
                ///  G3_IO3
                G3_IO3: u1,
                ///  G3_IO4
                G3_IO4: u1,
                ///  G4_IO1
                G4_IO1: u1,
                ///  G4_IO2
                G4_IO2: u1,
                ///  G4_IO3
                G4_IO3: u1,
                ///  G4_IO4
                G4_IO4: u1,
                ///  G5_IO1
                G5_IO1: u1,
                ///  G5_IO2
                G5_IO2: u1,
                ///  G5_IO3
                G5_IO3: u1,
                ///  G5_IO4
                G5_IO4: u1,
                ///  G6_IO1
                G6_IO1: u1,
                ///  G6_IO2
                G6_IO2: u1,
                ///  G6_IO3
                G6_IO3: u1,
                ///  G6_IO4
                G6_IO4: u1,
                ///  G7_IO1
                G7_IO1: u1,
                ///  G7_IO2
                G7_IO2: u1,
                ///  G7_IO3
                G7_IO3: u1,
                ///  G7_IO4
                G7_IO4: u1,
                ///  G8_IO1
                G8_IO1: u1,
                ///  G8_IO2
                G8_IO2: u1,
                ///  G8_IO3
                G8_IO3: u1,
                ///  G8_IO4
                G8_IO4: u1,
            }),
            reserved40: [4]u8,
            ///  I/O channel control register
            IOCCR: mmio.Mmio(packed struct(u32) {
                ///  G1_IO1
                G1_IO1: u1,
                ///  G1_IO2
                G1_IO2: u1,
                ///  G1_IO3
                G1_IO3: u1,
                ///  G1_IO4
                G1_IO4: u1,
                ///  G2_IO1
                G2_IO1: u1,
                ///  G2_IO2
                G2_IO2: u1,
                ///  G2_IO3
                G2_IO3: u1,
                ///  G2_IO4
                G2_IO4: u1,
                ///  G3_IO1
                G3_IO1: u1,
                ///  G3_IO2
                G3_IO2: u1,
                ///  G3_IO3
                G3_IO3: u1,
                ///  G3_IO4
                G3_IO4: u1,
                ///  G4_IO1
                G4_IO1: u1,
                ///  G4_IO2
                G4_IO2: u1,
                ///  G4_IO3
                G4_IO3: u1,
                ///  G4_IO4
                G4_IO4: u1,
                ///  G5_IO1
                G5_IO1: u1,
                ///  G5_IO2
                G5_IO2: u1,
                ///  G5_IO3
                G5_IO3: u1,
                ///  G5_IO4
                G5_IO4: u1,
                ///  G6_IO1
                G6_IO1: u1,
                ///  G6_IO2
                G6_IO2: u1,
                ///  G6_IO3
                G6_IO3: u1,
                ///  G6_IO4
                G6_IO4: u1,
                ///  G7_IO1
                G7_IO1: u1,
                ///  G7_IO2
                G7_IO2: u1,
                ///  G7_IO3
                G7_IO3: u1,
                ///  G7_IO4
                G7_IO4: u1,
                ///  G8_IO1
                G8_IO1: u1,
                ///  G8_IO2
                G8_IO2: u1,
                ///  G8_IO3
                G8_IO3: u1,
                ///  G8_IO4
                G8_IO4: u1,
            }),
            reserved48: [4]u8,
            ///  I/O group control status register
            IOGCSR: mmio.Mmio(packed struct(u32) {
                ///  Analog I/O group x enable
                G1E: u1,
                ///  Analog I/O group x enable
                G2E: u1,
                ///  Analog I/O group x enable
                G3E: u1,
                ///  Analog I/O group x enable
                G4E: u1,
                ///  Analog I/O group x enable
                G5E: u1,
                ///  Analog I/O group x enable
                G6E: u1,
                ///  Analog I/O group x enable
                G7E: u1,
                ///  Analog I/O group x enable
                G8E: u1,
                reserved16: u8,
                ///  Analog I/O group x status
                G1S: u1,
                ///  Analog I/O group x status
                G2S: u1,
                ///  Analog I/O group x status
                G3S: u1,
                ///  Analog I/O group x status
                G4S: u1,
                ///  Analog I/O group x status
                G5S: u1,
                ///  Analog I/O group x status
                G6S: u1,
                ///  Analog I/O group x status
                G7S: u1,
                ///  Analog I/O group x status
                G8S: u1,
                padding: u8,
            }),
            ///  I/O group x counter register
            IOG1CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
            ///  I/O group x counter register
            IOG2CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
            ///  I/O group x counter register
            IOG3CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
            ///  I/O group x counter register
            IOG4CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
            ///  I/O group x counter register
            IOG5CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
            ///  I/O group x counter register
            IOG6CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
            ///  I/O group x counter register
            IOG7CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
            ///  I/O group x counter register
            IOG8CR: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u14,
                padding: u18,
            }),
        };

        ///  Independent watchdog
        pub const IWDG = extern struct {
            ///  Key register
            KR: mmio.Mmio(packed struct(u32) {
                ///  Key value (write only, read 0x0000)
                KEY: u16,
                padding: u16,
            }),
            ///  Prescaler register
            PR: mmio.Mmio(packed struct(u32) {
                ///  Prescaler divider
                PR: u3,
                padding: u29,
            }),
            ///  Reload register
            RLR: mmio.Mmio(packed struct(u32) {
                ///  Watchdog counter reload value
                RL: u12,
                padding: u20,
            }),
            ///  Status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Watchdog prescaler value update
                PVU: u1,
                ///  Watchdog counter reload value update
                RVU: u1,
                ///  Watchdog counter window value update
                WVU: u1,
                padding: u29,
            }),
            ///  Window register
            WINR: mmio.Mmio(packed struct(u32) {
                ///  Watchdog counter window value
                WIN: u12,
                padding: u20,
            }),
        };

        ///  System window watchdog
        pub const WWDG = extern struct {
            ///  Control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  7-bit counter (MSB to LSB)
                T: u7,
                ///  Activation bit
                WDGA: u1,
                padding: u24,
            }),
            ///  Configuration register
            CFR: mmio.Mmio(packed struct(u32) {
                ///  7-bit window value
                W: u7,
                ///  Timer base
                WDGTB: u2,
                ///  Early wakeup interrupt
                EWI: u1,
                padding: u22,
            }),
            ///  Status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Early wakeup interrupt flag
                EWIF: u1,
                padding: u31,
            }),
        };

        ///  Comparator
        pub const COMP = extern struct {
            ///  Comparator 1 control and status register
            COMP1_CSR: mmio.Mmio(packed struct(u32) {
                ///  Comparator 1 enable bit
                COMP1_EN: u1,
                reserved2: u1,
                ///  Power Mode of the comparator 1
                COMP1_PWRMODE: u2,
                ///  Comparator 1 Input Minus connection configuration bit
                COMP1_INMSEL: u3,
                ///  Comparator1 input plus selection bit
                COMP1_INPSEL: u1,
                reserved15: u7,
                ///  Comparator 1 polarity selection bit
                COMP1_POLARITY: u1,
                ///  Comparator 1 hysteresis selection bits
                COMP1_HYST: u2,
                ///  Comparator 1 blanking source selection bits
                COMP1_BLANKING: u3,
                reserved22: u1,
                ///  Scaler bridge enable
                COMP1_BRGEN: u1,
                ///  Voltage scaler enable bit
                COMP1_SCALEN: u1,
                reserved30: u6,
                ///  Comparator 1 output status bit
                COMP1_VALUE: u1,
                ///  COMP1_CSR register lock bit
                COMP1_LOCK: u1,
            }),
            ///  Comparator 2 control and status register
            COMP2_CSR: mmio.Mmio(packed struct(u32) {
                ///  Comparator 2 enable bit
                COMP2_EN: u1,
                reserved2: u1,
                ///  Power Mode of the comparator 2
                COMP2_PWRMODE: u2,
                ///  Comparator 2 Input Minus connection configuration bit
                COMP2_INMSEL: u3,
                ///  Comparator 2 Input Plus connection configuration bit
                COMP2_INPSEL: u1,
                reserved9: u1,
                ///  Windows mode selection bit
                COMP2_WINMODE: u1,
                reserved15: u5,
                ///  Comparator 2 polarity selection bit
                COMP2_POLARITY: u1,
                ///  Comparator 2 hysteresis selection bits
                COMP2_HYST: u2,
                ///  Comparator 2 blanking source selection bits
                COMP2_BLANKING: u3,
                reserved22: u1,
                ///  Scaler bridge enable
                COMP2_BRGEN: u1,
                ///  Voltage scaler enable bit
                COMP2_SCALEN: u1,
                reserved30: u6,
                ///  Comparator 2 output status bit
                COMP2_VALUE: u1,
                ///  COMP2_CSR register lock bit
                COMP2_LOCK: u1,
            }),
        };

        ///  Firewall
        pub const FIREWALL = extern struct {
            ///  Code segment start address
            CSSA: mmio.Mmio(packed struct(u32) {
                reserved8: u8,
                ///  code segment start address
                ADD: u16,
                padding: u8,
            }),
            ///  Code segment length
            CSL: mmio.Mmio(packed struct(u32) {
                reserved8: u8,
                ///  code segment length
                LENG: u14,
                padding: u10,
            }),
            ///  Non-volatile data segment start address
            NVDSSA: mmio.Mmio(packed struct(u32) {
                reserved8: u8,
                ///  Non-volatile data segment start address
                ADD: u16,
                padding: u8,
            }),
            ///  Non-volatile data segment length
            NVDSL: mmio.Mmio(packed struct(u32) {
                reserved8: u8,
                ///  Non-volatile data segment length
                LENG: u14,
                padding: u10,
            }),
            ///  Volatile data segment start address
            VDSSA: mmio.Mmio(packed struct(u32) {
                reserved6: u6,
                ///  Volatile data segment start address
                ADD: u10,
                padding: u16,
            }),
            ///  Volatile data segment length
            VDSL: mmio.Mmio(packed struct(u32) {
                reserved6: u6,
                ///  Non-volatile data segment length
                LENG: u10,
                padding: u16,
            }),
            reserved32: [8]u8,
            ///  Configuration register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Firewall pre alarm
                FPA: u1,
                ///  Volatile data shared
                VDS: u1,
                ///  Volatile data execution
                VDE: u1,
                padding: u29,
            }),
        };

        ///  Inter-integrated circuit
        pub const I2C1 = extern struct {
            ///  Control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Peripheral enable
                PE: u1,
                ///  TX Interrupt enable
                TXIE: u1,
                ///  RX Interrupt enable
                RXIE: u1,
                ///  Address match interrupt enable (slave only)
                ADDRIE: u1,
                ///  Not acknowledge received interrupt enable
                NACKIE: u1,
                ///  STOP detection Interrupt enable
                STOPIE: u1,
                ///  Transfer Complete interrupt enable
                TCIE: u1,
                ///  Error interrupts enable
                ERRIE: u1,
                ///  Digital noise filter
                DNF: u4,
                ///  Analog noise filter OFF
                ANFOFF: u1,
                reserved14: u1,
                ///  DMA transmission requests enable
                TXDMAEN: u1,
                ///  DMA reception requests enable
                RXDMAEN: u1,
                ///  Slave byte control
                SBC: u1,
                ///  Clock stretching disable
                NOSTRETCH: u1,
                ///  Wakeup from STOP enable
                WUPEN: u1,
                ///  General call enable
                GCEN: u1,
                ///  SMBus Host address enable
                SMBHEN: u1,
                ///  SMBus Device Default address enable
                SMBDEN: u1,
                ///  SMBUS alert enable
                ALERTEN: u1,
                ///  PEC enable
                PECEN: u1,
                padding: u8,
            }),
            ///  Control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                ///  Slave address bit (master mode)
                SADD: u10,
                ///  Transfer direction (master mode)
                RD_WRN: u1,
                ///  10-bit addressing mode (master mode)
                ADD10: u1,
                ///  10-bit address header only read direction (master receiver mode)
                HEAD10R: u1,
                ///  Start generation
                START: u1,
                ///  Stop generation (master mode)
                STOP: u1,
                ///  NACK generation (slave mode)
                NACK: u1,
                ///  Number of bytes
                NBYTES: u8,
                ///  NBYTES reload mode
                RELOAD: u1,
                ///  Automatic end mode (master mode)
                AUTOEND: u1,
                ///  Packet error checking byte
                PECBYTE: u1,
                padding: u5,
            }),
            ///  Own address register 1
            OAR1: mmio.Mmio(packed struct(u32) {
                ///  Interface address
                OA1: u10,
                ///  Own Address 1 10-bit mode
                OA1MODE: u1,
                reserved15: u4,
                ///  Own Address 1 enable
                OA1EN: u1,
                padding: u16,
            }),
            ///  Own address register 2
            OAR2: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  Interface address
                OA2: u7,
                ///  Own Address 2 masks
                OA2MSK: u3,
                reserved15: u4,
                ///  Own Address 2 enable
                OA2EN: u1,
                padding: u16,
            }),
            ///  Timing register
            TIMINGR: mmio.Mmio(packed struct(u32) {
                ///  SCL low period (master mode)
                SCLL: u8,
                ///  SCL high period (master mode)
                SCLH: u8,
                ///  Data hold time
                SDADEL: u4,
                ///  Data setup time
                SCLDEL: u4,
                reserved28: u4,
                ///  Timing prescaler
                PRESC: u4,
            }),
            ///  Status register 1
            TIMEOUTR: mmio.Mmio(packed struct(u32) {
                ///  Bus timeout A
                TIMEOUTA: u12,
                ///  Idle clock timeout detection
                TIDLE: u1,
                reserved15: u2,
                ///  Clock timeout enable
                TIMOUTEN: u1,
                ///  Bus timeout B
                TIMEOUTB: u12,
                reserved31: u3,
                ///  Extended clock timeout enable
                TEXTEN: u1,
            }),
            ///  Interrupt and Status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  Transmit data register empty (transmitters)
                TXE: u1,
                ///  Transmit interrupt status (transmitters)
                TXIS: u1,
                ///  Receive data register not empty (receivers)
                RXNE: u1,
                ///  Address matched (slave mode)
                ADDR: u1,
                ///  Not acknowledge received flag
                NACKF: u1,
                ///  Stop detection flag
                STOPF: u1,
                ///  Transfer Complete (master mode)
                TC: u1,
                ///  Transfer Complete Reload
                TCR: u1,
                ///  Bus error
                BERR: u1,
                ///  Arbitration lost
                ARLO: u1,
                ///  Overrun/Underrun (slave mode)
                OVR: u1,
                ///  PEC Error in reception
                PECERR: u1,
                ///  Timeout or t_low detection flag
                TIMEOUT: u1,
                ///  SMBus alert
                ALERT: u1,
                reserved15: u1,
                ///  Bus busy
                BUSY: u1,
                ///  Transfer direction (Slave mode)
                DIR: u1,
                ///  Address match code (Slave mode)
                ADDCODE: u7,
                padding: u8,
            }),
            ///  Interrupt clear register
            ICR: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  Address Matched flag clear
                ADDRCF: u1,
                ///  Not Acknowledge flag clear
                NACKCF: u1,
                ///  Stop detection flag clear
                STOPCF: u1,
                reserved8: u2,
                ///  Bus error flag clear
                BERRCF: u1,
                ///  Arbitration lost flag clear
                ARLOCF: u1,
                ///  Overrun/Underrun flag clear
                OVRCF: u1,
                ///  PEC Error flag clear
                PECCF: u1,
                ///  Timeout detection flag clear
                TIMOUTCF: u1,
                ///  Alert flag clear
                ALERTCF: u1,
                padding: u18,
            }),
            ///  PEC register
            PECR: mmio.Mmio(packed struct(u32) {
                ///  Packet error checking register
                PEC: u8,
                padding: u24,
            }),
            ///  Receive data register
            RXDR: mmio.Mmio(packed struct(u32) {
                ///  8-bit receive data
                RXDATA: u8,
                padding: u24,
            }),
            ///  Transmit data register
            TXDR: mmio.Mmio(packed struct(u32) {
                ///  8-bit transmit data
                TXDATA: u8,
                padding: u24,
            }),
        };

        ///  Floating point unit CPACR
        pub const FPU_CPACR = extern struct {
            ///  Coprocessor access control register
            CPACR: mmio.Mmio(packed struct(u32) {
                reserved20: u20,
                ///  CP
                CP: u4,
                padding: u8,
            }),
        };

        ///  Nested vectored interrupt controller
        pub const NVIC_STIR = extern struct {
            ///  Software trigger interrupt register
            STIR: mmio.Mmio(packed struct(u32) {
                ///  Software generated interrupt ID
                INTID: u9,
                padding: u23,
            }),
        };

        ///  System control block
        pub const SCB = extern struct {
            ///  CPUID base register
            CPUID: mmio.Mmio(packed struct(u32) {
                ///  Revision number
                Revision: u4,
                ///  Part number of the processor
                PartNo: u12,
                ///  Reads as 0xF
                Constant: u4,
                ///  Variant number
                Variant: u4,
                ///  Implementer code
                Implementer: u8,
            }),
            ///  Interrupt control and state register
            ICSR: mmio.Mmio(packed struct(u32) {
                ///  Active vector
                VECTACTIVE: u9,
                reserved11: u2,
                ///  Return to base level
                RETTOBASE: u1,
                ///  Pending vector
                VECTPENDING: u7,
                reserved22: u3,
                ///  Interrupt pending flag
                ISRPENDING: u1,
                reserved25: u2,
                ///  SysTick exception clear-pending bit
                PENDSTCLR: u1,
                ///  SysTick exception set-pending bit
                PENDSTSET: u1,
                ///  PendSV clear-pending bit
                PENDSVCLR: u1,
                ///  PendSV set-pending bit
                PENDSVSET: u1,
                reserved31: u2,
                ///  NMI set-pending bit.
                NMIPENDSET: u1,
            }),
            ///  Vector table offset register
            VTOR: mmio.Mmio(packed struct(u32) {
                reserved9: u9,
                ///  Vector table base offset field
                TBLOFF: u21,
                padding: u2,
            }),
            ///  Application interrupt and reset control register
            AIRCR: mmio.Mmio(packed struct(u32) {
                ///  VECTRESET
                VECTRESET: u1,
                ///  VECTCLRACTIVE
                VECTCLRACTIVE: u1,
                ///  SYSRESETREQ
                SYSRESETREQ: u1,
                reserved8: u5,
                ///  PRIGROUP
                PRIGROUP: u3,
                reserved15: u4,
                ///  ENDIANESS
                ENDIANESS: u1,
                ///  Register key
                VECTKEYSTAT: u16,
            }),
            ///  System control register
            SCR: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  SLEEPONEXIT
                SLEEPONEXIT: u1,
                ///  SLEEPDEEP
                SLEEPDEEP: u1,
                reserved4: u1,
                ///  Send Event on Pending bit
                SEVEONPEND: u1,
                padding: u27,
            }),
            ///  Configuration and control register
            CCR: mmio.Mmio(packed struct(u32) {
                ///  Configures how the processor enters Thread mode
                NONBASETHRDENA: u1,
                ///  USERSETMPEND
                USERSETMPEND: u1,
                reserved3: u1,
                ///  UNALIGN_ TRP
                UNALIGN__TRP: u1,
                ///  DIV_0_TRP
                DIV_0_TRP: u1,
                reserved8: u3,
                ///  BFHFNMIGN
                BFHFNMIGN: u1,
                ///  STKALIGN
                STKALIGN: u1,
                padding: u22,
            }),
            ///  System handler priority registers
            SHPR1: mmio.Mmio(packed struct(u32) {
                ///  Priority of system handler 4
                PRI_4: u8,
                ///  Priority of system handler 5
                PRI_5: u8,
                ///  Priority of system handler 6
                PRI_6: u8,
                padding: u8,
            }),
            ///  System handler priority registers
            SHPR2: mmio.Mmio(packed struct(u32) {
                reserved24: u24,
                ///  Priority of system handler 11
                PRI_11: u8,
            }),
            ///  System handler priority registers
            SHPR3: mmio.Mmio(packed struct(u32) {
                reserved16: u16,
                ///  Priority of system handler 14
                PRI_14: u8,
                ///  Priority of system handler 15
                PRI_15: u8,
            }),
            ///  System handler control and state register
            SHCRS: mmio.Mmio(packed struct(u32) {
                ///  Memory management fault exception active bit
                MEMFAULTACT: u1,
                ///  Bus fault exception active bit
                BUSFAULTACT: u1,
                reserved3: u1,
                ///  Usage fault exception active bit
                USGFAULTACT: u1,
                reserved7: u3,
                ///  SVC call active bit
                SVCALLACT: u1,
                ///  Debug monitor active bit
                MONITORACT: u1,
                reserved10: u1,
                ///  PendSV exception active bit
                PENDSVACT: u1,
                ///  SysTick exception active bit
                SYSTICKACT: u1,
                ///  Usage fault exception pending bit
                USGFAULTPENDED: u1,
                ///  Memory management fault exception pending bit
                MEMFAULTPENDED: u1,
                ///  Bus fault exception pending bit
                BUSFAULTPENDED: u1,
                ///  SVC call pending bit
                SVCALLPENDED: u1,
                ///  Memory management fault enable bit
                MEMFAULTENA: u1,
                ///  Bus fault enable bit
                BUSFAULTENA: u1,
                ///  Usage fault enable bit
                USGFAULTENA: u1,
                padding: u13,
            }),
            ///  Configurable fault status register
            CFSR_UFSR_BFSR_MMFSR: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  Instruction access violation flag
                IACCVIOL: u1,
                reserved3: u1,
                ///  Memory manager fault on unstacking for a return from exception
                MUNSTKERR: u1,
                ///  Memory manager fault on stacking for exception entry.
                MSTKERR: u1,
                ///  MLSPERR
                MLSPERR: u1,
                reserved7: u1,
                ///  Memory Management Fault Address Register (MMAR) valid flag
                MMARVALID: u1,
                ///  Instruction bus error
                IBUSERR: u1,
                ///  Precise data bus error
                PRECISERR: u1,
                ///  Imprecise data bus error
                IMPRECISERR: u1,
                ///  Bus fault on unstacking for a return from exception
                UNSTKERR: u1,
                ///  Bus fault on stacking for exception entry
                STKERR: u1,
                ///  Bus fault on floating-point lazy state preservation
                LSPERR: u1,
                reserved15: u1,
                ///  Bus Fault Address Register (BFAR) valid flag
                BFARVALID: u1,
                ///  Undefined instruction usage fault
                UNDEFINSTR: u1,
                ///  Invalid state usage fault
                INVSTATE: u1,
                ///  Invalid PC load usage fault
                INVPC: u1,
                ///  No coprocessor usage fault.
                NOCP: u1,
                reserved24: u4,
                ///  Unaligned access usage fault
                UNALIGNED: u1,
                ///  Divide by zero usage fault
                DIVBYZERO: u1,
                padding: u6,
            }),
            ///  Hard fault status register
            HFSR: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  Vector table hard fault
                VECTTBL: u1,
                reserved30: u28,
                ///  Forced hard fault
                FORCED: u1,
                ///  Reserved for Debug use
                DEBUG_VT: u1,
            }),
            reserved52: [4]u8,
            ///  Memory management fault address register
            MMFAR: mmio.Mmio(packed struct(u32) {
                ///  Memory management fault address
                MMFAR: u32,
            }),
            ///  Bus fault address register
            BFAR: mmio.Mmio(packed struct(u32) {
                ///  Bus fault address
                BFAR: u32,
            }),
            ///  Auxiliary fault status register
            AFSR: mmio.Mmio(packed struct(u32) {
                ///  Implementation defined
                IMPDEF: u32,
            }),
        };

        ///  Flash
        pub const FLASH = extern struct {
            ///  Access control register
            ACR: mmio.Mmio(packed struct(u32) {
                ///  Latency
                LATENCY: u3,
                reserved8: u5,
                ///  Prefetch enable
                PRFTEN: u1,
                ///  Instruction cache enable
                ICEN: u1,
                ///  Data cache enable
                DCEN: u1,
                ///  Instruction cache reset
                ICRST: u1,
                ///  Data cache reset
                DCRST: u1,
                ///  Flash Power-down mode during Low-power run mode
                RUN_PD: u1,
                ///  Flash Power-down mode during Low-power sleep mode
                SLEEP_PD: u1,
                padding: u17,
            }),
            ///  Power down key register
            PDKEYR: mmio.Mmio(packed struct(u32) {
                ///  RUN_PD in FLASH_ACR key
                PDKEYR: u32,
            }),
            ///  Flash key register
            KEYR: mmio.Mmio(packed struct(u32) {
                ///  KEYR
                KEYR: u32,
            }),
            ///  Option byte key register
            OPTKEYR: mmio.Mmio(packed struct(u32) {
                ///  Option byte key
                OPTKEYR: u32,
            }),
            ///  Status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  End of operation
                EOP: u1,
                ///  Operation error
                OPERR: u1,
                reserved3: u1,
                ///  Programming error
                PROGERR: u1,
                ///  Write protected error
                WRPERR: u1,
                ///  Programming alignment error
                PGAERR: u1,
                ///  Size error
                SIZERR: u1,
                ///  Programming sequence error
                PGSERR: u1,
                ///  Fast programming data miss error
                MISERR: u1,
                ///  Fast programming error
                FASTERR: u1,
                reserved14: u4,
                ///  PCROP read error
                RDERR: u1,
                ///  Option validity error
                OPTVERR: u1,
                ///  Busy
                BSY: u1,
                padding: u15,
            }),
            ///  Flash control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Programming
                PG: u1,
                ///  Page erase
                PER: u1,
                ///  Bank 1 Mass erase
                MER1: u1,
                ///  Page number
                PNB: u8,
                ///  Bank erase
                BKER: u1,
                reserved15: u3,
                ///  Bank 2 Mass erase
                MER2: u1,
                ///  Start
                START: u1,
                ///  Options modification start
                OPTSTRT: u1,
                ///  Fast programming
                FSTPG: u1,
                reserved24: u5,
                ///  End of operation interrupt enable
                EOPIE: u1,
                ///  Error interrupt enable
                ERRIE: u1,
                ///  PCROP read error interrupt enable
                RDERRIE: u1,
                ///  Force the option byte loading
                OBL_LAUNCH: u1,
                reserved30: u2,
                ///  Options Lock
                OPTLOCK: u1,
                ///  FLASH_CR Lock
                LOCK: u1,
            }),
            ///  Flash ECC register
            ECCR: mmio.Mmio(packed struct(u32) {
                ///  ECC fail address
                ADDR_ECC: u19,
                ///  ECC fail bank
                BK_ECC: u1,
                ///  System Flash ECC fail
                SYSF_ECC: u1,
                reserved24: u3,
                ///  ECC correction interrupt enable
                ECCIE: u1,
                reserved30: u5,
                ///  ECC correction
                ECCC: u1,
                ///  ECC detection
                ECCD: u1,
            }),
            reserved32: [4]u8,
            ///  Flash option register
            OPTR: mmio.Mmio(packed struct(u32) {
                ///  Read protection level
                RDP: u8,
                ///  BOR reset Level
                BOR_LEV: u3,
                reserved12: u1,
                ///  nRST_STOP
                nRST_STOP: u1,
                ///  nRST_STDBY
                nRST_STDBY: u1,
                reserved16: u2,
                ///  Independent watchdog selection
                IDWG_SW: u1,
                ///  Independent watchdog counter freeze in Stop mode
                IWDG_STOP: u1,
                ///  Independent watchdog counter freeze in Standby mode
                IWDG_STDBY: u1,
                ///  Window watchdog selection
                WWDG_SW: u1,
                ///  Dual-bank boot
                BFB2: u1,
                ///  Dual-Bank on 512 KB or 256 KB Flash memory devices
                DUALBANK: u1,
                reserved23: u1,
                ///  Boot configuration
                nBOOT1: u1,
                ///  SRAM2 parity check enable
                SRAM2_PE: u1,
                ///  SRAM2 Erase when system reset
                SRAM2_RST: u1,
                padding: u6,
            }),
            ///  Flash Bank 1 PCROP Start address register
            PCROP1SR: mmio.Mmio(packed struct(u32) {
                ///  Bank 1 PCROP area start offset
                PCROP1_STRT: u16,
                padding: u16,
            }),
            ///  Flash Bank 1 PCROP End address register
            PCROP1ER: mmio.Mmio(packed struct(u32) {
                ///  Bank 1 PCROP area end offset
                PCROP1_END: u16,
                reserved31: u15,
                ///  PCROP area preserved when RDP level decreased
                PCROP_RDP: u1,
            }),
            ///  Flash Bank 1 WRP area A address register
            WRP1AR: mmio.Mmio(packed struct(u32) {
                ///  Bank 1 WRP first area start offset
                WRP1A_STRT: u8,
                reserved16: u8,
                ///  Bank 1 WRP first area A end offset
                WRP1A_END: u8,
                padding: u8,
            }),
            ///  Flash Bank 1 WRP area B address register
            WRP1BR: mmio.Mmio(packed struct(u32) {
                ///  Bank 1 WRP second area B start offset
                WRP1B_END: u8,
                reserved16: u8,
                ///  Bank 1 WRP second area B end offset
                WRP1B_STRT: u8,
                padding: u8,
            }),
            reserved68: [16]u8,
            ///  Flash Bank 2 PCROP Start address register
            PCROP2SR: mmio.Mmio(packed struct(u32) {
                ///  Bank 2 PCROP area start offset
                PCROP2_STRT: u16,
                padding: u16,
            }),
            ///  Flash Bank 2 PCROP End address register
            PCROP2ER: mmio.Mmio(packed struct(u32) {
                ///  Bank 2 PCROP area end offset
                PCROP2_END: u16,
                padding: u16,
            }),
            ///  Flash Bank 2 WRP area A address register
            WRP2AR: mmio.Mmio(packed struct(u32) {
                ///  Bank 2 WRP first area A start offset
                WRP2A_STRT: u8,
                reserved16: u8,
                ///  Bank 2 WRP first area A end offset
                WRP2A_END: u8,
                padding: u8,
            }),
            ///  Flash Bank 2 WRP area B address register
            WRP2BR: mmio.Mmio(packed struct(u32) {
                ///  Bank 2 WRP second area B start offset
                WRP2B_STRT: u8,
                reserved16: u8,
                ///  Bank 2 WRP second area B end offset
                WRP2B_END: u8,
                padding: u8,
            }),
        };

        ///  Debug support
        pub const DBGMCU = extern struct {
            ///  MCU Device ID Code Register
            IDCODE: mmio.Mmio(packed struct(u32) {
                ///  Device Identifier
                DEV_ID: u16,
                ///  Revision Identifier
                REV_ID: u16,
            }),
            ///  Debug MCU Configuration Register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Debug Sleep Mode
                DBG_SLEEP: u1,
                ///  Debug Stop Mode
                DBG_STOP: u1,
                ///  Debug Standby Mode
                DBG_STANDBY: u1,
                reserved5: u2,
                ///  Trace pin assignment control
                TRACE_IOEN: u1,
                ///  Trace pin assignment control
                TRACE_MODE: u2,
                padding: u24,
            }),
            ///  APB Low Freeze Register 1
            APB1_FZR1: mmio.Mmio(packed struct(u32) {
                ///  Debug Timer 2 stopped when Core is halted
                DBG_TIMER2_STOP: u1,
                ///  TIM3 counter stopped when core is halted
                DBG_TIM3_STOP: u1,
                ///  TIM4 counter stopped when core is halted
                DBG_TIM4_STOP: u1,
                ///  TIM5 counter stopped when core is halted
                DBG_TIM5_STOP: u1,
                ///  Debug Timer 6 stopped when Core is halted
                DBG_TIMER6_STOP: u1,
                ///  TIM7 counter stopped when core is halted
                DBG_TIM7_STOP: u1,
                reserved10: u4,
                ///  Debug RTC stopped when Core is halted
                DBG_RTC_STOP: u1,
                ///  Debug Window Wachdog stopped when Core is halted
                DBG_WWDG_STOP: u1,
                ///  Debug Independent Wachdog stopped when Core is halted
                DBG_IWDG_STOP: u1,
                reserved21: u8,
                ///  I2C1 SMBUS timeout mode stopped when core is halted
                DBG_I2C1_STOP: u1,
                ///  I2C2 SMBUS timeout mode stopped when core is halted
                DBG_I2C2_STOP: u1,
                ///  I2C3 SMBUS timeout counter stopped when core is halted
                DBG_I2C3_STOP: u1,
                reserved25: u1,
                ///  bxCAN stopped when core is halted
                DBG_CAN_STOP: u1,
                reserved31: u5,
                ///  LPTIM1 counter stopped when core is halted
                DBG_LPTIMER_STOP: u1,
            }),
            ///  APB Low Freeze Register 2
            APB1_FZR2: mmio.Mmio(packed struct(u32) {
                reserved5: u5,
                ///  LPTIM2 counter stopped when core is halted
                DBG_LPTIM2_STOP: u1,
                padding: u26,
            }),
            ///  APB High Freeze Register
            APB2_FZR: mmio.Mmio(packed struct(u32) {
                reserved11: u11,
                ///  TIM1 counter stopped when core is halted
                DBG_TIM1_STOP: u1,
                reserved13: u1,
                ///  TIM8 counter stopped when core is halted
                DBG_TIM8_STOP: u1,
                reserved16: u2,
                ///  TIM15 counter stopped when core is halted
                DBG_TIM15_STOP: u1,
                ///  TIM16 counter stopped when core is halted
                DBG_TIM16_STOP: u1,
                ///  TIM17 counter stopped when core is halted
                DBG_TIM17_STOP: u1,
                padding: u13,
            }),
        };

        ///  OctoSPI
        pub const OCTOSPI1 = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                ///  Abort request
                ABORT: u1,
                ///  DMA enable
                DMAEN: u1,
                ///  Timeout counter enable
                TCEN: u1,
                reserved6: u2,
                ///  Dual-quad mode
                DQM: u1,
                ///  FLASH memory selection
                FSEL: u1,
                ///  IFO threshold level
                FTHRES: u5,
                reserved16: u3,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  FIFO threshold interrupt enable
                FTIE: u1,
                ///  Status match interrupt enable
                SMIE: u1,
                ///  TimeOut interrupt enable
                TOIE: u1,
                reserved22: u1,
                ///  Automatic poll mode stop
                APMS: u1,
                ///  Polling match mode
                PMM: u1,
                reserved28: u4,
                ///  Functional mode
                FMODE: u2,
                padding: u2,
            }),
            reserved8: [4]u8,
            ///  device configuration register
            DCR1: mmio.Mmio(packed struct(u32) {
                ///  Mode 0 / mode 3
                CKMODE: u1,
                ///  Free running clock
                FRCK: u1,
                reserved8: u6,
                ///  Chip-select high time
                CSHT: u3,
                reserved16: u5,
                ///  Device size
                DEVSIZE: u5,
                reserved24: u3,
                ///  Memory type
                MTYP: u2,
                padding: u6,
            }),
            ///  device configuration register 2
            DCR2: mmio.Mmio(packed struct(u32) {
                ///  Clock prescaler
                PRESCALER: u8,
                reserved16: u8,
                ///  Wrap size
                WRAPSIZE: u3,
                padding: u13,
            }),
            ///  device configuration register 3
            DCR3: mmio.Mmio(packed struct(u32) {
                reserved16: u16,
                ///  CS boundary
                CSBOUND: u5,
                padding: u11,
            }),
            reserved32: [12]u8,
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Transfer error flag
                TEF: u1,
                ///  Transfer complete flag
                TCF: u1,
                ///  FIFO threshold flag
                FTF: u1,
                ///  Status match flag
                SMF: u1,
                ///  Timeout flag
                TOF: u1,
                ///  BUSY
                BUSY: u1,
                reserved8: u2,
                ///  FIFO level
                FLEVEL: u6,
                padding: u18,
            }),
            ///  flag clear register
            FCR: mmio.Mmio(packed struct(u32) {
                ///  Clear transfer error flag
                CTEF: u1,
                ///  Clear transfer complete flag
                CTCF: u1,
                reserved3: u1,
                ///  Clear status match flag
                CSMF: u1,
                ///  Clear timeout flag
                CTOF: u1,
                padding: u27,
            }),
            reserved64: [24]u8,
            ///  data length register
            DLR: mmio.Mmio(packed struct(u32) {
                ///  Data length
                DL: u32,
            }),
            reserved72: [4]u8,
            ///  address register
            AR: mmio.Mmio(packed struct(u32) {
                ///  ADDRESS
                ADDRESS: u32,
            }),
            reserved80: [4]u8,
            ///  data register
            DR: mmio.Mmio(packed struct(u32) {
                ///  Data
                DATA: u32,
            }),
            reserved128: [44]u8,
            ///  polling status mask register
            PSMKR: mmio.Mmio(packed struct(u32) {
                ///  Status mask
                MASK: u32,
            }),
            reserved136: [4]u8,
            ///  polling status match register
            PSMAR: mmio.Mmio(packed struct(u32) {
                ///  Status match
                MATCH: u32,
            }),
            reserved144: [4]u8,
            ///  polling interval register
            PIR: mmio.Mmio(packed struct(u32) {
                ///  Polling interval
                INTERVAL: u16,
                padding: u16,
            }),
            reserved256: [108]u8,
            ///  communication configuration register
            CCR: mmio.Mmio(packed struct(u32) {
                ///  Instruction mode
                IMODE: u3,
                ///  Instruction double transfer rate
                IDTR: u1,
                ///  Instruction size
                ISIZE: u2,
                reserved8: u2,
                ///  Address mode
                ADMODE: u3,
                ///  Address double transfer rate
                ADDTR: u1,
                ///  Address size
                ADSIZE: u2,
                reserved16: u2,
                ///  Alternate byte mode
                ABMODE: u3,
                ///  Alternate bytes double transfer rate
                ABDTR: u1,
                ///  Alternate bytes size
                ABSIZE: u2,
                reserved24: u2,
                ///  Data mode
                DMODE: u3,
                ///  Alternate bytes double transfer rate
                DDTR: u1,
                reserved29: u1,
                ///  DQS enable
                DQSE: u1,
                reserved31: u1,
                ///  Send instruction only once mode
                SIOO: u1,
            }),
            reserved264: [4]u8,
            ///  timing configuration register
            TCR: mmio.Mmio(packed struct(u32) {
                ///  Number of dummy cycles
                DCYC: u5,
                reserved28: u23,
                ///  Delay hold quarter cycle
                DHQC: u1,
                reserved30: u1,
                ///  Sample shift
                SSHIFT: u1,
                padding: u1,
            }),
            reserved272: [4]u8,
            ///  instruction register
            IR: mmio.Mmio(packed struct(u32) {
                ///  INSTRUCTION
                INSTRUCTION: u32,
            }),
            reserved288: [12]u8,
            ///  alternate bytes register
            ABR: mmio.Mmio(packed struct(u32) {
                ///  Alternate bytes
                ALTERNATE: u32,
            }),
            reserved304: [12]u8,
            ///  low-power timeout register
            LPTR: mmio.Mmio(packed struct(u32) {
                ///  Timeout period
                TIMEOUT: u16,
                padding: u16,
            }),
            reserved384: [76]u8,
            ///  write communication configuration register
            WCCR: mmio.Mmio(packed struct(u32) {
                ///  Instruction mode
                IMODE: u3,
                ///  Instruction double transfer rate
                IDTR: u1,
                ///  Instruction size
                ISIZE: u2,
                reserved8: u2,
                ///  Address mode
                ADMODE: u3,
                ///  Address double transfer rate
                ADDTR: u1,
                ///  Address size
                ADSIZE: u2,
                reserved16: u2,
                ///  Alternate byte mode
                ABMODE: u3,
                ///  Alternate bytes double transfer rate
                ABDTR: u1,
                ///  Alternate bytes size
                ABSIZE: u2,
                reserved24: u2,
                ///  Data mode
                DMODE: u3,
                ///  alternate bytes double transfer rate
                DDTR: u1,
                reserved29: u1,
                ///  DQS enable
                DQSE: u1,
                reserved31: u1,
                ///  Send instruction only once mode
                SIOO: u1,
            }),
            reserved392: [4]u8,
            ///  write timing configuration register
            WTCR: mmio.Mmio(packed struct(u32) {
                ///  Number of dummy cycles
                DCYC: u5,
                padding: u27,
            }),
            reserved400: [4]u8,
            ///  write instruction register
            WIR: mmio.Mmio(packed struct(u32) {
                ///  INSTRUCTION
                INSTRUCTION: u32,
            }),
            reserved416: [12]u8,
            ///  write alternate bytes register
            WABR: mmio.Mmio(packed struct(u32) {
                ///  Alternate bytes
                ALTERNATE: u32,
            }),
            reserved512: [92]u8,
            ///  HyperBusTM latency configuration register
            HLCR: mmio.Mmio(packed struct(u32) {
                ///  Latency mode
                LM: u1,
                ///  Write zero latency
                WZL: u1,
                reserved8: u6,
                ///  Access time
                TACC: u8,
                ///  Read write recovery time
                TRWR: u8,
                padding: u8,
            }),
            reserved1008: [492]u8,
            ///  HW configuration register
            HWCFGR: mmio.Mmio(packed struct(u32) {
                ///  AXI interface
                AXI: u4,
                ///  FIFO depth
                FIFO: u8,
                ///  Prescaler
                PRES: u8,
                ///  ID Length
                IDL: u4,
                ///  Memory map write
                MMW: u4,
                ///  Master
                MST: u4,
            }),
            ///  version register
            VER: mmio.Mmio(packed struct(u32) {
                ///  Version
                VER: u8,
                padding: u24,
            }),
            ///  identification
            ID: mmio.Mmio(packed struct(u32) {
                ///  Identification
                ID: u32,
            }),
            ///  magic ID
            MID: mmio.Mmio(packed struct(u32) {
                ///  Magic ID
                MID: u32,
            }),
        };

        ///  SysTick timer
        pub const STK = extern struct {
            ///  SysTick control and status register
            CTRL: mmio.Mmio(packed struct(u32) {
                ///  Counter enable
                ENABLE: u1,
                ///  SysTick exception request enable
                TICKINT: u1,
                ///  Clock source selection
                CLKSOURCE: u1,
                reserved16: u13,
                ///  COUNTFLAG
                COUNTFLAG: u1,
                padding: u15,
            }),
            ///  SysTick reload value register
            LOAD: mmio.Mmio(packed struct(u32) {
                ///  RELOAD value
                RELOAD: u24,
                padding: u8,
            }),
            ///  SysTick current value register
            VAL: mmio.Mmio(packed struct(u32) {
                ///  Current counter value
                CURRENT: u24,
                padding: u8,
            }),
            ///  SysTick calibration value register
            CALIB: mmio.Mmio(packed struct(u32) {
                ///  Calibration value
                TENMS: u24,
                reserved30: u6,
                ///  SKEW flag: Indicates whether the TENMS value is exact
                SKEW: u1,
                ///  NOREF flag. Reads as zero
                NOREF: u1,
            }),
        };

        ///  Reset and clock control
        pub const RCC = extern struct {
            ///  Clock control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  MSI clock enable
                MSION: u1,
                ///  MSI clock ready flag
                MSIRDY: u1,
                ///  MSI clock PLL enable
                MSIPLLEN: u1,
                ///  MSI clock range selection
                MSIRGSEL: u1,
                ///  MSI clock ranges
                MSIRANGE: u4,
                ///  HSI clock enable
                HSION: u1,
                ///  HSI always enable for peripheral kernels
                HSIKERON: u1,
                ///  HSI clock ready flag
                HSIRDY: u1,
                ///  HSI automatic start from Stop
                HSIASFS: u1,
                reserved16: u4,
                ///  HSE clock enable
                HSEON: u1,
                ///  HSE clock ready flag
                HSERDY: u1,
                ///  HSE crystal oscillator bypass
                HSEBYP: u1,
                ///  Clock security system enable
                CSSON: u1,
                reserved24: u4,
                ///  Main PLL enable
                PLLON: u1,
                ///  Main PLL clock ready flag
                PLLRDY: u1,
                ///  SAI1 PLL enable
                PLLSAI1ON: u1,
                ///  SAI1 PLL clock ready flag
                PLLSAI1RDY: u1,
                ///  SAI2 PLL enable
                PLLSAI2ON: u1,
                ///  SAI2 PLL clock ready flag
                PLLSAI2RDY: u1,
                padding: u2,
            }),
            ///  Internal clock sources calibration register
            ICSCR: mmio.Mmio(packed struct(u32) {
                ///  MSI clock calibration
                MSICAL: u8,
                ///  MSI clock trimming
                MSITRIM: u8,
                ///  HSI clock calibration
                HSICAL: u8,
                ///  HSI clock trimming
                HSITRIM: u7,
                padding: u1,
            }),
            ///  Clock configuration register
            CFGR: mmio.Mmio(packed struct(u32) {
                ///  System clock switch
                SW: u2,
                ///  System clock switch status
                SWS: u2,
                ///  AHB prescaler
                HPRE: u4,
                ///  PB low-speed prescaler (APB1)
                PPRE1: u3,
                ///  APB high-speed prescaler (APB2)
                PPRE2: u3,
                reserved15: u1,
                ///  Wakeup from Stop and CSS backup clock selection
                STOPWUCK: u1,
                reserved24: u8,
                ///  Microcontroller clock output
                MCOSEL: u3,
                reserved28: u1,
                ///  Microcontroller clock output prescaler
                MCOPRE: u3,
                padding: u1,
            }),
            ///  PLL configuration register
            PLLCFGR: mmio.Mmio(packed struct(u32) {
                ///  Main PLL, PLLSAI1 and PLLSAI2 entry clock source
                PLLSRC: u2,
                reserved4: u2,
                ///  Division factor for the main PLL and audio PLL (PLLSAI1 and PLLSAI2) input clock
                PLLM: u4,
                ///  Main PLL multiplication factor for VCO
                PLLN: u7,
                reserved16: u1,
                ///  Main PLL PLLSAI3CLK output enable
                PLLPEN: u1,
                ///  Main PLL division factor for PLLSAI3CLK (SAI1 and SAI2 clock)
                PLLP: u1,
                reserved20: u2,
                ///  Main PLL PLLUSB1CLK output enable
                PLLQEN: u1,
                ///  Main PLL division factor for PLLUSB1CLK(48 MHz clock)
                PLLQ: u2,
                reserved24: u1,
                ///  Main PLL PLLCLK output enable
                PLLREN: u1,
                ///  Main PLL division factor for PLLCLK (system clock)
                PLLR: u2,
                ///  Main PLL division factor for PLLSAI2CLK
                PLLPDIV: u5,
            }),
            ///  PLLSAI1 configuration register
            PLLSAI1CFGR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Division factor for PLLSAI1 input clock
                PLLSAI1M: u4,
                ///  SAI1PLL multiplication factor for VCO
                PLLSAI1N: u7,
                reserved16: u1,
                ///  SAI1PLL PLLSAI1CLK output enable
                PLLSAI1PEN: u1,
                ///  SAI1PLL division factor for PLLSAI1CLK (SAI1 or SAI2 clock)
                PLLSAI1P: u1,
                reserved20: u2,
                ///  SAI1PLL PLLUSB2CLK output enable
                PLLSAI1QEN: u1,
                ///  SAI1PLL division factor for PLLUSB2CLK (48 MHz clock)
                PLLSAI1Q: u2,
                reserved24: u1,
                ///  PLLSAI1 PLLADC1CLK output enable
                PLLSAI1REN: u1,
                ///  PLLSAI1 division factor for PLLADC1CLK (ADC clock)
                PLLSAI1R: u2,
                ///  PLLSAI1 division factor for PLLSAI1CLK
                PLLSAI1PDIV: u5,
            }),
            ///  PLLSAI2 configuration register
            PLLSAI2CFGR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Division factor for PLLSAI2 input clock
                PLLSAI2M: u4,
                ///  SAI2PLL multiplication factor for VCO
                PLLSAI2N: u7,
                reserved16: u1,
                ///  SAI2PLL PLLSAI2CLK output enable
                PLLSAI2PEN: u1,
                ///  SAI1PLL division factor for PLLSAI2CLK (SAI1 or SAI2 clock)
                PLLSAI2P: u1,
                reserved20: u2,
                ///  PLLSAI2 division factor for PLLDISCLK
                PLLSAI2QEN: u1,
                ///  SAI2PLL PLLSAI2CLK output enable
                PLLSAI2Q: u2,
                reserved24: u1,
                ///  PLLSAI2 PLLADC2CLK output enable
                PLLSAI2REN: u1,
                ///  PLLSAI2 division factor for PLLADC2CLK (ADC clock)
                PLLSAI2R: u2,
                ///  PLLSAI2 division factor for PLLSAI2CLK
                PLLSAI2PDIV: u5,
            }),
            ///  Clock interrupt enable register
            CIER: mmio.Mmio(packed struct(u32) {
                ///  LSI ready interrupt enable
                LSIRDYIE: u1,
                ///  LSE ready interrupt enable
                LSERDYIE: u1,
                ///  MSI ready interrupt enable
                MSIRDYIE: u1,
                ///  HSI ready interrupt enable
                HSIRDYIE: u1,
                ///  HSE ready interrupt enable
                HSERDYIE: u1,
                ///  PLL ready interrupt enable
                PLLRDYIE: u1,
                ///  PLLSAI1 ready interrupt enable
                PLLSAI1RDYIE: u1,
                ///  PLLSAI2 ready interrupt enable
                PLLSAI2RDYIE: u1,
                reserved9: u1,
                ///  LSE clock security system interrupt enable
                LSECSSIE: u1,
                ///  HSI48 ready interrupt enable
                HSI48RDYIE: u1,
                padding: u21,
            }),
            ///  Clock interrupt flag register
            CIFR: mmio.Mmio(packed struct(u32) {
                ///  LSI ready interrupt flag
                LSIRDYF: u1,
                ///  LSE ready interrupt flag
                LSERDYF: u1,
                ///  MSI ready interrupt flag
                MSIRDYF: u1,
                ///  HSI ready interrupt flag
                HSIRDYF: u1,
                ///  HSE ready interrupt flag
                HSERDYF: u1,
                ///  PLL ready interrupt flag
                PLLRDYF: u1,
                ///  PLLSAI1 ready interrupt flag
                PLLSAI1RDYF: u1,
                ///  PLLSAI2 ready interrupt flag
                PLLSAI2RDYF: u1,
                ///  Clock security system interrupt flag
                CSSF: u1,
                ///  LSE Clock security system interrupt flag
                LSECSSF: u1,
                ///  HSI48 ready interrupt flag
                HSI48RDYF: u1,
                padding: u21,
            }),
            ///  Clock interrupt clear register
            CICR: mmio.Mmio(packed struct(u32) {
                ///  LSI ready interrupt clear
                LSIRDYC: u1,
                ///  LSE ready interrupt clear
                LSERDYC: u1,
                ///  MSI ready interrupt clear
                MSIRDYC: u1,
                ///  HSI ready interrupt clear
                HSIRDYC: u1,
                ///  HSE ready interrupt clear
                HSERDYC: u1,
                ///  PLL ready interrupt clear
                PLLRDYC: u1,
                ///  PLLSAI1 ready interrupt clear
                PLLSAI1RDYC: u1,
                ///  PLLSAI2 ready interrupt clear
                PLLSAI2RDYC: u1,
                ///  Clock security system interrupt clear
                CSSC: u1,
                ///  LSE Clock security system interrupt clear
                LSECSSC: u1,
                ///  HSI48 oscillator ready interrupt clear
                HSI48RDYC: u1,
                padding: u21,
            }),
            reserved40: [4]u8,
            ///  AHB1 peripheral reset register
            AHB1RSTR: mmio.Mmio(packed struct(u32) {
                ///  DMA1 reset
                DMA1RST: u1,
                ///  DMA2 reset
                DMA2RST: u1,
                ///  DMAMUXRST
                DMAMUX1RST: u1,
                reserved8: u5,
                ///  Flash memory interface reset
                FLASHRST: u1,
                reserved12: u3,
                ///  CRC reset
                CRCRST: u1,
                reserved16: u3,
                ///  Touch Sensing Controller reset
                TSCRST: u1,
                ///  DMA2D reset
                DMA2DRST: u1,
                ///  GFXMMU reset
                GFXMMURST: u1,
                padding: u13,
            }),
            ///  AHB2 peripheral reset register
            AHB2RSTR: mmio.Mmio(packed struct(u32) {
                ///  IO port A reset
                GPIOARST: u1,
                ///  IO port B reset
                GPIOBRST: u1,
                ///  IO port C reset
                GPIOCRST: u1,
                ///  IO port D reset
                GPIODRST: u1,
                ///  IO port E reset
                GPIOERST: u1,
                ///  IO port F reset
                GPIOFRST: u1,
                ///  IO port G reset
                GPIOGRST: u1,
                ///  IO port H reset
                GPIOHRST: u1,
                ///  IO port I reset
                GPIOIRST: u1,
                reserved12: u3,
                ///  USB OTG FS reset
                OTGFSRST: u1,
                ///  ADC reset
                ADCRST: u1,
                ///  Digital Camera Interface reset
                DCMIRST: u1,
                reserved16: u1,
                ///  AES hardware accelerator reset
                AESRST: u1,
                ///  Hash reset
                HASHRST: u1,
                ///  Random number generator reset
                RNGRST: u1,
                reserved20: u1,
                ///  OCTOSPI IO manager reset
                OSPIMRST: u1,
                reserved22: u1,
                ///  SDMMC1 reset
                SDMMC1RST: u1,
                padding: u9,
            }),
            ///  AHB3 peripheral reset register
            AHB3RSTR: mmio.Mmio(packed struct(u32) {
                ///  Flexible memory controller reset
                FMCRST: u1,
                reserved9: u8,
                ///  OctOSPI2 memory interface reset
                OSPI2RST: u1,
                padding: u22,
            }),
            reserved56: [4]u8,
            ///  APB1 peripheral reset register 1
            APB1RSTR1: mmio.Mmio(packed struct(u32) {
                ///  TIM2 timer reset
                TIM2RST: u1,
                ///  TIM3 timer reset
                TIM3RST: u1,
                ///  TIM3 timer reset
                TIM4RST: u1,
                ///  TIM5 timer reset
                TIM5RST: u1,
                ///  TIM6 timer reset
                TIM6RST: u1,
                ///  TIM7 timer reset
                TIM7RST: u1,
                reserved14: u8,
                ///  SPI2 reset
                SPI2RST: u1,
                ///  SPI3 reset
                SPI3RST: u1,
                reserved17: u1,
                ///  USART2 reset
                USART2RST: u1,
                ///  USART3 reset
                USART3RST: u1,
                ///  UART4 reset
                UART4RST: u1,
                ///  UART5 reset
                UART5RST: u1,
                ///  I2C1 reset
                I2C1RST: u1,
                ///  I2C2 reset
                I2C2RST: u1,
                ///  I2C3 reset
                I2C3RST: u1,
                ///  CRS reset
                CRSRST: u1,
                ///  CAN1 reset
                CAN1RST: u1,
                reserved28: u2,
                ///  Power interface reset
                PWRRST: u1,
                ///  DAC1 interface reset
                DAC1RST: u1,
                ///  OPAMP interface reset
                OPAMPRST: u1,
                ///  Low Power Timer 1 reset
                LPTIM1RST: u1,
            }),
            ///  APB1 peripheral reset register 2
            APB1RSTR2: mmio.Mmio(packed struct(u32) {
                ///  Low-power UART 1 reset
                LPUART1RST: u1,
                ///  I2C4 reset
                I2C4RST: u1,
                reserved5: u3,
                ///  Low-power timer 2 reset
                LPTIM2RST: u1,
                padding: u26,
            }),
            ///  APB2 peripheral reset register
            APB2RSTR: mmio.Mmio(packed struct(u32) {
                ///  System configuration (SYSCFG) reset
                SYSCFGRST: u1,
                reserved11: u10,
                ///  TIM1 timer reset
                TIM1RST: u1,
                ///  SPI1 reset
                SPI1RST: u1,
                ///  TIM8 timer reset
                TIM8RST: u1,
                ///  USART1 reset
                USART1RST: u1,
                reserved16: u1,
                ///  TIM15 timer reset
                TIM15RST: u1,
                ///  TIM16 timer reset
                TIM16RST: u1,
                ///  TIM17 timer reset
                TIM17RST: u1,
                reserved21: u2,
                ///  Serial audio interface 1 (SAI1) reset
                SAI1RST: u1,
                ///  Serial audio interface 2 (SAI2) reset
                SAI2RST: u1,
                reserved24: u1,
                ///  Digital filters for sigma-delata modulators (DFSDM) reset
                DFSDM1RST: u1,
                reserved26: u1,
                ///  LCD-TFT reset
                LTDCRST: u1,
                ///  DSI reset
                DSIRST: u1,
                padding: u4,
            }),
            reserved72: [4]u8,
            ///  AHB1 peripheral clock enable register
            AHB1ENR: mmio.Mmio(packed struct(u32) {
                ///  DMA1 clock enable
                DMA1EN: u1,
                ///  DMA2 clock enable
                DMA2EN: u1,
                ///  DMAMUX clock enable
                DMAMUX1EN: u1,
                reserved8: u5,
                ///  Flash memory interface clock enable
                FLASHEN: u1,
                reserved12: u3,
                ///  CRC clock enable
                CRCEN: u1,
                reserved16: u3,
                ///  Touch Sensing Controller clock enable
                TSCEN: u1,
                ///  DMA2D clock enable
                DMA2DEN: u1,
                ///  Graphic MMU clock enable
                GFXMMUEN: u1,
                padding: u13,
            }),
            ///  AHB2 peripheral clock enable register
            AHB2ENR: mmio.Mmio(packed struct(u32) {
                ///  IO port A clock enable
                GPIOAEN: u1,
                ///  IO port B clock enable
                GPIOBEN: u1,
                ///  IO port C clock enable
                GPIOCEN: u1,
                ///  IO port D clock enable
                GPIODEN: u1,
                ///  IO port E clock enable
                GPIOEEN: u1,
                ///  IO port F clock enable
                GPIOFEN: u1,
                ///  IO port G clock enable
                GPIOGEN: u1,
                ///  IO port H clock enable
                GPIOHEN: u1,
                ///  IO port I clock enable
                GPIOIEN: u1,
                reserved12: u3,
                ///  OTG full speed clock enable
                OTGFSEN: u1,
                ///  ADC clock enable
                ADCEN: u1,
                ///  DCMI clock enable
                DCMIEN: u1,
                reserved16: u1,
                ///  AES accelerator clock enable
                AESEN: u1,
                ///  HASH clock enable
                HASHEN: u1,
                ///  Random Number Generator clock enable
                RNGEN: u1,
                reserved20: u1,
                ///  OctoSPI IO manager clock enable
                OSPIMEN: u1,
                reserved22: u1,
                ///  SDMMC1 clock enable
                SDMMC1EN: u1,
                padding: u9,
            }),
            ///  AHB3 peripheral clock enable register
            AHB3ENR: mmio.Mmio(packed struct(u32) {
                ///  Flexible memory controller clock enable
                FMCEN: u1,
                reserved9: u8,
                ///  OSPI2EN memory interface clock enable
                OSPI2EN: u1,
                padding: u22,
            }),
            reserved88: [4]u8,
            ///  APB1ENR1
            APB1ENR1: mmio.Mmio(packed struct(u32) {
                ///  TIM2 timer clock enable
                TIM2EN: u1,
                ///  TIM3 timer clock enable
                TIM3EN: u1,
                ///  TIM4 timer clock enable
                TIM4EN: u1,
                ///  TIM5 timer clock enable
                TIM5EN: u1,
                ///  TIM6 timer clock enable
                TIM6EN: u1,
                ///  TIM7 timer clock enable
                TIM7EN: u1,
                reserved10: u4,
                ///  RTC APB clock enable
                RTCAPBEN: u1,
                ///  Window watchdog clock enable
                WWDGEN: u1,
                reserved14: u2,
                ///  SPI2 clock enable
                SPI2EN: u1,
                ///  SPI3 clock enable
                SP3EN: u1,
                reserved17: u1,
                ///  USART2 clock enable
                USART2EN: u1,
                ///  USART3 clock enable
                USART3EN: u1,
                ///  UART4 clock enable
                UART4EN: u1,
                ///  UART5 clock enable
                UART5EN: u1,
                ///  I2C1 clock enable
                I2C1EN: u1,
                ///  I2C2 clock enable
                I2C2EN: u1,
                ///  I2C3 clock enable
                I2C3EN: u1,
                ///  Clock Recovery System clock enable
                CRSEN: u1,
                ///  CAN1 clock enable
                CAN1EN: u1,
                reserved28: u2,
                ///  Power interface clock enable
                PWREN: u1,
                ///  DAC1 interface clock enable
                DAC1EN: u1,
                ///  OPAMP interface clock enable
                OPAMPEN: u1,
                ///  Low power timer 1 clock enable
                LPTIM1EN: u1,
            }),
            ///  APB1 peripheral clock enable register 2
            APB1ENR2: mmio.Mmio(packed struct(u32) {
                ///  Low power UART 1 clock enable
                LPUART1EN: u1,
                ///  I2C4 clock enable
                I2C4EN: u1,
                reserved5: u3,
                ///  LPTIM2EN
                LPTIM2EN: u1,
                padding: u26,
            }),
            ///  APB2ENR
            APB2ENR: mmio.Mmio(packed struct(u32) {
                ///  SYSCFG clock enable
                SYSCFGEN: u1,
                reserved7: u6,
                ///  Firewall clock enable
                FWEN: u1,
                reserved11: u3,
                ///  TIM1 timer clock enable
                TIM1EN: u1,
                ///  SPI1 clock enable
                SPI1EN: u1,
                ///  TIM8 timer clock enable
                TIM8EN: u1,
                ///  USART1clock enable
                USART1EN: u1,
                reserved16: u1,
                ///  TIM15 timer clock enable
                TIM15EN: u1,
                ///  TIM16 timer clock enable
                TIM16EN: u1,
                ///  TIM17 timer clock enable
                TIM17EN: u1,
                reserved21: u2,
                ///  SAI1 clock enable
                SAI1EN: u1,
                ///  SAI2 clock enable
                SAI2EN: u1,
                reserved24: u1,
                ///  DFSDM timer clock enable
                DFSDM1EN: u1,
                reserved26: u1,
                ///  LCD-TFT clock enable
                LTDCEN: u1,
                ///  DSI clock enable
                DSIEN: u1,
                padding: u4,
            }),
            reserved104: [4]u8,
            ///  AHB1 peripheral clocks enable in Sleep and Stop modes register
            AHB1SMENR: mmio.Mmio(packed struct(u32) {
                ///  DMA1 clocks enable during Sleep and Stop modes
                DMA1SMEN: u1,
                ///  DMA2 clocks enable during Sleep and Stop modes
                DMA2SMEN: u1,
                ///  DMAMUX clock enable during Sleep and Stop modes
                DMAMUX1SMEN: u1,
                reserved8: u5,
                ///  Flash memory interface clocks enable during Sleep and Stop modes
                FLASHSMEN: u1,
                ///  SRAM1 interface clocks enable during Sleep and Stop modes
                SRAM1SMEN: u1,
                reserved12: u2,
                ///  CRCSMEN
                CRCSMEN: u1,
                reserved16: u3,
                ///  Touch Sensing Controller clocks enable during Sleep and Stop modes
                TSCSMEN: u1,
                ///  DMA2D clock enable during Sleep and Stop modes
                DMA2DSMEN: u1,
                ///  GFXMMU clock enable during Sleep and Stop modes
                GFXMMUSMEN: u1,
                padding: u13,
            }),
            ///  AHB2 peripheral clocks enable in Sleep and Stop modes register
            AHB2SMENR: mmio.Mmio(packed struct(u32) {
                ///  IO port A clocks enable during Sleep and Stop modes
                GPIOASMEN: u1,
                ///  IO port B clocks enable during Sleep and Stop modes
                GPIOBSMEN: u1,
                ///  IO port C clocks enable during Sleep and Stop modes
                GPIOCSMEN: u1,
                ///  IO port D clocks enable during Sleep and Stop modes
                GPIODSMEN: u1,
                ///  IO port E clocks enable during Sleep and Stop modes
                GPIOESMEN: u1,
                ///  IO port F clocks enable during Sleep and Stop modes
                GPIOFSMEN: u1,
                ///  IO port G clocks enable during Sleep and Stop modes
                GPIOGSMEN: u1,
                ///  IO port H clocks enable during Sleep and Stop modes
                GPIOHSMEN: u1,
                ///  IO port I clocks enable during Sleep and Stop modes
                GPIOISMEN: u1,
                ///  SRAM2 interface clocks enable during Sleep and Stop modes
                SRAM2SMEN: u1,
                ///  SRAM2 interface clocks enable during Sleep and Stop modes
                SRAM3SMEN: u1,
                reserved12: u1,
                ///  OTG full speed clocks enable during Sleep and Stop modes
                OTGFSSMEN: u1,
                ///  ADC clocks enable during Sleep and Stop modes
                ADCFSSMEN: u1,
                ///  DCMI clock enable during Sleep and Stop modes
                DCMISMEN: u1,
                reserved16: u1,
                ///  AES accelerator clocks enable during Sleep and Stop modes
                AESSMEN: u1,
                ///  HASH clock enable during Sleep and Stop modes
                HASHSMEN: u1,
                ///  Random Number Generator clocks enable during Sleep and Stop modes
                RNGSMEN: u1,
                reserved20: u1,
                ///  OctoSPI IO manager clocks enable during Sleep and Stop modes
                OSPIMSMEN: u1,
                reserved22: u1,
                ///  SDMMC1 clocks enable during Sleep and Stop modes
                SDMMC1SMEN: u1,
                padding: u9,
            }),
            ///  AHB3 peripheral clocks enable in Sleep and Stop modes register
            AHB3SMENR: mmio.Mmio(packed struct(u32) {
                ///  Flexible memory controller clocks enable during Sleep and Stop modes
                FMCSMEN: u1,
                reserved9: u8,
                ///  OctoSPI2 memory interface clocks enable during Sleep and Stop modes
                OCTOSPI2: u1,
                padding: u22,
            }),
            reserved120: [4]u8,
            ///  APB1SMENR1
            APB1SMENR1: mmio.Mmio(packed struct(u32) {
                ///  TIM2 timer clocks enable during Sleep and Stop modes
                TIM2SMEN: u1,
                ///  TIM3 timer clocks enable during Sleep and Stop modes
                TIM3SMEN: u1,
                ///  TIM4 timer clocks enable during Sleep and Stop modes
                TIM4SMEN: u1,
                ///  TIM5 timer clocks enable during Sleep and Stop modes
                TIM5SMEN: u1,
                ///  TIM6 timer clocks enable during Sleep and Stop modes
                TIM6SMEN: u1,
                ///  TIM7 timer clocks enable during Sleep and Stop modes
                TIM7SMEN: u1,
                reserved10: u4,
                ///  RTC APB clock enable during Sleep and Stop modes
                RTCAPBSMEN: u1,
                ///  Window watchdog clocks enable during Sleep and Stop modes
                WWDGSMEN: u1,
                reserved14: u2,
                ///  SPI2 clocks enable during Sleep and Stop modes
                SPI2SMEN: u1,
                ///  SPI3 clocks enable during Sleep and Stop modes
                SP3SMEN: u1,
                reserved17: u1,
                ///  USART2 clocks enable during Sleep and Stop modes
                USART2SMEN: u1,
                ///  USART3 clocks enable during Sleep and Stop modes
                USART3SMEN: u1,
                ///  UART4 clocks enable during Sleep and Stop modes
                UART4SMEN: u1,
                ///  UART5 clocks enable during Sleep and Stop modes
                UART5SMEN: u1,
                ///  I2C1 clocks enable during Sleep and Stop modes
                I2C1SMEN: u1,
                ///  I2C2 clocks enable during Sleep and Stop modes
                I2C2SMEN: u1,
                ///  I2C3 clocks enable during Sleep and Stop modes
                I2C3SMEN: u1,
                ///  CRS clock enable during Sleep and Stop modes
                CRSSMEN: u1,
                ///  CAN1 clocks enable during Sleep and Stop modes
                CAN1SMEN: u1,
                reserved28: u2,
                ///  Power interface clocks enable during Sleep and Stop modes
                PWRSMEN: u1,
                ///  DAC1 interface clocks enable during Sleep and Stop modes
                DAC1SMEN: u1,
                ///  OPAMP interface clocks enable during Sleep and Stop modes
                OPAMPSMEN: u1,
                ///  Low power timer 1 clocks enable during Sleep and Stop modes
                LPTIM1SMEN: u1,
            }),
            ///  APB1 peripheral clocks enable in Sleep and Stop modes register 2
            APB1SMENR2: mmio.Mmio(packed struct(u32) {
                ///  Low power UART 1 clocks enable during Sleep and Stop modes
                LPUART1SMEN: u1,
                ///  I2C4 clocks enable during Sleep and Stop modes
                I2C4SMEN: u1,
                reserved5: u3,
                ///  LPTIM2SMEN
                LPTIM2SMEN: u1,
                padding: u26,
            }),
            ///  APB2SMENR
            APB2SMENR: mmio.Mmio(packed struct(u32) {
                ///  SYSCFG clocks enable during Sleep and Stop modes
                SYSCFGSMEN: u1,
                reserved11: u10,
                ///  TIM1 timer clocks enable during Sleep and Stop modes
                TIM1SMEN: u1,
                ///  SPI1 clocks enable during Sleep and Stop modes
                SPI1SMEN: u1,
                ///  TIM8 timer clocks enable during Sleep and Stop modes
                TIM8SMEN: u1,
                ///  USART1clocks enable during Sleep and Stop modes
                USART1SMEN: u1,
                reserved16: u1,
                ///  TIM15 timer clocks enable during Sleep and Stop modes
                TIM15SMEN: u1,
                ///  TIM16 timer clocks enable during Sleep and Stop modes
                TIM16SMEN: u1,
                ///  TIM17 timer clocks enable during Sleep and Stop modes
                TIM17SMEN: u1,
                reserved21: u2,
                ///  SAI1 clocks enable during Sleep and Stop modes
                SAI1SMEN: u1,
                ///  SAI2 clocks enable during Sleep and Stop modes
                SAI2SMEN: u1,
                reserved24: u1,
                ///  DFSDM timer clocks enable during Sleep and Stop modes
                DFSDM1SMEN: u1,
                reserved26: u1,
                ///  LCD-TFT timer clocks enable during Sleep and Stop modes
                LTDCSMEN: u1,
                ///  DSI clocks enable during Sleep and Stop modes
                DSISMEN: u1,
                padding: u4,
            }),
            reserved136: [4]u8,
            ///  CCIPR
            CCIPR: mmio.Mmio(packed struct(u32) {
                ///  USART1 clock source selection
                USART1SEL: u2,
                ///  USART2 clock source selection
                USART2SEL: u2,
                ///  USART3 clock source selection
                USART3SEL: u2,
                ///  UART4 clock source selection
                UART4SEL: u2,
                ///  UART5 clock source selection
                UART5SEL: u2,
                ///  LPUART1 clock source selection
                LPUART1SEL: u2,
                ///  I2C1 clock source selection
                I2C1SEL: u2,
                ///  I2C2 clock source selection
                I2C2SEL: u2,
                ///  I2C3 clock source selection
                I2C3SEL: u2,
                ///  Low power timer 1 clock source selection
                LPTIM1SEL: u2,
                ///  Low power timer 2 clock source selection
                LPTIM2SEL: u2,
                ///  SAI1 clock source selection
                SAI1SEL: u2,
                ///  SAI2 clock source selection
                SAI2SEL: u2,
                ///  48 MHz clock source selection
                CLK48SEL: u2,
                ///  ADCs clock source selection
                ADCSEL: u2,
                padding: u2,
            }),
            reserved144: [4]u8,
            ///  BDCR
            BDCR: mmio.Mmio(packed struct(u32) {
                ///  LSE oscillator enable
                LSEON: u1,
                ///  LSE oscillator ready
                LSERDY: u1,
                ///  LSE oscillator bypass
                LSEBYP: u1,
                ///  SE oscillator drive capability
                LSEDRV: u2,
                ///  LSECSSON
                LSECSSON: u1,
                ///  LSECSSD
                LSECSSD: u1,
                reserved8: u1,
                ///  RTC clock source selection
                RTCSEL: u2,
                reserved15: u5,
                ///  RTC clock enable
                RTCEN: u1,
                ///  Backup domain software reset
                BDRST: u1,
                reserved24: u7,
                ///  Low speed clock output enable
                LSCOEN: u1,
                ///  Low speed clock output selection
                LSCOSEL: u1,
                padding: u6,
            }),
            ///  CSR
            CSR: mmio.Mmio(packed struct(u32) {
                ///  LSI oscillator enable
                LSION: u1,
                ///  LSI oscillator ready
                LSIRDY: u1,
                reserved8: u6,
                ///  SI range after Standby mode
                MSISRANGE: u4,
                reserved23: u11,
                ///  Remove reset flag
                RMVF: u1,
                ///  Firewall reset flag
                FWRSTF: u1,
                ///  Option byte loader reset flag
                OBLRSTF: u1,
                ///  Pin reset flag
                PINRSTF: u1,
                ///  BOR flag
                BORRSTF: u1,
                ///  Software reset flag
                SFTRSTF: u1,
                ///  Independent window watchdog reset flag
                IWDGRSTF: u1,
                ///  Window watchdog reset flag
                WWDGRSTF: u1,
                ///  Low-power reset flag
                LPWRSTF: u1,
            }),
            ///  Clock recovery RC register
            CRRCR: mmio.Mmio(packed struct(u32) {
                ///  HSI48 clock enable
                HSI48ON: u1,
                ///  HSI48 clock ready flag
                HSI48RDY: u1,
                reserved7: u5,
                ///  HSI48 clock calibration
                HSI48CAL: u9,
                padding: u16,
            }),
            ///  Peripherals independent clock configuration register
            CCIPR2: mmio.Mmio(packed struct(u32) {
                ///  I2C4 clock source selection
                I2C4SEL: u2,
                ///  Digital filter for sigma delta modulator kernel clock source selection
                DFSDMSEL: u1,
                ///  Digital filter for sigma delta modulator audio clock source selection
                ADFSDMSEL: u2,
                ///  SAI1 clock source selection
                SAI1SEL: u3,
                ///  SAI2 clock source selection
                SAI2SEL: u3,
                reserved12: u1,
                ///  clock selection
                DSISEL: u1,
                reserved14: u1,
                ///  SDMMC clock selection
                SDMMCSEL: u1,
                reserved16: u1,
                ///  division factor for LTDC clock
                PLLSAI2DIVR: u2,
                reserved20: u2,
                ///  Octospi clock source selection
                OSPISEL: u2,
                padding: u10,
            }),
        };

        ///  Power control
        pub const PWR = extern struct {
            ///  Power control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Low-power mode selection
                LPMS: u3,
                reserved8: u5,
                ///  Disable backup domain write protection
                DBP: u1,
                ///  Voltage scaling range selection
                VOS: u2,
                reserved14: u3,
                ///  Low-power run
                LPR: u1,
                padding: u17,
            }),
            ///  Power control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                ///  Power voltage detector enable
                PVDE: u1,
                ///  Power voltage detector level selection
                PLS: u3,
                ///  Peripheral voltage monitoring 1 enable: VDDUSB vs. 1.2V
                PVME1: u1,
                ///  Peripheral voltage monitoring 2 enable: VDDIO2 vs. 0.9V
                PVME2: u1,
                ///  Peripheral voltage monitoring 3 enable: VDDA vs. 1.62V
                PVME3: u1,
                ///  Peripheral voltage monitoring 4 enable: VDDA vs. 2.2V
                PVME4: u1,
                reserved9: u1,
                ///  VDDIO2 Independent I/Os supply valid
                IOSV: u1,
                ///  VDDUSB USB supply valid
                USV: u1,
                padding: u21,
            }),
            ///  Power control register 3
            CR3: mmio.Mmio(packed struct(u32) {
                ///  Enable Wakeup pin WKUP1
                EWUP1: u1,
                ///  Enable Wakeup pin WKUP2
                EWUP2: u1,
                ///  Enable Wakeup pin WKUP3
                EWUP3: u1,
                ///  Enable Wakeup pin WKUP4
                EWUP4: u1,
                ///  Enable Wakeup pin WKUP5
                EWUP5: u1,
                reserved8: u3,
                ///  SRAM2 retention in Standby mode
                RRS: u1,
                reserved10: u1,
                ///  Apply pull-up and pull-down configuration
                APC: u1,
                reserved15: u4,
                ///  Enable internal wakeup line
                EWF: u1,
                padding: u16,
            }),
            ///  Power control register 4
            CR4: mmio.Mmio(packed struct(u32) {
                ///  Wakeup pin WKUP1 polarity
                WP1: u1,
                ///  Wakeup pin WKUP2 polarity
                WP2: u1,
                ///  Wakeup pin WKUP3 polarity
                WP3: u1,
                ///  Wakeup pin WKUP4 polarity
                WP4: u1,
                ///  Wakeup pin WKUP5 polarity
                WP5: u1,
                reserved8: u3,
                ///  VBAT battery charging enable
                VBE: u1,
                ///  VBAT battery charging resistor selection
                VBRS: u1,
                padding: u22,
            }),
            ///  Power status register 1
            SR1: mmio.Mmio(packed struct(u32) {
                ///  Wakeup flag 1
                CWUF1: u1,
                ///  Wakeup flag 2
                CWUF2: u1,
                ///  Wakeup flag 3
                CWUF3: u1,
                ///  Wakeup flag 4
                CWUF4: u1,
                ///  Wakeup flag 5
                CWUF5: u1,
                reserved8: u3,
                ///  Standby flag
                CSBF: u1,
                reserved15: u6,
                ///  Wakeup flag internal
                WUFI: u1,
                padding: u16,
            }),
            ///  Power status register 2
            SR2: mmio.Mmio(packed struct(u32) {
                reserved8: u8,
                ///  Low-power regulator started
                REGLPS: u1,
                ///  Low-power regulator flag
                REGLPF: u1,
                ///  Voltage scaling flag
                VOSF: u1,
                ///  Power voltage detector output
                PVDO: u1,
                ///  Peripheral voltage monitoring output: VDDUSB vs. 1.2 V
                PVMO1: u1,
                ///  Peripheral voltage monitoring output: VDDIO2 vs. 0.9 V
                PVMO2: u1,
                ///  Peripheral voltage monitoring output: VDDA vs. 1.62 V
                PVMO3: u1,
                ///  Peripheral voltage monitoring output: VDDA vs. 2.2 V
                PVMO4: u1,
                padding: u16,
            }),
            ///  Power status clear register
            SCR: mmio.Mmio(packed struct(u32) {
                ///  Clear wakeup flag 1
                WUF1: u1,
                ///  Clear wakeup flag 2
                WUF2: u1,
                ///  Clear wakeup flag 3
                WUF3: u1,
                ///  Clear wakeup flag 4
                WUF4: u1,
                ///  Clear wakeup flag 5
                WUF5: u1,
                reserved8: u3,
                ///  Clear standby flag
                SBF: u1,
                padding: u23,
            }),
            reserved32: [4]u8,
            ///  Power Port A pull-up control register
            PUCRA: mmio.Mmio(packed struct(u32) {
                ///  Port A pull-up bit y (y=0..15)
                PU0: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU1: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU2: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU3: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU4: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU5: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU6: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU7: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU8: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU9: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU10: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU11: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU12: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU13: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU14: u1,
                ///  Port A pull-up bit y (y=0..15)
                PU15: u1,
                padding: u16,
            }),
            ///  Power Port A pull-down control register
            PDCRA: mmio.Mmio(packed struct(u32) {
                ///  Port A pull-down bit y (y=0..15)
                PD0: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD1: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD2: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD3: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD4: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD5: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD6: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD7: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD8: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD9: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD10: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD11: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD12: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD13: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD14: u1,
                ///  Port A pull-down bit y (y=0..15)
                PD15: u1,
                padding: u16,
            }),
            ///  Power Port B pull-up control register
            PUCRB: mmio.Mmio(packed struct(u32) {
                ///  Port B pull-up bit y (y=0..15)
                PU0: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU1: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU2: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU3: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU4: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU5: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU6: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU7: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU8: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU9: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU10: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU11: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU12: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU13: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU14: u1,
                ///  Port B pull-up bit y (y=0..15)
                PU15: u1,
                padding: u16,
            }),
            ///  Power Port B pull-down control register
            PDCRB: mmio.Mmio(packed struct(u32) {
                ///  Port B pull-down bit y (y=0..15)
                PD0: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD1: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD2: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD3: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD4: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD5: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD6: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD7: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD8: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD9: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD10: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD11: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD12: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD13: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD14: u1,
                ///  Port B pull-down bit y (y=0..15)
                PD15: u1,
                padding: u16,
            }),
            ///  Power Port C pull-up control register
            PUCRC: mmio.Mmio(packed struct(u32) {
                ///  Port C pull-up bit y (y=0..15)
                PU0: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU1: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU2: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU3: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU4: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU5: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU6: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU7: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU8: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU9: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU10: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU11: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU12: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU13: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU14: u1,
                ///  Port C pull-up bit y (y=0..15)
                PU15: u1,
                padding: u16,
            }),
            ///  Power Port C pull-down control register
            PDCRC: mmio.Mmio(packed struct(u32) {
                ///  Port C pull-down bit y (y=0..15)
                PD0: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD1: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD2: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD3: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD4: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD5: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD6: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD7: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD8: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD9: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD10: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD11: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD12: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD13: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD14: u1,
                ///  Port C pull-down bit y (y=0..15)
                PD15: u1,
                padding: u16,
            }),
            ///  Power Port D pull-up control register
            PUCRD: mmio.Mmio(packed struct(u32) {
                ///  Port D pull-up bit y (y=0..15)
                PU0: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU1: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU2: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU3: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU4: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU5: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU6: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU7: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU8: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU9: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU10: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU11: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU12: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU13: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU14: u1,
                ///  Port D pull-up bit y (y=0..15)
                PU15: u1,
                padding: u16,
            }),
            ///  Power Port D pull-down control register
            PDCRD: mmio.Mmio(packed struct(u32) {
                ///  Port D pull-down bit y (y=0..15)
                PD0: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD1: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD2: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD3: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD4: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD5: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD6: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD7: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD8: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD9: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD10: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD11: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD12: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD13: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD14: u1,
                ///  Port D pull-down bit y (y=0..15)
                PD15: u1,
                padding: u16,
            }),
            ///  Power Port E pull-up control register
            PUCRE: mmio.Mmio(packed struct(u32) {
                ///  Port E pull-up bit y (y=0..15)
                PU0: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU1: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU2: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU3: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU4: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU5: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU6: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU7: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU8: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU9: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU10: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU11: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU12: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU13: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU14: u1,
                ///  Port E pull-up bit y (y=0..15)
                PU15: u1,
                padding: u16,
            }),
            ///  Power Port E pull-down control register
            PDCRE: mmio.Mmio(packed struct(u32) {
                ///  Port E pull-down bit y (y=0..15)
                PD0: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD1: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD2: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD3: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD4: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD5: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD6: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD7: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD8: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD9: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD10: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD11: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD12: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD13: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD14: u1,
                ///  Port E pull-down bit y (y=0..15)
                PD15: u1,
                padding: u16,
            }),
            ///  Power Port F pull-up control register
            PUCRF: mmio.Mmio(packed struct(u32) {
                ///  Port F pull-up bit y (y=0..15)
                PU0: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU1: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU2: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU3: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU4: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU5: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU6: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU7: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU8: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU9: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU10: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU11: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU12: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU13: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU14: u1,
                ///  Port F pull-up bit y (y=0..15)
                PU15: u1,
                padding: u16,
            }),
            ///  Power Port F pull-down control register
            PDCRF: mmio.Mmio(packed struct(u32) {
                ///  Port F pull-down bit y (y=0..15)
                PD0: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD1: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD2: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD3: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD4: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD5: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD6: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD7: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD8: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD9: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD10: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD11: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD12: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD13: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD14: u1,
                ///  Port F pull-down bit y (y=0..15)
                PD15: u1,
                padding: u16,
            }),
            ///  Power Port G pull-up control register
            PUCRG: mmio.Mmio(packed struct(u32) {
                ///  Port G pull-up bit y (y=0..15)
                PU0: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU1: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU2: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU3: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU4: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU5: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU6: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU7: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU8: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU9: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU10: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU11: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU12: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU13: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU14: u1,
                ///  Port G pull-up bit y (y=0..15)
                PU15: u1,
                padding: u16,
            }),
            ///  Power Port G pull-down control register
            PDCRG: mmio.Mmio(packed struct(u32) {
                ///  Port G pull-down bit y (y=0..15)
                PD0: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD1: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD2: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD3: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD4: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD5: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD6: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD7: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD8: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD9: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD10: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD11: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD12: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD13: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD14: u1,
                ///  Port G pull-down bit y (y=0..15)
                PD15: u1,
                padding: u16,
            }),
            ///  Power Port H pull-up control register
            PUCRH: mmio.Mmio(packed struct(u32) {
                ///  Port H pull-up bit y (y=0..1)
                PU0: u1,
                ///  Port H pull-up bit y (y=0..1)
                PU1: u1,
                padding: u30,
            }),
            ///  Power Port H pull-down control register
            PDCRH: mmio.Mmio(packed struct(u32) {
                ///  Port H pull-down bit y (y=0..1)
                PD0: u1,
                ///  Port H pull-down bit y (y=0..1)
                PD1: u1,
                padding: u30,
            }),
        };

        ///  System configuration controller
        pub const SYSCFG = extern struct {
            ///  memory remap register
            MEMRMP: mmio.Mmio(packed struct(u32) {
                ///  Memory mapping selection
                MEM_MODE: u3,
                ///  QUADSPI memory mapping swap
                QFS: u1,
                reserved8: u4,
                ///  Flash Bank mode selection
                FB_MODE: u1,
                padding: u23,
            }),
            ///  configuration register 1
            CFGR1: mmio.Mmio(packed struct(u32) {
                ///  Firewall disable
                FWDIS: u1,
                reserved8: u7,
                ///  I/O analog switch voltage booster enable
                BOOSTEN: u1,
                reserved16: u7,
                ///  Fast-mode Plus (Fm+) driving capability activation on PB6
                I2C_PB6_FMP: u1,
                ///  Fast-mode Plus (Fm+) driving capability activation on PB7
                I2C_PB7_FMP: u1,
                ///  Fast-mode Plus (Fm+) driving capability activation on PB8
                I2C_PB8_FMP: u1,
                ///  Fast-mode Plus (Fm+) driving capability activation on PB9
                I2C_PB9_FMP: u1,
                ///  I2C1 Fast-mode Plus driving capability activation
                I2C1_FMP: u1,
                ///  I2C2 Fast-mode Plus driving capability activation
                I2C2_FMP: u1,
                ///  I2C3 Fast-mode Plus driving capability activation
                I2C3_FMP: u1,
                reserved26: u3,
                ///  Floating Point Unit interrupts enable bits
                FPU_IE: u6,
            }),
            ///  external interrupt configuration register 1
            EXTICR1: mmio.Mmio(packed struct(u32) {
                ///  EXTI 0 configuration bits
                EXTI0: u3,
                reserved4: u1,
                ///  EXTI 1 configuration bits
                EXTI1: u3,
                reserved8: u1,
                ///  EXTI 2 configuration bits
                EXTI2: u3,
                reserved12: u1,
                ///  EXTI 3 configuration bits
                EXTI3: u3,
                padding: u17,
            }),
            ///  external interrupt configuration register 2
            EXTICR2: mmio.Mmio(packed struct(u32) {
                ///  EXTI 4 configuration bits
                EXTI4: u3,
                reserved4: u1,
                ///  EXTI 5 configuration bits
                EXTI5: u3,
                reserved8: u1,
                ///  EXTI 6 configuration bits
                EXTI6: u3,
                reserved12: u1,
                ///  EXTI 7 configuration bits
                EXTI7: u3,
                padding: u17,
            }),
            ///  external interrupt configuration register 3
            EXTICR3: mmio.Mmio(packed struct(u32) {
                ///  EXTI 8 configuration bits
                EXTI8: u3,
                reserved4: u1,
                ///  EXTI 9 configuration bits
                EXTI9: u3,
                reserved8: u1,
                ///  EXTI 10 configuration bits
                EXTI10: u3,
                reserved12: u1,
                ///  EXTI 11 configuration bits
                EXTI11: u3,
                padding: u17,
            }),
            ///  external interrupt configuration register 4
            EXTICR4: mmio.Mmio(packed struct(u32) {
                ///  EXTI12 configuration bits
                EXTI12: u3,
                reserved4: u1,
                ///  EXTI13 configuration bits
                EXTI13: u3,
                reserved8: u1,
                ///  EXTI14 configuration bits
                EXTI14: u3,
                reserved12: u1,
                ///  EXTI15 configuration bits
                EXTI15: u3,
                padding: u17,
            }),
            ///  SCSR
            SCSR: mmio.Mmio(packed struct(u32) {
                ///  SRAM2 Erase
                SRAM2ER: u1,
                ///  SRAM2 busy by erase operation
                SRAM2BSY: u1,
                padding: u30,
            }),
            ///  CFGR2
            CFGR2: mmio.Mmio(packed struct(u32) {
                ///  Cortex-M4 LOCKUP (Hardfault) output enable bit
                CLL: u1,
                ///  SRAM2 parity lock bit
                SPL: u1,
                ///  PVD lock enable bit
                PVDL: u1,
                ///  ECC Lock
                ECCL: u1,
                reserved8: u4,
                ///  SRAM2 parity error flag
                SPF: u1,
                padding: u23,
            }),
            ///  SWPR
            SWPR: mmio.Mmio(packed struct(u32) {
                ///  P0WP
                P0WP: u1,
                ///  P1WP
                P1WP: u1,
                ///  P2WP
                P2WP: u1,
                ///  P3WP
                P3WP: u1,
                ///  P4WP
                P4WP: u1,
                ///  P5WP
                P5WP: u1,
                ///  P6WP
                P6WP: u1,
                ///  P7WP
                P7WP: u1,
                ///  P8WP
                P8WP: u1,
                ///  P9WP
                P9WP: u1,
                ///  P10WP
                P10WP: u1,
                ///  P11WP
                P11WP: u1,
                ///  P12WP
                P12WP: u1,
                ///  P13WP
                P13WP: u1,
                ///  P14WP
                P14WP: u1,
                ///  P15WP
                P15WP: u1,
                ///  P16WP
                P16WP: u1,
                ///  P17WP
                P17WP: u1,
                ///  P18WP
                P18WP: u1,
                ///  P19WP
                P19WP: u1,
                ///  P20WP
                P20WP: u1,
                ///  P21WP
                P21WP: u1,
                ///  P22WP
                P22WP: u1,
                ///  P23WP
                P23WP: u1,
                ///  P24WP
                P24WP: u1,
                ///  P25WP
                P25WP: u1,
                ///  P26WP
                P26WP: u1,
                ///  P27WP
                P27WP: u1,
                ///  P28WP
                P28WP: u1,
                ///  P29WP
                P29WP: u1,
                ///  P30WP
                P30WP: u1,
                ///  SRAM2 page 31 write protection
                P31WP: u1,
            }),
            ///  SKR
            SKR: mmio.Mmio(packed struct(u32) {
                ///  SRAM2 write protection key for software erase
                KEY: u8,
                padding: u24,
            }),
        };

        ///  Digital filter for sigma delta modulators
        pub const DFSDM1 = extern struct {
            ///  channel configuration y register
            CHCFG0R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                ///  CKOUTDIV
                CKOUTDIV: u8,
                reserved30: u6,
                ///  CKOUTSRC
                CKOUTSRC: u1,
                ///  DFSDMEN
                DFSDMEN: u1,
            }),
            ///  channel configuration y register
            CHCFG0R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  analog watchdog and short-circuit detector register
            AWSCD0R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  channel watchdog filter data register
            CHWDAT0R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  channel data input register
            CHDATIN0R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved32: [12]u8,
            ///  CHCFG1R1
            CHCFG1R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                padding: u16,
            }),
            ///  CHCFG1R2
            CHCFG1R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  AWSCD1R
            AWSCD1R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  CHWDAT1R
            CHWDAT1R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  CHDATIN1R
            CHDATIN1R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved64: [12]u8,
            ///  CHCFG2R1
            CHCFG2R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                padding: u16,
            }),
            ///  CHCFG2R2
            CHCFG2R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  AWSCD2R
            AWSCD2R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  CHWDAT2R
            CHWDAT2R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  CHDATIN2R
            CHDATIN2R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved96: [12]u8,
            ///  CHCFG3R1
            CHCFG3R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                padding: u16,
            }),
            ///  CHCFG3R2
            CHCFG3R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  AWSCD3R
            AWSCD3R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  CHWDAT3R
            CHWDAT3R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  CHDATIN3R
            CHDATIN3R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved128: [12]u8,
            ///  CHCFG4R1
            CHCFG4R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                padding: u16,
            }),
            ///  CHCFG4R2
            CHCFG4R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  AWSCD4R
            AWSCD4R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  CHWDAT4R
            CHWDAT4R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  CHDATIN4R
            CHDATIN4R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved160: [12]u8,
            ///  CHCFG5R1
            CHCFG5R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                padding: u16,
            }),
            ///  CHCFG5R2
            CHCFG5R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  AWSCD5R
            AWSCD5R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  CHWDAT5R
            CHWDAT5R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  CHDATIN5R
            CHDATIN5R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved192: [12]u8,
            ///  CHCFG6R1
            CHCFG6R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                padding: u16,
            }),
            ///  CHCFG6R2
            CHCFG6R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  AWSCD6R
            AWSCD6R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  CHWDAT6R
            CHWDAT6R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  CHDATIN6R
            CHDATIN6R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved224: [12]u8,
            ///  CHCFG7R1
            CHCFG7R1: mmio.Mmio(packed struct(u32) {
                ///  SITP
                SITP: u2,
                ///  SPICKSEL
                SPICKSEL: u2,
                reserved5: u1,
                ///  SCDEN
                SCDEN: u1,
                ///  CKABEN
                CKABEN: u1,
                ///  CHEN
                CHEN: u1,
                ///  CHINSEL
                CHINSEL: u1,
                reserved12: u3,
                ///  DATMPX
                DATMPX: u2,
                ///  DATPACK
                DATPACK: u2,
                padding: u16,
            }),
            ///  CHCFG7R2
            CHCFG7R2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  DTRBS
                DTRBS: u5,
                ///  OFFSET
                OFFSET: u24,
            }),
            ///  AWSCD7R
            AWSCD7R: mmio.Mmio(packed struct(u32) {
                ///  SCDT
                SCDT: u8,
                reserved12: u4,
                ///  BKSCD
                BKSCD: u4,
                ///  AWFOSR
                AWFOSR: u5,
                reserved22: u1,
                ///  AWFORD
                AWFORD: u2,
                padding: u8,
            }),
            ///  CHWDAT7R
            CHWDAT7R: mmio.Mmio(packed struct(u32) {
                ///  WDATA
                WDATA: u16,
                padding: u16,
            }),
            ///  CHDATIN7R
            CHDATIN7R: mmio.Mmio(packed struct(u32) {
                ///  INDAT0
                INDAT0: u16,
                ///  INDAT1
                INDAT1: u16,
            }),
            reserved256: [12]u8,
            ///  control register 1
            DFSDM0_CR1: mmio.Mmio(packed struct(u32) {
                ///  DFSDM enable
                DFEN: u1,
                ///  Start a conversion of the injected group of channels
                JSWSTART: u1,
                reserved3: u1,
                ///  Launch an injected conversion synchronously with the DFSDM0 JSWSTART trigger
                JSYNC: u1,
                ///  Scanning conversion mode for injected conversions
                JSCAN: u1,
                ///  DMA channel enabled to read data for the injected channel group
                JDMAEN: u1,
                reserved8: u2,
                ///  Trigger signal selection for launching injected conversions
                JEXTSEL: u3,
                reserved13: u2,
                ///  Trigger enable and trigger edge selection for injected conversions
                JEXTEN: u2,
                reserved17: u2,
                ///  Software start of a conversion on the regular channel
                RSWSTART: u1,
                ///  Continuous mode selection for regular conversions
                RCONT: u1,
                ///  Launch regular conversion synchronously with DFSDM0
                RSYNC: u1,
                reserved21: u1,
                ///  DMA channel enabled to read data for the regular conversion
                RDMAEN: u1,
                reserved24: u2,
                ///  Regular channel selection
                RCH: u3,
                reserved29: u2,
                ///  Fast conversion mode selection for regular conversions
                FAST: u1,
                ///  Analog watchdog fast mode select
                AWFSEL: u1,
                padding: u1,
            }),
            ///  control register 2
            DFSDM0_CR2: mmio.Mmio(packed struct(u32) {
                ///  Injected end of conversion interrupt enable
                JEOCIE: u1,
                ///  Regular end of conversion interrupt enable
                REOCIE: u1,
                ///  Injected data overrun interrupt enable
                JOVRIE: u1,
                ///  Regular data overrun interrupt enable
                ROVRIE: u1,
                ///  Analog watchdog interrupt enable
                AWDIE: u1,
                ///  Short-circuit detector interrupt enable
                SCDIE: u1,
                ///  Clock absence interrupt enable
                CKABIE: u1,
                reserved8: u1,
                ///  Extremes detector channel selection
                EXCH: u8,
                ///  Analog watchdog channel selection
                AWDCH: u8,
                padding: u8,
            }),
            ///  interrupt and status register
            DFSDM0_ISR: mmio.Mmio(packed struct(u32) {
                ///  End of injected conversion flag
                JEOCF: u1,
                ///  End of regular conversion flag
                REOCF: u1,
                ///  Injected conversion overrun flag
                JOVRF: u1,
                ///  Regular conversion overrun flag
                ROVRF: u1,
                ///  Analog watchdog
                AWDF: u1,
                reserved13: u8,
                ///  Injected conversion in progress status
                JCIP: u1,
                ///  Regular conversion in progress status
                RCIP: u1,
                reserved16: u1,
                ///  Clock absence flag
                CKABF: u8,
                ///  short-circuit detector flag
                SCDF: u8,
            }),
            ///  interrupt flag clear register
            DFSDM0_ICR: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Clear the injected conversion overrun flag
                CLRJOVRF: u1,
                ///  Clear the regular conversion overrun flag
                CLRROVRF: u1,
                reserved16: u12,
                ///  Clear the clock absence flag
                CLRCKABF: u8,
                ///  Clear the short-circuit detector flag
                CLRSCDF: u8,
            }),
            ///  injected channel group selection register
            DFSDM0_JCHGR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel group selection
                JCHG: u8,
                padding: u24,
            }),
            ///  filter control register
            DFSDM0_FCR: mmio.Mmio(packed struct(u32) {
                ///  Integrator oversampling ratio (averaging length)
                IOSR: u8,
                reserved16: u8,
                ///  Sinc filter oversampling ratio (decimation rate)
                FOSR: u10,
                reserved29: u3,
                ///  Sinc filter order
                FORD: u3,
            }),
            ///  data register for injected group
            DFSDM0_JDATAR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel most recently converted
                JDATACH: u3,
                reserved8: u5,
                ///  Injected group conversion data
                JDATA: u24,
            }),
            ///  data register for the regular channel
            DFSDM0_RDATAR: mmio.Mmio(packed struct(u32) {
                ///  Regular channel most recently converted
                RDATACH: u3,
                reserved4: u1,
                ///  Regular channel pending data
                RPEND: u1,
                reserved8: u3,
                ///  Regular channel conversion data
                RDATA: u24,
            }),
            ///  analog watchdog high threshold register
            DFSDM0_AWHTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog high threshold event
                BKAWH: u4,
                reserved8: u4,
                ///  Analog watchdog high threshold
                AWHT: u24,
            }),
            ///  analog watchdog low threshold register
            DFSDM0_AWLTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog low threshold event
                BKAWL: u4,
                reserved8: u4,
                ///  Analog watchdog low threshold
                AWLT: u24,
            }),
            ///  analog watchdog status register
            DFSDM0_AWSR: mmio.Mmio(packed struct(u32) {
                ///  Analog watchdog low threshold flag
                AWLTF: u8,
                ///  Analog watchdog high threshold flag
                AWHTF: u8,
                padding: u16,
            }),
            ///  analog watchdog clear flag register
            DFSDM0_AWCFR: mmio.Mmio(packed struct(u32) {
                ///  Clear the analog watchdog low threshold flag
                CLRAWLTF: u8,
                ///  Clear the analog watchdog high threshold flag
                CLRAWHTF: u8,
                padding: u16,
            }),
            ///  Extremes detector maximum register
            DFSDM0_EXMAX: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector maximum data channel
                EXMAXCH: u3,
                reserved8: u5,
                ///  Extremes detector maximum value
                EXMAX: u24,
            }),
            ///  Extremes detector minimum register
            DFSDM0_EXMIN: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector minimum data channel
                EXMINCH: u3,
                reserved8: u5,
                ///  EXMIN
                EXMIN: u24,
            }),
            ///  conversion timer register
            DFSDM0_CNVTIMR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  28-bit timer counting conversion time t = CNVCNT[27:0] / fDFSDM_CKIN
                CNVCNT: u28,
            }),
            reserved512: [196]u8,
            ///  control register 1
            DFSDM1_CR1: mmio.Mmio(packed struct(u32) {
                ///  DFSDM enable
                DFEN: u1,
                ///  Start a conversion of the injected group of channels
                JSWSTART: u1,
                reserved3: u1,
                ///  Launch an injected conversion synchronously with the DFSDM0 JSWSTART trigger
                JSYNC: u1,
                ///  Scanning conversion mode for injected conversions
                JSCAN: u1,
                ///  DMA channel enabled to read data for the injected channel group
                JDMAEN: u1,
                reserved8: u2,
                ///  Trigger signal selection for launching injected conversions
                JEXTSEL: u3,
                reserved13: u2,
                ///  Trigger enable and trigger edge selection for injected conversions
                JEXTEN: u2,
                reserved17: u2,
                ///  Software start of a conversion on the regular channel
                RSWSTART: u1,
                ///  Continuous mode selection for regular conversions
                RCONT: u1,
                ///  Launch regular conversion synchronously with DFSDM0
                RSYNC: u1,
                reserved21: u1,
                ///  DMA channel enabled to read data for the regular conversion
                RDMAEN: u1,
                reserved24: u2,
                ///  Regular channel selection
                RCH: u3,
                reserved29: u2,
                ///  Fast conversion mode selection for regular conversions
                FAST: u1,
                ///  Analog watchdog fast mode select
                AWFSEL: u1,
                padding: u1,
            }),
            ///  control register 2
            DFSDM1_CR2: mmio.Mmio(packed struct(u32) {
                ///  Injected end of conversion interrupt enable
                JEOCIE: u1,
                ///  Regular end of conversion interrupt enable
                REOCIE: u1,
                ///  Injected data overrun interrupt enable
                JOVRIE: u1,
                ///  Regular data overrun interrupt enable
                ROVRIE: u1,
                ///  Analog watchdog interrupt enable
                AWDIE: u1,
                ///  Short-circuit detector interrupt enable
                SCDIE: u1,
                ///  Clock absence interrupt enable
                CKABIE: u1,
                reserved8: u1,
                ///  Extremes detector channel selection
                EXCH: u8,
                ///  Analog watchdog channel selection
                AWDCH: u8,
                padding: u8,
            }),
            ///  interrupt and status register
            DFSDM1_ISR: mmio.Mmio(packed struct(u32) {
                ///  End of injected conversion flag
                JEOCF: u1,
                ///  End of regular conversion flag
                REOCF: u1,
                ///  Injected conversion overrun flag
                JOVRF: u1,
                ///  Regular conversion overrun flag
                ROVRF: u1,
                ///  Analog watchdog
                AWDF: u1,
                reserved13: u8,
                ///  Injected conversion in progress status
                JCIP: u1,
                ///  Regular conversion in progress status
                RCIP: u1,
                reserved16: u1,
                ///  Clock absence flag
                CKABF: u8,
                ///  short-circuit detector flag
                SCDF: u8,
            }),
            ///  interrupt flag clear register
            DFSDM1_ICR: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Clear the injected conversion overrun flag
                CLRJOVRF: u1,
                ///  Clear the regular conversion overrun flag
                CLRROVRF: u1,
                reserved16: u12,
                ///  Clear the clock absence flag
                CLRCKABF: u8,
                ///  Clear the short-circuit detector flag
                CLRSCDF: u8,
            }),
            ///  injected channel group selection register
            DFSDM1_JCHGR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel group selection
                JCHG: u8,
                padding: u24,
            }),
            ///  filter control register
            DFSDM1_FCR: mmio.Mmio(packed struct(u32) {
                ///  Integrator oversampling ratio (averaging length)
                IOSR: u8,
                reserved16: u8,
                ///  Sinc filter oversampling ratio (decimation rate)
                FOSR: u10,
                reserved29: u3,
                ///  Sinc filter order
                FORD: u3,
            }),
            ///  data register for injected group
            DFSDM1_JDATAR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel most recently converted
                JDATACH: u3,
                reserved8: u5,
                ///  Injected group conversion data
                JDATA: u24,
            }),
            ///  data register for the regular channel
            DFSDM1_RDATAR: mmio.Mmio(packed struct(u32) {
                ///  Regular channel most recently converted
                RDATACH: u3,
                reserved4: u1,
                ///  Regular channel pending data
                RPEND: u1,
                reserved8: u3,
                ///  Regular channel conversion data
                RDATA: u24,
            }),
            ///  analog watchdog high threshold register
            DFSDM1_AWHTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog high threshold event
                BKAWH: u4,
                reserved8: u4,
                ///  Analog watchdog high threshold
                AWHT: u24,
            }),
            ///  analog watchdog low threshold register
            DFSDM1_AWLTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog low threshold event
                BKAWL: u4,
                reserved8: u4,
                ///  Analog watchdog low threshold
                AWLT: u24,
            }),
            ///  analog watchdog status register
            DFSDM1_AWSR: mmio.Mmio(packed struct(u32) {
                ///  Analog watchdog low threshold flag
                AWLTF: u8,
                ///  Analog watchdog high threshold flag
                AWHTF: u8,
                padding: u16,
            }),
            ///  analog watchdog clear flag register
            DFSDM1_AWCFR: mmio.Mmio(packed struct(u32) {
                ///  Clear the analog watchdog low threshold flag
                CLRAWLTF: u8,
                ///  Clear the analog watchdog high threshold flag
                CLRAWHTF: u8,
                padding: u16,
            }),
            ///  Extremes detector maximum register
            DFSDM1_EXMAX: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector maximum data channel
                EXMAXCH: u3,
                reserved8: u5,
                ///  Extremes detector maximum value
                EXMAX: u24,
            }),
            ///  Extremes detector minimum register
            DFSDM1_EXMIN: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector minimum data channel
                EXMINCH: u3,
                reserved8: u5,
                ///  EXMIN
                EXMIN: u24,
            }),
            ///  conversion timer register
            DFSDM1_CNVTIMR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  28-bit timer counting conversion time t = CNVCNT[27:0] / fDFSDM_CKIN
                CNVCNT: u28,
            }),
            reserved768: [196]u8,
            ///  control register 1
            DFSDM2_CR1: mmio.Mmio(packed struct(u32) {
                ///  DFSDM enable
                DFEN: u1,
                ///  Start a conversion of the injected group of channels
                JSWSTART: u1,
                reserved3: u1,
                ///  Launch an injected conversion synchronously with the DFSDM0 JSWSTART trigger
                JSYNC: u1,
                ///  Scanning conversion mode for injected conversions
                JSCAN: u1,
                ///  DMA channel enabled to read data for the injected channel group
                JDMAEN: u1,
                reserved8: u2,
                ///  Trigger signal selection for launching injected conversions
                JEXTSEL: u3,
                reserved13: u2,
                ///  Trigger enable and trigger edge selection for injected conversions
                JEXTEN: u2,
                reserved17: u2,
                ///  Software start of a conversion on the regular channel
                RSWSTART: u1,
                ///  Continuous mode selection for regular conversions
                RCONT: u1,
                ///  Launch regular conversion synchronously with DFSDM0
                RSYNC: u1,
                reserved21: u1,
                ///  DMA channel enabled to read data for the regular conversion
                RDMAEN: u1,
                reserved24: u2,
                ///  Regular channel selection
                RCH: u3,
                reserved29: u2,
                ///  Fast conversion mode selection for regular conversions
                FAST: u1,
                ///  Analog watchdog fast mode select
                AWFSEL: u1,
                padding: u1,
            }),
            ///  control register 2
            DFSDM2_CR2: mmio.Mmio(packed struct(u32) {
                ///  Injected end of conversion interrupt enable
                JEOCIE: u1,
                ///  Regular end of conversion interrupt enable
                REOCIE: u1,
                ///  Injected data overrun interrupt enable
                JOVRIE: u1,
                ///  Regular data overrun interrupt enable
                ROVRIE: u1,
                ///  Analog watchdog interrupt enable
                AWDIE: u1,
                ///  Short-circuit detector interrupt enable
                SCDIE: u1,
                ///  Clock absence interrupt enable
                CKABIE: u1,
                reserved8: u1,
                ///  Extremes detector channel selection
                EXCH: u8,
                ///  Analog watchdog channel selection
                AWDCH: u8,
                padding: u8,
            }),
            ///  interrupt and status register
            DFSDM2_ISR: mmio.Mmio(packed struct(u32) {
                ///  End of injected conversion flag
                JEOCF: u1,
                ///  End of regular conversion flag
                REOCF: u1,
                ///  Injected conversion overrun flag
                JOVRF: u1,
                ///  Regular conversion overrun flag
                ROVRF: u1,
                ///  Analog watchdog
                AWDF: u1,
                reserved13: u8,
                ///  Injected conversion in progress status
                JCIP: u1,
                ///  Regular conversion in progress status
                RCIP: u1,
                reserved16: u1,
                ///  Clock absence flag
                CKABF: u8,
                ///  short-circuit detector flag
                SCDF: u8,
            }),
            ///  interrupt flag clear register
            DFSDM2_ICR: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Clear the injected conversion overrun flag
                CLRJOVRF: u1,
                ///  Clear the regular conversion overrun flag
                CLRROVRF: u1,
                reserved16: u12,
                ///  Clear the clock absence flag
                CLRCKABF: u8,
                ///  Clear the short-circuit detector flag
                CLRSCDF: u8,
            }),
            ///  injected channel group selection register
            DFSDM2_JCHGR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel group selection
                JCHG: u8,
                padding: u24,
            }),
            ///  filter control register
            DFSDM2_FCR: mmio.Mmio(packed struct(u32) {
                ///  Integrator oversampling ratio (averaging length)
                IOSR: u8,
                reserved16: u8,
                ///  Sinc filter oversampling ratio (decimation rate)
                FOSR: u10,
                reserved29: u3,
                ///  Sinc filter order
                FORD: u3,
            }),
            ///  data register for injected group
            DFSDM2_JDATAR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel most recently converted
                JDATACH: u3,
                reserved8: u5,
                ///  Injected group conversion data
                JDATA: u24,
            }),
            ///  data register for the regular channel
            DFSDM2_RDATAR: mmio.Mmio(packed struct(u32) {
                ///  Regular channel most recently converted
                RDATACH: u3,
                reserved4: u1,
                ///  Regular channel pending data
                RPEND: u1,
                reserved8: u3,
                ///  Regular channel conversion data
                RDATA: u24,
            }),
            ///  analog watchdog high threshold register
            DFSDM2_AWHTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog high threshold event
                BKAWH: u4,
                reserved8: u4,
                ///  Analog watchdog high threshold
                AWHT: u24,
            }),
            ///  analog watchdog low threshold register
            DFSDM2_AWLTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog low threshold event
                BKAWL: u4,
                reserved8: u4,
                ///  Analog watchdog low threshold
                AWLT: u24,
            }),
            ///  analog watchdog status register
            DFSDM2_AWSR: mmio.Mmio(packed struct(u32) {
                ///  Analog watchdog low threshold flag
                AWLTF: u8,
                ///  Analog watchdog high threshold flag
                AWHTF: u8,
                padding: u16,
            }),
            ///  analog watchdog clear flag register
            DFSDM2_AWCFR: mmio.Mmio(packed struct(u32) {
                ///  Clear the analog watchdog low threshold flag
                CLRAWLTF: u8,
                ///  Clear the analog watchdog high threshold flag
                CLRAWHTF: u8,
                padding: u16,
            }),
            ///  Extremes detector maximum register
            DFSDM2_EXMAX: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector maximum data channel
                EXMAXCH: u3,
                reserved8: u5,
                ///  Extremes detector maximum value
                EXMAX: u24,
            }),
            ///  Extremes detector minimum register
            DFSDM2_EXMIN: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector minimum data channel
                EXMINCH: u3,
                reserved8: u5,
                ///  EXMIN
                EXMIN: u24,
            }),
            ///  conversion timer register
            DFSDM2_CNVTIMR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  28-bit timer counting conversion time t = CNVCNT[27:0] / fDFSDM_CKIN
                CNVCNT: u28,
            }),
            reserved1024: [196]u8,
            ///  control register 1
            DFSDM3_CR1: mmio.Mmio(packed struct(u32) {
                ///  DFSDM enable
                DFEN: u1,
                ///  Start a conversion of the injected group of channels
                JSWSTART: u1,
                reserved3: u1,
                ///  Launch an injected conversion synchronously with the DFSDM0 JSWSTART trigger
                JSYNC: u1,
                ///  Scanning conversion mode for injected conversions
                JSCAN: u1,
                ///  DMA channel enabled to read data for the injected channel group
                JDMAEN: u1,
                reserved8: u2,
                ///  Trigger signal selection for launching injected conversions
                JEXTSEL: u3,
                reserved13: u2,
                ///  Trigger enable and trigger edge selection for injected conversions
                JEXTEN: u2,
                reserved17: u2,
                ///  Software start of a conversion on the regular channel
                RSWSTART: u1,
                ///  Continuous mode selection for regular conversions
                RCONT: u1,
                ///  Launch regular conversion synchronously with DFSDM0
                RSYNC: u1,
                reserved21: u1,
                ///  DMA channel enabled to read data for the regular conversion
                RDMAEN: u1,
                reserved24: u2,
                ///  Regular channel selection
                RCH: u3,
                reserved29: u2,
                ///  Fast conversion mode selection for regular conversions
                FAST: u1,
                ///  Analog watchdog fast mode select
                AWFSEL: u1,
                padding: u1,
            }),
            ///  control register 2
            DFSDM3_CR2: mmio.Mmio(packed struct(u32) {
                ///  Injected end of conversion interrupt enable
                JEOCIE: u1,
                ///  Regular end of conversion interrupt enable
                REOCIE: u1,
                ///  Injected data overrun interrupt enable
                JOVRIE: u1,
                ///  Regular data overrun interrupt enable
                ROVRIE: u1,
                ///  Analog watchdog interrupt enable
                AWDIE: u1,
                ///  Short-circuit detector interrupt enable
                SCDIE: u1,
                ///  Clock absence interrupt enable
                CKABIE: u1,
                reserved8: u1,
                ///  Extremes detector channel selection
                EXCH: u8,
                ///  Analog watchdog channel selection
                AWDCH: u8,
                padding: u8,
            }),
            ///  interrupt and status register
            DFSDM3_ISR: mmio.Mmio(packed struct(u32) {
                ///  End of injected conversion flag
                JEOCF: u1,
                ///  End of regular conversion flag
                REOCF: u1,
                ///  Injected conversion overrun flag
                JOVRF: u1,
                ///  Regular conversion overrun flag
                ROVRF: u1,
                ///  Analog watchdog
                AWDF: u1,
                reserved13: u8,
                ///  Injected conversion in progress status
                JCIP: u1,
                ///  Regular conversion in progress status
                RCIP: u1,
                reserved16: u1,
                ///  Clock absence flag
                CKABF: u8,
                ///  short-circuit detector flag
                SCDF: u8,
            }),
            ///  interrupt flag clear register
            DFSDM3_ICR: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Clear the injected conversion overrun flag
                CLRJOVRF: u1,
                ///  Clear the regular conversion overrun flag
                CLRROVRF: u1,
                reserved16: u12,
                ///  Clear the clock absence flag
                CLRCKABF: u8,
                ///  Clear the short-circuit detector flag
                CLRSCDF: u8,
            }),
            ///  injected channel group selection register
            DFSDM3_JCHGR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel group selection
                JCHG: u8,
                padding: u24,
            }),
            ///  filter control register
            DFSDM3_FCR: mmio.Mmio(packed struct(u32) {
                ///  Integrator oversampling ratio (averaging length)
                IOSR: u8,
                reserved16: u8,
                ///  Sinc filter oversampling ratio (decimation rate)
                FOSR: u10,
                reserved29: u3,
                ///  Sinc filter order
                FORD: u3,
            }),
            ///  data register for injected group
            DFSDM3_JDATAR: mmio.Mmio(packed struct(u32) {
                ///  Injected channel most recently converted
                JDATACH: u3,
                reserved8: u5,
                ///  Injected group conversion data
                JDATA: u24,
            }),
            ///  data register for the regular channel
            DFSDM3_RDATAR: mmio.Mmio(packed struct(u32) {
                ///  Regular channel most recently converted
                RDATACH: u3,
                reserved4: u1,
                ///  Regular channel pending data
                RPEND: u1,
                reserved8: u3,
                ///  Regular channel conversion data
                RDATA: u24,
            }),
            ///  analog watchdog high threshold register
            DFSDM3_AWHTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog high threshold event
                BKAWH: u4,
                reserved8: u4,
                ///  Analog watchdog high threshold
                AWHT: u24,
            }),
            ///  analog watchdog low threshold register
            DFSDM3_AWLTR: mmio.Mmio(packed struct(u32) {
                ///  Break signal assignment to analog watchdog low threshold event
                BKAWL: u4,
                reserved8: u4,
                ///  Analog watchdog low threshold
                AWLT: u24,
            }),
            ///  analog watchdog status register
            DFSDM3_AWSR: mmio.Mmio(packed struct(u32) {
                ///  Analog watchdog low threshold flag
                AWLTF: u8,
                ///  Analog watchdog high threshold flag
                AWHTF: u8,
                padding: u16,
            }),
            ///  analog watchdog clear flag register
            DFSDM3_AWCFR: mmio.Mmio(packed struct(u32) {
                ///  Clear the analog watchdog low threshold flag
                CLRAWLTF: u8,
                ///  Clear the analog watchdog high threshold flag
                CLRAWHTF: u8,
                padding: u16,
            }),
            ///  Extremes detector maximum register
            DFSDM3_EXMAX: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector maximum data channel
                EXMAXCH: u3,
                reserved8: u5,
                ///  Extremes detector maximum value
                EXMAX: u24,
            }),
            ///  Extremes detector minimum register
            DFSDM3_EXMIN: mmio.Mmio(packed struct(u32) {
                ///  Extremes detector minimum data channel
                EXMINCH: u3,
                reserved8: u5,
                ///  EXMIN
                EXMIN: u24,
            }),
            ///  conversion timer register
            DFSDM3_CNVTIMR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  28-bit timer counting conversion time t = CNVCNT[27:0] / fDFSDM_CKIN
                CNVCNT: u28,
            }),
        };

        ///  Random number generator
        pub const RNG = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Random number generator enable
                RNGEN: u1,
                ///  Interrupt enable
                IE: u1,
                padding: u28,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Data ready
                DRDY: u1,
                ///  Clock error current status
                CECS: u1,
                ///  Seed error current status
                SECS: u1,
                reserved5: u2,
                ///  Clock error interrupt status
                CEIS: u1,
                ///  Seed error interrupt status
                SEIS: u1,
                padding: u25,
            }),
            ///  data register
            DR: mmio.Mmio(packed struct(u32) {
                ///  Random data
                RNDATA: u32,
            }),
        };

        ///  Advanced encryption standard hardware accelerator
        pub const AES = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  AES enable
                EN: u1,
                ///  Data type selection (for data in and data out to/from the cryptographic block)
                DATATYPE: u2,
                ///  AES operating mode
                MODE: u2,
                ///  AES chaining mode
                CHMOD: u2,
                ///  Computation Complete Flag Clear
                CCFC: u1,
                ///  Error clear
                ERRC: u1,
                ///  CCF flag interrupt enable
                CCFIE: u1,
                ///  Error interrupt enable
                ERRIE: u1,
                ///  Enable DMA management of data input phase
                DMAINEN: u1,
                ///  Enable DMA management of data output phase
                DMAOUTEN: u1,
                padding: u19,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Computation complete flag
                CCF: u1,
                ///  Read error flag
                RDERR: u1,
                ///  Write error flag
                WRERR: u1,
                padding: u29,
            }),
            ///  data input register
            DINR: mmio.Mmio(packed struct(u32) {
                ///  Data Input Register
                AES_DINR: u32,
            }),
            ///  data output register
            DOUTR: mmio.Mmio(packed struct(u32) {
                ///  Data output register
                AES_DOUTR: u32,
            }),
            ///  key register 0
            KEYR0: mmio.Mmio(packed struct(u32) {
                ///  Data Output Register (LSB key [31:0])
                AES_KEYR0: u32,
            }),
            ///  key register 1
            KEYR1: mmio.Mmio(packed struct(u32) {
                ///  AES key register (key [63:32])
                AES_KEYR1: u32,
            }),
            ///  key register 2
            KEYR2: mmio.Mmio(packed struct(u32) {
                ///  AES key register (key [95:64])
                AES_KEYR2: u32,
            }),
            ///  key register 3
            KEYR3: mmio.Mmio(packed struct(u32) {
                ///  AES key register (MSB key [127:96])
                AES_KEYR3: u32,
            }),
            ///  initialization vector register 0
            IVR0: mmio.Mmio(packed struct(u32) {
                ///  initialization vector register (LSB IVR [31:0])
                AES_IVR0: u32,
            }),
            ///  initialization vector register 1
            IVR1: mmio.Mmio(packed struct(u32) {
                ///  Initialization Vector Register (IVR [63:32])
                AES_IVR1: u32,
            }),
            ///  initialization vector register 2
            IVR2: mmio.Mmio(packed struct(u32) {
                ///  Initialization Vector Register (IVR [95:64])
                AES_IVR2: u32,
            }),
            ///  initialization vector register 3
            IVR3: mmio.Mmio(packed struct(u32) {
                ///  Initialization Vector Register (MSB IVR [127:96])
                AES_IVR3: u32,
            }),
        };

        ///  Analog-to-Digital Converter
        pub const ADC = extern struct {
            ///  interrupt and status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  ADRDY
                ADRDY: u1,
                ///  EOSMP
                EOSMP: u1,
                ///  EOC
                EOC: u1,
                ///  EOS
                EOS: u1,
                ///  OVR
                OVR: u1,
                ///  JEOC
                JEOC: u1,
                ///  JEOS
                JEOS: u1,
                ///  AWD1
                AWD1: u1,
                ///  AWD2
                AWD2: u1,
                ///  AWD3
                AWD3: u1,
                ///  JQOVF
                JQOVF: u1,
                padding: u21,
            }),
            ///  interrupt enable register
            IER: mmio.Mmio(packed struct(u32) {
                ///  ADRDYIE
                ADRDYIE: u1,
                ///  EOSMPIE
                EOSMPIE: u1,
                ///  EOCIE
                EOCIE: u1,
                ///  EOSIE
                EOSIE: u1,
                ///  OVRIE
                OVRIE: u1,
                ///  JEOCIE
                JEOCIE: u1,
                ///  JEOSIE
                JEOSIE: u1,
                ///  AWD1IE
                AWD1IE: u1,
                ///  AWD2IE
                AWD2IE: u1,
                ///  AWD3IE
                AWD3IE: u1,
                ///  JQOVFIE
                JQOVFIE: u1,
                padding: u21,
            }),
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  ADEN
                ADEN: u1,
                ///  ADDIS
                ADDIS: u1,
                ///  ADSTART
                ADSTART: u1,
                ///  JADSTART
                JADSTART: u1,
                ///  ADSTP
                ADSTP: u1,
                ///  JADSTP
                JADSTP: u1,
                reserved28: u22,
                ///  ADVREGEN
                ADVREGEN: u1,
                ///  DEEPPWD
                DEEPPWD: u1,
                ///  ADCALDIF
                ADCALDIF: u1,
                ///  ADCAL
                ADCAL: u1,
            }),
            ///  configuration register
            CFGR: mmio.Mmio(packed struct(u32) {
                ///  DMAEN
                DMAEN: u1,
                ///  DMACFG
                DMACFG: u1,
                reserved3: u1,
                ///  RES
                RES: u2,
                ///  ALIGN
                ALIGN: u1,
                ///  EXTSEL
                EXTSEL: u4,
                ///  EXTEN
                EXTEN: u2,
                ///  OVRMOD
                OVRMOD: u1,
                ///  CONT
                CONT: u1,
                ///  AUTDLY
                AUTDLY: u1,
                reserved16: u1,
                ///  DISCEN
                DISCEN: u1,
                ///  DISCNUM
                DISCNUM: u3,
                ///  JDISCEN
                JDISCEN: u1,
                ///  JQM
                JQM: u1,
                ///  AWD1SGL
                AWD1SGL: u1,
                ///  AWD1EN
                AWD1EN: u1,
                ///  JAWD1EN
                JAWD1EN: u1,
                ///  JAUTO
                JAUTO: u1,
                ///  AWDCH1CH
                AWDCH1CH: u5,
                ///  Injected Queue disable
                JQDIS: u1,
            }),
            ///  configuration register
            CFGR2: mmio.Mmio(packed struct(u32) {
                ///  DMAEN
                ROVSE: u1,
                ///  DMACFG
                JOVSE: u1,
                ///  RES
                OVSR: u3,
                ///  ALIGN
                OVSS: u4,
                ///  Triggered Regular Oversampling
                TROVS: u1,
                ///  EXTEN
                ROVSM: u1,
                padding: u21,
            }),
            ///  sample time register 1
            SMPR1: mmio.Mmio(packed struct(u32) {
                ///  SMP0
                SMP0: u3,
                ///  SMP1
                SMP1: u3,
                ///  SMP2
                SMP2: u3,
                ///  SMP3
                SMP3: u3,
                ///  SMP4
                SMP4: u3,
                ///  SMP5
                SMP5: u3,
                ///  SMP6
                SMP6: u3,
                ///  SMP7
                SMP7: u3,
                ///  SMP8
                SMP8: u3,
                ///  SMP9
                SMP9: u3,
                reserved31: u1,
                ///  Addition of one clock cycle to the sampling time
                SMPPLUS: u1,
            }),
            ///  sample time register 2
            SMPR2: mmio.Mmio(packed struct(u32) {
                ///  SMP10
                SMP10: u3,
                ///  SMP11
                SMP11: u3,
                ///  SMP12
                SMP12: u3,
                ///  SMP13
                SMP13: u3,
                ///  SMP14
                SMP14: u3,
                ///  SMP15
                SMP15: u3,
                ///  SMP16
                SMP16: u3,
                ///  SMP17
                SMP17: u3,
                ///  SMP18
                SMP18: u3,
                padding: u5,
            }),
            reserved32: [4]u8,
            ///  watchdog threshold register 1
            TR1: mmio.Mmio(packed struct(u32) {
                ///  LT1
                LT1: u12,
                reserved16: u4,
                ///  HT1
                HT1: u12,
                padding: u4,
            }),
            ///  watchdog threshold register
            TR2: mmio.Mmio(packed struct(u32) {
                ///  LT2
                LT2: u8,
                reserved16: u8,
                ///  HT2
                HT2: u8,
                padding: u8,
            }),
            ///  watchdog threshold register 3
            TR3: mmio.Mmio(packed struct(u32) {
                ///  LT3
                LT3: u8,
                reserved16: u8,
                ///  HT3
                HT3: u8,
                padding: u8,
            }),
            reserved48: [4]u8,
            ///  regular sequence register 1
            SQR1: mmio.Mmio(packed struct(u32) {
                ///  Regular channel sequence length
                L: u4,
                reserved6: u2,
                ///  SQ1
                SQ1: u5,
                reserved12: u1,
                ///  SQ2
                SQ2: u5,
                reserved18: u1,
                ///  SQ3
                SQ3: u5,
                reserved24: u1,
                ///  SQ4
                SQ4: u5,
                padding: u3,
            }),
            ///  regular sequence register 2
            SQR2: mmio.Mmio(packed struct(u32) {
                ///  SQ5
                SQ5: u5,
                reserved6: u1,
                ///  SQ6
                SQ6: u5,
                reserved12: u1,
                ///  SQ7
                SQ7: u5,
                reserved18: u1,
                ///  SQ8
                SQ8: u5,
                reserved24: u1,
                ///  SQ9
                SQ9: u5,
                padding: u3,
            }),
            ///  regular sequence register 3
            SQR3: mmio.Mmio(packed struct(u32) {
                ///  SQ10
                SQ10: u5,
                reserved6: u1,
                ///  SQ11
                SQ11: u5,
                reserved12: u1,
                ///  SQ12
                SQ12: u5,
                reserved18: u1,
                ///  SQ13
                SQ13: u5,
                reserved24: u1,
                ///  SQ14
                SQ14: u5,
                padding: u3,
            }),
            ///  regular sequence register 4
            SQR4: mmio.Mmio(packed struct(u32) {
                ///  SQ15
                SQ15: u5,
                reserved6: u1,
                ///  SQ16
                SQ16: u5,
                padding: u21,
            }),
            ///  regular Data Register
            DR: mmio.Mmio(packed struct(u32) {
                ///  Regular Data converted
                RDATA: u16,
                padding: u16,
            }),
            reserved76: [8]u8,
            ///  injected sequence register
            JSQR: mmio.Mmio(packed struct(u32) {
                ///  JL
                JL: u2,
                ///  JEXTSEL
                JEXTSEL: u4,
                ///  JEXTEN
                JEXTEN: u2,
                ///  JSQ1
                JSQ1: u5,
                reserved14: u1,
                ///  JSQ2
                JSQ2: u5,
                reserved20: u1,
                ///  JSQ3
                JSQ3: u5,
                reserved26: u1,
                ///  JSQ4
                JSQ4: u5,
                padding: u1,
            }),
            reserved96: [16]u8,
            ///  offset register 1
            OFR1: mmio.Mmio(packed struct(u32) {
                ///  OFFSET1
                OFFSET1: u12,
                reserved26: u14,
                ///  OFFSET1_CH
                OFFSET1_CH: u5,
                ///  OFFSET1_EN
                OFFSET1_EN: u1,
            }),
            ///  offset register 2
            OFR2: mmio.Mmio(packed struct(u32) {
                ///  OFFSET2
                OFFSET2: u12,
                reserved26: u14,
                ///  OFFSET2_CH
                OFFSET2_CH: u5,
                ///  OFFSET2_EN
                OFFSET2_EN: u1,
            }),
            ///  offset register 3
            OFR3: mmio.Mmio(packed struct(u32) {
                ///  OFFSET3
                OFFSET3: u12,
                reserved26: u14,
                ///  OFFSET3_CH
                OFFSET3_CH: u5,
                ///  OFFSET3_EN
                OFFSET3_EN: u1,
            }),
            ///  offset register 4
            OFR4: mmio.Mmio(packed struct(u32) {
                ///  OFFSET4
                OFFSET4: u12,
                reserved26: u14,
                ///  OFFSET4_CH
                OFFSET4_CH: u5,
                ///  OFFSET4_EN
                OFFSET4_EN: u1,
            }),
            reserved128: [16]u8,
            ///  injected data register 1
            JDR1: mmio.Mmio(packed struct(u32) {
                ///  JDATA1
                JDATA1: u16,
                padding: u16,
            }),
            ///  injected data register 2
            JDR2: mmio.Mmio(packed struct(u32) {
                ///  JDATA2
                JDATA2: u16,
                padding: u16,
            }),
            ///  injected data register 3
            JDR3: mmio.Mmio(packed struct(u32) {
                ///  JDATA3
                JDATA3: u16,
                padding: u16,
            }),
            ///  injected data register 4
            JDR4: mmio.Mmio(packed struct(u32) {
                ///  JDATA4
                JDATA4: u16,
                padding: u16,
            }),
            reserved160: [16]u8,
            ///  Analog Watchdog 2 Configuration Register
            AWD2CR: mmio.Mmio(packed struct(u32) {
                ///  AWD2CH
                AWD2CH: u18,
                padding: u14,
            }),
            ///  Analog Watchdog 3 Configuration Register
            AWD3CR: mmio.Mmio(packed struct(u32) {
                ///  AWD3CH
                AWD3CH: u18,
                padding: u14,
            }),
            reserved176: [8]u8,
            ///  Differential Mode Selection Register 2
            DIFSEL: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  Differential mode for channels 15 to 1
                DIFSEL_1_15: u15,
                ///  Differential mode for channels 18 to 16
                DIFSEL_16_18: u3,
                padding: u13,
            }),
            ///  Calibration Factors
            CALFACT: mmio.Mmio(packed struct(u32) {
                ///  CALFACT_S
                CALFACT_S: u7,
                reserved16: u9,
                ///  CALFACT_D
                CALFACT_D: u7,
                padding: u9,
            }),
        };

        ///  Analog-to-Digital Converter
        pub const ADC_Common = extern struct {
            ///  ADC Common status register
            CSR: mmio.Mmio(packed struct(u32) {
                ///  ADDRDY_MST
                ADDRDY_MST: u1,
                ///  EOSMP_MST
                EOSMP_MST: u1,
                ///  EOC_MST
                EOC_MST: u1,
                ///  EOS_MST
                EOS_MST: u1,
                ///  OVR_MST
                OVR_MST: u1,
                ///  JEOC_MST
                JEOC_MST: u1,
                ///  JEOS_MST
                JEOS_MST: u1,
                ///  AWD1_MST
                AWD1_MST: u1,
                ///  AWD2_MST
                AWD2_MST: u1,
                ///  AWD3_MST
                AWD3_MST: u1,
                ///  JQOVF_MST
                JQOVF_MST: u1,
                reserved16: u5,
                ///  ADRDY_SLV
                ADRDY_SLV: u1,
                ///  EOSMP_SLV
                EOSMP_SLV: u1,
                ///  End of regular conversion of the slave ADC
                EOC_SLV: u1,
                ///  End of regular sequence flag of the slave ADC
                EOS_SLV: u1,
                ///  Overrun flag of the slave ADC
                OVR_SLV: u1,
                ///  End of injected conversion flag of the slave ADC
                JEOC_SLV: u1,
                ///  End of injected sequence flag of the slave ADC
                JEOS_SLV: u1,
                ///  Analog watchdog 1 flag of the slave ADC
                AWD1_SLV: u1,
                ///  Analog watchdog 2 flag of the slave ADC
                AWD2_SLV: u1,
                ///  Analog watchdog 3 flag of the slave ADC
                AWD3_SLV: u1,
                ///  Injected Context Queue Overflow flag of the slave ADC
                JQOVF_SLV: u1,
                padding: u5,
            }),
            reserved8: [4]u8,
            ///  ADC common control register
            CCR: mmio.Mmio(packed struct(u32) {
                ///  Dual ADC mode selection
                DUAL: u5,
                reserved8: u3,
                ///  Delay between 2 sampling phases
                DELAY: u4,
                reserved13: u1,
                ///  DMA configuration (for multi-ADC mode)
                DMACFG: u1,
                ///  Direct memory access mode for multi ADC mode
                MDMA: u2,
                ///  ADC clock mode
                CKMODE: u2,
                ///  ADC prescaler
                PRESC: u4,
                ///  VREFINT enable
                VREFEN: u1,
                ///  CH17 selection
                CH17SEL: u1,
                ///  CH18 selection
                CH18SEL: u1,
                padding: u7,
            }),
            ///  ADC common regular data register for dual and triple modes
            CDR: mmio.Mmio(packed struct(u32) {
                ///  Regular data of the master ADC
                RDATA_MST: u16,
                ///  Regular data of the slave ADC
                RDATA_SLV: u16,
            }),
        };

        ///  General-purpose I/Os
        pub const GPIOA = extern struct {
            ///  GPIO port mode register
            MODER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                MODER0: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER1: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER2: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER3: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER4: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER5: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER6: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER7: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER8: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER9: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER10: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER11: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER12: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER13: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER14: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER15: u2,
            }),
            ///  GPIO port output type register
            OTYPER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OT0: u1,
                ///  Port x configuration bits (y = 0..15)
                OT1: u1,
                ///  Port x configuration bits (y = 0..15)
                OT2: u1,
                ///  Port x configuration bits (y = 0..15)
                OT3: u1,
                ///  Port x configuration bits (y = 0..15)
                OT4: u1,
                ///  Port x configuration bits (y = 0..15)
                OT5: u1,
                ///  Port x configuration bits (y = 0..15)
                OT6: u1,
                ///  Port x configuration bits (y = 0..15)
                OT7: u1,
                ///  Port x configuration bits (y = 0..15)
                OT8: u1,
                ///  Port x configuration bits (y = 0..15)
                OT9: u1,
                ///  Port x configuration bits (y = 0..15)
                OT10: u1,
                ///  Port x configuration bits (y = 0..15)
                OT11: u1,
                ///  Port x configuration bits (y = 0..15)
                OT12: u1,
                ///  Port x configuration bits (y = 0..15)
                OT13: u1,
                ///  Port x configuration bits (y = 0..15)
                OT14: u1,
                ///  Port x configuration bits (y = 0..15)
                OT15: u1,
                padding: u16,
            }),
            ///  GPIO port output speed register
            OSPEEDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR15: u2,
            }),
            ///  GPIO port pull-up/pull-down register
            PUPDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                PUPDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR15: u2,
            }),
            ///  GPIO port input data register
            IDR: mmio.Mmio(packed struct(u32) {
                ///  Port input data (y = 0..15)
                IDR0: u1,
                ///  Port input data (y = 0..15)
                IDR1: u1,
                ///  Port input data (y = 0..15)
                IDR2: u1,
                ///  Port input data (y = 0..15)
                IDR3: u1,
                ///  Port input data (y = 0..15)
                IDR4: u1,
                ///  Port input data (y = 0..15)
                IDR5: u1,
                ///  Port input data (y = 0..15)
                IDR6: u1,
                ///  Port input data (y = 0..15)
                IDR7: u1,
                ///  Port input data (y = 0..15)
                IDR8: u1,
                ///  Port input data (y = 0..15)
                IDR9: u1,
                ///  Port input data (y = 0..15)
                IDR10: u1,
                ///  Port input data (y = 0..15)
                IDR11: u1,
                ///  Port input data (y = 0..15)
                IDR12: u1,
                ///  Port input data (y = 0..15)
                IDR13: u1,
                ///  Port input data (y = 0..15)
                IDR14: u1,
                ///  Port input data (y = 0..15)
                IDR15: u1,
                padding: u16,
            }),
            ///  GPIO port output data register
            ODR: mmio.Mmio(packed struct(u32) {
                ///  Port output data (y = 0..15)
                ODR0: u1,
                ///  Port output data (y = 0..15)
                ODR1: u1,
                ///  Port output data (y = 0..15)
                ODR2: u1,
                ///  Port output data (y = 0..15)
                ODR3: u1,
                ///  Port output data (y = 0..15)
                ODR4: u1,
                ///  Port output data (y = 0..15)
                ODR5: u1,
                ///  Port output data (y = 0..15)
                ODR6: u1,
                ///  Port output data (y = 0..15)
                ODR7: u1,
                ///  Port output data (y = 0..15)
                ODR8: u1,
                ///  Port output data (y = 0..15)
                ODR9: u1,
                ///  Port output data (y = 0..15)
                ODR10: u1,
                ///  Port output data (y = 0..15)
                ODR11: u1,
                ///  Port output data (y = 0..15)
                ODR12: u1,
                ///  Port output data (y = 0..15)
                ODR13: u1,
                ///  Port output data (y = 0..15)
                ODR14: u1,
                ///  Port output data (y = 0..15)
                ODR15: u1,
                padding: u16,
            }),
            ///  GPIO port bit set/reset register
            BSRR: mmio.Mmio(packed struct(u32) {
                ///  Port x set bit y (y= 0..15)
                BS0: u1,
                ///  Port x set bit y (y= 0..15)
                BS1: u1,
                ///  Port x set bit y (y= 0..15)
                BS2: u1,
                ///  Port x set bit y (y= 0..15)
                BS3: u1,
                ///  Port x set bit y (y= 0..15)
                BS4: u1,
                ///  Port x set bit y (y= 0..15)
                BS5: u1,
                ///  Port x set bit y (y= 0..15)
                BS6: u1,
                ///  Port x set bit y (y= 0..15)
                BS7: u1,
                ///  Port x set bit y (y= 0..15)
                BS8: u1,
                ///  Port x set bit y (y= 0..15)
                BS9: u1,
                ///  Port x set bit y (y= 0..15)
                BS10: u1,
                ///  Port x set bit y (y= 0..15)
                BS11: u1,
                ///  Port x set bit y (y= 0..15)
                BS12: u1,
                ///  Port x set bit y (y= 0..15)
                BS13: u1,
                ///  Port x set bit y (y= 0..15)
                BS14: u1,
                ///  Port x set bit y (y= 0..15)
                BS15: u1,
                ///  Port x set bit y (y= 0..15)
                BR0: u1,
                ///  Port x reset bit y (y = 0..15)
                BR1: u1,
                ///  Port x reset bit y (y = 0..15)
                BR2: u1,
                ///  Port x reset bit y (y = 0..15)
                BR3: u1,
                ///  Port x reset bit y (y = 0..15)
                BR4: u1,
                ///  Port x reset bit y (y = 0..15)
                BR5: u1,
                ///  Port x reset bit y (y = 0..15)
                BR6: u1,
                ///  Port x reset bit y (y = 0..15)
                BR7: u1,
                ///  Port x reset bit y (y = 0..15)
                BR8: u1,
                ///  Port x reset bit y (y = 0..15)
                BR9: u1,
                ///  Port x reset bit y (y = 0..15)
                BR10: u1,
                ///  Port x reset bit y (y = 0..15)
                BR11: u1,
                ///  Port x reset bit y (y = 0..15)
                BR12: u1,
                ///  Port x reset bit y (y = 0..15)
                BR13: u1,
                ///  Port x reset bit y (y = 0..15)
                BR14: u1,
                ///  Port x reset bit y (y = 0..15)
                BR15: u1,
            }),
            ///  GPIO port configuration lock register
            LCKR: mmio.Mmio(packed struct(u32) {
                ///  Port x lock bit y (y= 0..15)
                LCK0: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK1: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK2: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK3: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK4: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK5: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK6: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK7: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK8: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK9: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK10: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK11: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK12: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK13: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK14: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK15: u1,
                ///  Port x lock bit y (y= 0..15)
                LCKK: u1,
                padding: u15,
            }),
            ///  GPIO alternate function low register
            AFRL: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL0: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL1: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL2: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL3: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL4: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL5: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL6: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL7: u4,
            }),
            ///  GPIO alternate function high register
            AFRH: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH8: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH9: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH10: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH11: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH12: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH13: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH14: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH15: u4,
            }),
            ///  GPIO port bit reset register
            BRR: mmio.Mmio(packed struct(u32) {
                ///  Port Reset bit
                BR0: u1,
                ///  Port Reset bit
                BR1: u1,
                ///  Port Reset bit
                BR2: u1,
                ///  Port Reset bit
                BR3: u1,
                ///  Port Reset bit
                BR4: u1,
                ///  Port Reset bit
                BR5: u1,
                ///  Port Reset bit
                BR6: u1,
                ///  Port Reset bit
                BR7: u1,
                ///  Port Reset bit
                BR8: u1,
                ///  Port Reset bit
                BR9: u1,
                ///  Port Reset bit
                BR10: u1,
                ///  Port Reset bit
                BR11: u1,
                ///  Port Reset bit
                BR12: u1,
                ///  Port Reset bit
                BR13: u1,
                ///  Port Reset bit
                BR14: u1,
                ///  Port Reset bit
                BR15: u1,
                padding: u16,
            }),
            ///  GPIO port analog switch control register
            ASCR: mmio.Mmio(packed struct(u32) {
                ///  Port analog switch control
                ASC0: u1,
                ///  Port analog switch control
                ASC1: u1,
                ///  Port analog switch control
                ASC2: u1,
                ///  Port analog switch control
                ASC3: u1,
                ///  Port analog switch control
                ASC4: u1,
                ///  Port analog switch control
                ASC5: u1,
                ///  Port analog switch control
                ASC6: u1,
                ///  Port analog switch control
                ASC7: u1,
                ///  Port analog switch control
                ASC8: u1,
                ///  Port analog switch control
                ASC9: u1,
                ///  Port analog switch control
                ASC10: u1,
                ///  Port analog switch control
                ASC11: u1,
                ///  Port analog switch control
                ASC12: u1,
                ///  Port analog switch control
                ASC13: u1,
                ///  Port analog switch control
                ASC14: u1,
                ///  Port analog switch control
                ASC15: u1,
                padding: u16,
            }),
        };

        ///  General-purpose I/Os
        pub const GPIOB = extern struct {
            ///  GPIO port mode register
            MODER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                MODER0: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER1: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER2: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER3: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER4: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER5: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER6: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER7: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER8: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER9: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER10: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER11: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER12: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER13: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER14: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER15: u2,
            }),
            ///  GPIO port output type register
            OTYPER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OT0: u1,
                ///  Port x configuration bits (y = 0..15)
                OT1: u1,
                ///  Port x configuration bits (y = 0..15)
                OT2: u1,
                ///  Port x configuration bits (y = 0..15)
                OT3: u1,
                ///  Port x configuration bits (y = 0..15)
                OT4: u1,
                ///  Port x configuration bits (y = 0..15)
                OT5: u1,
                ///  Port x configuration bits (y = 0..15)
                OT6: u1,
                ///  Port x configuration bits (y = 0..15)
                OT7: u1,
                ///  Port x configuration bits (y = 0..15)
                OT8: u1,
                ///  Port x configuration bits (y = 0..15)
                OT9: u1,
                ///  Port x configuration bits (y = 0..15)
                OT10: u1,
                ///  Port x configuration bits (y = 0..15)
                OT11: u1,
                ///  Port x configuration bits (y = 0..15)
                OT12: u1,
                ///  Port x configuration bits (y = 0..15)
                OT13: u1,
                ///  Port x configuration bits (y = 0..15)
                OT14: u1,
                ///  Port x configuration bits (y = 0..15)
                OT15: u1,
                padding: u16,
            }),
            ///  GPIO port output speed register
            OSPEEDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR15: u2,
            }),
            ///  GPIO port pull-up/pull-down register
            PUPDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                PUPDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR15: u2,
            }),
            ///  GPIO port input data register
            IDR: mmio.Mmio(packed struct(u32) {
                ///  Port input data (y = 0..15)
                IDR0: u1,
                ///  Port input data (y = 0..15)
                IDR1: u1,
                ///  Port input data (y = 0..15)
                IDR2: u1,
                ///  Port input data (y = 0..15)
                IDR3: u1,
                ///  Port input data (y = 0..15)
                IDR4: u1,
                ///  Port input data (y = 0..15)
                IDR5: u1,
                ///  Port input data (y = 0..15)
                IDR6: u1,
                ///  Port input data (y = 0..15)
                IDR7: u1,
                ///  Port input data (y = 0..15)
                IDR8: u1,
                ///  Port input data (y = 0..15)
                IDR9: u1,
                ///  Port input data (y = 0..15)
                IDR10: u1,
                ///  Port input data (y = 0..15)
                IDR11: u1,
                ///  Port input data (y = 0..15)
                IDR12: u1,
                ///  Port input data (y = 0..15)
                IDR13: u1,
                ///  Port input data (y = 0..15)
                IDR14: u1,
                ///  Port input data (y = 0..15)
                IDR15: u1,
                padding: u16,
            }),
            ///  GPIO port output data register
            ODR: mmio.Mmio(packed struct(u32) {
                ///  Port output data (y = 0..15)
                ODR0: u1,
                ///  Port output data (y = 0..15)
                ODR1: u1,
                ///  Port output data (y = 0..15)
                ODR2: u1,
                ///  Port output data (y = 0..15)
                ODR3: u1,
                ///  Port output data (y = 0..15)
                ODR4: u1,
                ///  Port output data (y = 0..15)
                ODR5: u1,
                ///  Port output data (y = 0..15)
                ODR6: u1,
                ///  Port output data (y = 0..15)
                ODR7: u1,
                ///  Port output data (y = 0..15)
                ODR8: u1,
                ///  Port output data (y = 0..15)
                ODR9: u1,
                ///  Port output data (y = 0..15)
                ODR10: u1,
                ///  Port output data (y = 0..15)
                ODR11: u1,
                ///  Port output data (y = 0..15)
                ODR12: u1,
                ///  Port output data (y = 0..15)
                ODR13: u1,
                ///  Port output data (y = 0..15)
                ODR14: u1,
                ///  Port output data (y = 0..15)
                ODR15: u1,
                padding: u16,
            }),
            ///  GPIO port bit set/reset register
            BSRR: mmio.Mmio(packed struct(u32) {
                ///  Port x set bit y (y= 0..15)
                BS0: u1,
                ///  Port x set bit y (y= 0..15)
                BS1: u1,
                ///  Port x set bit y (y= 0..15)
                BS2: u1,
                ///  Port x set bit y (y= 0..15)
                BS3: u1,
                ///  Port x set bit y (y= 0..15)
                BS4: u1,
                ///  Port x set bit y (y= 0..15)
                BS5: u1,
                ///  Port x set bit y (y= 0..15)
                BS6: u1,
                ///  Port x set bit y (y= 0..15)
                BS7: u1,
                ///  Port x set bit y (y= 0..15)
                BS8: u1,
                ///  Port x set bit y (y= 0..15)
                BS9: u1,
                ///  Port x set bit y (y= 0..15)
                BS10: u1,
                ///  Port x set bit y (y= 0..15)
                BS11: u1,
                ///  Port x set bit y (y= 0..15)
                BS12: u1,
                ///  Port x set bit y (y= 0..15)
                BS13: u1,
                ///  Port x set bit y (y= 0..15)
                BS14: u1,
                ///  Port x set bit y (y= 0..15)
                BS15: u1,
                ///  Port x set bit y (y= 0..15)
                BR0: u1,
                ///  Port x reset bit y (y = 0..15)
                BR1: u1,
                ///  Port x reset bit y (y = 0..15)
                BR2: u1,
                ///  Port x reset bit y (y = 0..15)
                BR3: u1,
                ///  Port x reset bit y (y = 0..15)
                BR4: u1,
                ///  Port x reset bit y (y = 0..15)
                BR5: u1,
                ///  Port x reset bit y (y = 0..15)
                BR6: u1,
                ///  Port x reset bit y (y = 0..15)
                BR7: u1,
                ///  Port x reset bit y (y = 0..15)
                BR8: u1,
                ///  Port x reset bit y (y = 0..15)
                BR9: u1,
                ///  Port x reset bit y (y = 0..15)
                BR10: u1,
                ///  Port x reset bit y (y = 0..15)
                BR11: u1,
                ///  Port x reset bit y (y = 0..15)
                BR12: u1,
                ///  Port x reset bit y (y = 0..15)
                BR13: u1,
                ///  Port x reset bit y (y = 0..15)
                BR14: u1,
                ///  Port x reset bit y (y = 0..15)
                BR15: u1,
            }),
            ///  GPIO port configuration lock register
            LCKR: mmio.Mmio(packed struct(u32) {
                ///  Port x lock bit y (y= 0..15)
                LCK0: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK1: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK2: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK3: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK4: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK5: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK6: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK7: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK8: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK9: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK10: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK11: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK12: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK13: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK14: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK15: u1,
                ///  Port x lock bit y (y= 0..15)
                LCKK: u1,
                padding: u15,
            }),
            ///  GPIO alternate function low register
            AFRL: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL0: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL1: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL2: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL3: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL4: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL5: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL6: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL7: u4,
            }),
            ///  GPIO alternate function high register
            AFRH: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH8: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH9: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH10: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH11: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH12: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH13: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH14: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH15: u4,
            }),
            ///  GPIO port bit reset register
            BRR: mmio.Mmio(packed struct(u32) {
                ///  Port Reset bit
                BR0: u1,
                ///  Port Reset bit
                BR1: u1,
                ///  Port Reset bit
                BR2: u1,
                ///  Port Reset bit
                BR3: u1,
                ///  Port Reset bit
                BR4: u1,
                ///  Port Reset bit
                BR5: u1,
                ///  Port Reset bit
                BR6: u1,
                ///  Port Reset bit
                BR7: u1,
                ///  Port Reset bit
                BR8: u1,
                ///  Port Reset bit
                BR9: u1,
                ///  Port Reset bit
                BR10: u1,
                ///  Port Reset bit
                BR11: u1,
                ///  Port Reset bit
                BR12: u1,
                ///  Port Reset bit
                BR13: u1,
                ///  Port Reset bit
                BR14: u1,
                ///  Port Reset bit
                BR15: u1,
                padding: u16,
            }),
            ///  GPIO port analog switch control register
            ASCR: mmio.Mmio(packed struct(u32) {
                ///  Port analog switch control
                ASC0: u1,
                ///  Port analog switch control
                ASC1: u1,
                ///  Port analog switch control
                ASC2: u1,
                ///  Port analog switch control
                ASC3: u1,
                ///  Port analog switch control
                ASC4: u1,
                ///  Port analog switch control
                ASC5: u1,
                ///  Port analog switch control
                ASC6: u1,
                ///  Port analog switch control
                ASC7: u1,
                ///  Port analog switch control
                ASC8: u1,
                ///  Port analog switch control
                ASC9: u1,
                ///  Port analog switch control
                ASC10: u1,
                ///  Port analog switch control
                ASC11: u1,
                ///  Port analog switch control
                ASC12: u1,
                ///  Port analog switch control
                ASC13: u1,
                ///  Port analog switch control
                ASC14: u1,
                ///  Port analog switch control
                ASC15: u1,
                padding: u16,
            }),
        };

        ///  General-purpose I/Os
        pub const GPIOC = extern struct {
            ///  GPIO port mode register
            MODER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                MODER0: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER1: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER2: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER3: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER4: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER5: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER6: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER7: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER8: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER9: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER10: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER11: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER12: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER13: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER14: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER15: u2,
            }),
            ///  GPIO port output type register
            OTYPER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OT0: u1,
                ///  Port x configuration bits (y = 0..15)
                OT1: u1,
                ///  Port x configuration bits (y = 0..15)
                OT2: u1,
                ///  Port x configuration bits (y = 0..15)
                OT3: u1,
                ///  Port x configuration bits (y = 0..15)
                OT4: u1,
                ///  Port x configuration bits (y = 0..15)
                OT5: u1,
                ///  Port x configuration bits (y = 0..15)
                OT6: u1,
                ///  Port x configuration bits (y = 0..15)
                OT7: u1,
                ///  Port x configuration bits (y = 0..15)
                OT8: u1,
                ///  Port x configuration bits (y = 0..15)
                OT9: u1,
                ///  Port x configuration bits (y = 0..15)
                OT10: u1,
                ///  Port x configuration bits (y = 0..15)
                OT11: u1,
                ///  Port x configuration bits (y = 0..15)
                OT12: u1,
                ///  Port x configuration bits (y = 0..15)
                OT13: u1,
                ///  Port x configuration bits (y = 0..15)
                OT14: u1,
                ///  Port x configuration bits (y = 0..15)
                OT15: u1,
                padding: u16,
            }),
            ///  GPIO port output speed register
            OSPEEDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR15: u2,
            }),
            ///  GPIO port pull-up/pull-down register
            PUPDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                PUPDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR15: u2,
            }),
            ///  GPIO port input data register
            IDR: mmio.Mmio(packed struct(u32) {
                ///  Port input data (y = 0..15)
                IDR0: u1,
                ///  Port input data (y = 0..15)
                IDR1: u1,
                ///  Port input data (y = 0..15)
                IDR2: u1,
                ///  Port input data (y = 0..15)
                IDR3: u1,
                ///  Port input data (y = 0..15)
                IDR4: u1,
                ///  Port input data (y = 0..15)
                IDR5: u1,
                ///  Port input data (y = 0..15)
                IDR6: u1,
                ///  Port input data (y = 0..15)
                IDR7: u1,
                ///  Port input data (y = 0..15)
                IDR8: u1,
                ///  Port input data (y = 0..15)
                IDR9: u1,
                ///  Port input data (y = 0..15)
                IDR10: u1,
                ///  Port input data (y = 0..15)
                IDR11: u1,
                ///  Port input data (y = 0..15)
                IDR12: u1,
                ///  Port input data (y = 0..15)
                IDR13: u1,
                ///  Port input data (y = 0..15)
                IDR14: u1,
                ///  Port input data (y = 0..15)
                IDR15: u1,
                padding: u16,
            }),
            ///  GPIO port output data register
            ODR: mmio.Mmio(packed struct(u32) {
                ///  Port output data (y = 0..15)
                ODR0: u1,
                ///  Port output data (y = 0..15)
                ODR1: u1,
                ///  Port output data (y = 0..15)
                ODR2: u1,
                ///  Port output data (y = 0..15)
                ODR3: u1,
                ///  Port output data (y = 0..15)
                ODR4: u1,
                ///  Port output data (y = 0..15)
                ODR5: u1,
                ///  Port output data (y = 0..15)
                ODR6: u1,
                ///  Port output data (y = 0..15)
                ODR7: u1,
                ///  Port output data (y = 0..15)
                ODR8: u1,
                ///  Port output data (y = 0..15)
                ODR9: u1,
                ///  Port output data (y = 0..15)
                ODR10: u1,
                ///  Port output data (y = 0..15)
                ODR11: u1,
                ///  Port output data (y = 0..15)
                ODR12: u1,
                ///  Port output data (y = 0..15)
                ODR13: u1,
                ///  Port output data (y = 0..15)
                ODR14: u1,
                ///  Port output data (y = 0..15)
                ODR15: u1,
                padding: u16,
            }),
            ///  GPIO port bit set/reset register
            BSRR: mmio.Mmio(packed struct(u32) {
                ///  Port x set bit y (y= 0..15)
                BS0: u1,
                ///  Port x set bit y (y= 0..15)
                BS1: u1,
                ///  Port x set bit y (y= 0..15)
                BS2: u1,
                ///  Port x set bit y (y= 0..15)
                BS3: u1,
                ///  Port x set bit y (y= 0..15)
                BS4: u1,
                ///  Port x set bit y (y= 0..15)
                BS5: u1,
                ///  Port x set bit y (y= 0..15)
                BS6: u1,
                ///  Port x set bit y (y= 0..15)
                BS7: u1,
                ///  Port x set bit y (y= 0..15)
                BS8: u1,
                ///  Port x set bit y (y= 0..15)
                BS9: u1,
                ///  Port x set bit y (y= 0..15)
                BS10: u1,
                ///  Port x set bit y (y= 0..15)
                BS11: u1,
                ///  Port x set bit y (y= 0..15)
                BS12: u1,
                ///  Port x set bit y (y= 0..15)
                BS13: u1,
                ///  Port x set bit y (y= 0..15)
                BS14: u1,
                ///  Port x set bit y (y= 0..15)
                BS15: u1,
                ///  Port x set bit y (y= 0..15)
                BR0: u1,
                ///  Port x reset bit y (y = 0..15)
                BR1: u1,
                ///  Port x reset bit y (y = 0..15)
                BR2: u1,
                ///  Port x reset bit y (y = 0..15)
                BR3: u1,
                ///  Port x reset bit y (y = 0..15)
                BR4: u1,
                ///  Port x reset bit y (y = 0..15)
                BR5: u1,
                ///  Port x reset bit y (y = 0..15)
                BR6: u1,
                ///  Port x reset bit y (y = 0..15)
                BR7: u1,
                ///  Port x reset bit y (y = 0..15)
                BR8: u1,
                ///  Port x reset bit y (y = 0..15)
                BR9: u1,
                ///  Port x reset bit y (y = 0..15)
                BR10: u1,
                ///  Port x reset bit y (y = 0..15)
                BR11: u1,
                ///  Port x reset bit y (y = 0..15)
                BR12: u1,
                ///  Port x reset bit y (y = 0..15)
                BR13: u1,
                ///  Port x reset bit y (y = 0..15)
                BR14: u1,
                ///  Port x reset bit y (y = 0..15)
                BR15: u1,
            }),
            ///  GPIO port configuration lock register
            LCKR: mmio.Mmio(packed struct(u32) {
                ///  Port x lock bit y (y= 0..15)
                LCK0: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK1: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK2: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK3: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK4: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK5: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK6: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK7: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK8: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK9: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK10: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK11: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK12: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK13: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK14: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK15: u1,
                ///  Port x lock bit y (y= 0..15)
                LCKK: u1,
                padding: u15,
            }),
            ///  GPIO alternate function low register
            AFRL: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL0: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL1: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL2: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL3: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL4: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL5: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL6: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL7: u4,
            }),
            ///  GPIO alternate function high register
            AFRH: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH8: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH9: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH10: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH11: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH12: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH13: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH14: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH15: u4,
            }),
            ///  GPIO port bit reset register
            BRR: mmio.Mmio(packed struct(u32) {
                ///  Port Reset bit
                BR0: u1,
                ///  Port Reset bit
                BR1: u1,
                ///  Port Reset bit
                BR2: u1,
                ///  Port Reset bit
                BR3: u1,
                ///  Port Reset bit
                BR4: u1,
                ///  Port Reset bit
                BR5: u1,
                ///  Port Reset bit
                BR6: u1,
                ///  Port Reset bit
                BR7: u1,
                ///  Port Reset bit
                BR8: u1,
                ///  Port Reset bit
                BR9: u1,
                ///  Port Reset bit
                BR10: u1,
                ///  Port Reset bit
                BR11: u1,
                ///  Port Reset bit
                BR12: u1,
                ///  Port Reset bit
                BR13: u1,
                ///  Port Reset bit
                BR14: u1,
                ///  Port Reset bit
                BR15: u1,
                padding: u16,
            }),
            ///  GPIO port analog switch control register
            ASCR: mmio.Mmio(packed struct(u32) {
                ///  Port analog switch control
                ASC0: u1,
                ///  Port analog switch control
                ASC1: u1,
                ///  Port analog switch control
                ASC2: u1,
                ///  Port analog switch control
                ASC3: u1,
                ///  Port analog switch control
                ASC4: u1,
                ///  Port analog switch control
                ASC5: u1,
                ///  Port analog switch control
                ASC6: u1,
                ///  Port analog switch control
                ASC7: u1,
                ///  Port analog switch control
                ASC8: u1,
                ///  Port analog switch control
                ASC9: u1,
                ///  Port analog switch control
                ASC10: u1,
                ///  Port analog switch control
                ASC11: u1,
                ///  Port analog switch control
                ASC12: u1,
                ///  Port analog switch control
                ASC13: u1,
                ///  Port analog switch control
                ASC14: u1,
                ///  Port analog switch control
                ASC15: u1,
                padding: u16,
            }),
        };

        ///  Memory protection unit
        pub const MPU = extern struct {
            ///  MPU type register
            MPU_TYPER: mmio.Mmio(packed struct(u32) {
                ///  Separate flag
                SEPARATE: u1,
                reserved8: u7,
                ///  Number of MPU data regions
                DREGION: u8,
                ///  Number of MPU instruction regions
                IREGION: u8,
                padding: u8,
            }),
            ///  MPU control register
            MPU_CTRL: mmio.Mmio(packed struct(u32) {
                ///  Enables the MPU
                ENABLE: u1,
                ///  Enables the operation of MPU during hard fault
                HFNMIENA: u1,
                ///  Enable priviliged software access to default memory map
                PRIVDEFENA: u1,
                padding: u29,
            }),
            ///  MPU region number register
            MPU_RNR: mmio.Mmio(packed struct(u32) {
                ///  MPU region
                REGION: u8,
                padding: u24,
            }),
            ///  MPU region base address register
            MPU_RBAR: mmio.Mmio(packed struct(u32) {
                ///  MPU region field
                REGION: u4,
                ///  MPU region number valid
                VALID: u1,
                ///  Region base address field
                ADDR: u27,
            }),
            ///  MPU region attribute and size register
            MPU_RASR: mmio.Mmio(packed struct(u32) {
                ///  Region enable bit.
                ENABLE: u1,
                ///  Size of the MPU protection region
                SIZE: u5,
                reserved8: u2,
                ///  Subregion disable bits
                SRD: u8,
                ///  memory attribute
                B: u1,
                ///  memory attribute
                C: u1,
                ///  Shareable memory attribute
                S: u1,
                ///  memory attribute
                TEX: u3,
                reserved24: u2,
                ///  Access permission
                AP: u3,
                reserved28: u1,
                ///  Instruction access disable bit
                XN: u1,
                padding: u3,
            }),
        };

        ///  Floting point unit
        pub const FPU = extern struct {
            ///  Floating-point context control register
            FPCCR: mmio.Mmio(packed struct(u32) {
                ///  LSPACT
                LSPACT: u1,
                ///  USER
                USER: u1,
                reserved3: u1,
                ///  THREAD
                THREAD: u1,
                ///  HFRDY
                HFRDY: u1,
                ///  MMRDY
                MMRDY: u1,
                ///  BFRDY
                BFRDY: u1,
                reserved8: u1,
                ///  MONRDY
                MONRDY: u1,
                reserved30: u21,
                ///  LSPEN
                LSPEN: u1,
                ///  ASPEN
                ASPEN: u1,
            }),
            ///  Floating-point context address register
            FPCAR: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  Location of unpopulated floating-point
                ADDRESS: u29,
            }),
            ///  Floating-point status control register
            FPSCR: mmio.Mmio(packed struct(u32) {
                ///  Invalid operation cumulative exception bit
                IOC: u1,
                ///  Division by zero cumulative exception bit.
                DZC: u1,
                ///  Overflow cumulative exception bit
                OFC: u1,
                ///  Underflow cumulative exception bit
                UFC: u1,
                ///  Inexact cumulative exception bit
                IXC: u1,
                reserved7: u2,
                ///  Input denormal cumulative exception bit.
                IDC: u1,
                reserved22: u14,
                ///  Rounding Mode control field
                RMode: u2,
                ///  Flush-to-zero mode control bit:
                FZ: u1,
                ///  Default NaN mode control bit
                DN: u1,
                ///  Alternative half-precision control bit
                AHP: u1,
                reserved28: u1,
                ///  Overflow condition code flag
                V: u1,
                ///  Carry condition code flag
                C: u1,
                ///  Zero condition code flag
                Z: u1,
                ///  Negative condition code flag
                N: u1,
            }),
        };

        ///  OctoSPI IO Manager
        pub const OCTOSPIM = extern struct {
            reserved4: [4]u8,
            ///  OctoSPI IO Manager Port 1 Configuration Register
            P1CR: mmio.Mmio(packed struct(u32) {
                ///  CLK/CLK Enable for Port
                CLKEN: u1,
                ///  CLK/CLK Source for Port
                CLKSRC: u1,
                reserved4: u2,
                ///  DQS Enable for Port
                DQSEN: u1,
                ///  DQS Source for Port
                DQSSRC: u1,
                reserved8: u2,
                ///  CS Enable for Port
                NCSEN: u1,
                ///  CS Source for Port
                NCSSRC: u1,
                reserved16: u6,
                ///  Enable for Port
                IOLEN: u1,
                ///  Source for Port
                IOLSRC: u2,
                reserved24: u5,
                ///  Enable for Port n
                IOHEN: u1,
                ///  Source for Port
                IOHSRC: u2,
                padding: u5,
            }),
            ///  OctoSPI IO Manager Port 2 Configuration Register
            P2CR: mmio.Mmio(packed struct(u32) {
                ///  CLK/CLK Enable for Port
                CLKEN: u1,
                ///  CLK/CLK Source for Port
                CLKSRC: u1,
                reserved4: u2,
                ///  DQS Enable for Port
                DQSEN: u1,
                ///  DQS Source for Port
                DQSSRC: u1,
                reserved8: u2,
                ///  CS Enable for Port
                NCSEN: u1,
                ///  CS Source for Port
                NCSSRC: u1,
                reserved16: u6,
                ///  Enable for Port
                IOLEN: u1,
                ///  Source for Port
                IOLSRC: u2,
                reserved24: u5,
                ///  Enable for Port n
                IOHEN: u1,
                ///  Source for Port
                IOHSRC: u2,
                padding: u5,
            }),
        };

        ///  Graphic MMU
        pub const GFXMMU = extern struct {
            ///  Graphic MMU configuration register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Buffer 0 overflow interrupt enable
                B0OIE: u1,
                ///  Buffer 1 overflow interrupt enable
                B1OIE: u1,
                ///  Buffer 2 overflow interrupt enable
                B2OIE: u1,
                ///  Buffer 3 overflow interrupt enable
                B3OIE: u1,
                ///  AHB master error interrupt enable
                AMEIE: u1,
                reserved6: u1,
                ///  192 Block mode
                BM192: u1,
                padding: u25,
            }),
            ///  Graphic MMU status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Buffer 0 overflow flag
                B0OF: u1,
                ///  Buffer 1 overflow flag
                B1OF: u1,
                ///  Buffer 2 overflow flag
                B2OF: u1,
                ///  Buffer 3 overflow flag
                B3OF: u1,
                ///  AHB master error flag
                AMEF: u1,
                padding: u27,
            }),
            ///  Graphic MMU flag clear register
            FCR: mmio.Mmio(packed struct(u32) {
                ///  Clear buffer 0 overflow flag
                CB0OF: u1,
                ///  Clear buffer 1 overflow flag
                CB1OF: u1,
                ///  Clear buffer 2 overflow flag
                CB2OF: u1,
                ///  Clear buffer 3 overflow flag
                CB3OF: u1,
                ///  Clear AHB master error flag
                CAMEF: u1,
                padding: u27,
            }),
            reserved16: [4]u8,
            ///  Graphic MMU default value register
            DVR: mmio.Mmio(packed struct(u32) {
                ///  Default value
                DV: u32,
            }),
            reserved32: [12]u8,
            ///  Graphic MMU buffer 0 configuration register
            B0CR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Physical buffer offset
                PBO: u19,
                ///  Physical buffer base address
                PBBA: u9,
            }),
            ///  Graphic MMU buffer 1 configuration register
            B1CR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Physical buffer offset
                PBO: u19,
                ///  Physical buffer base address
                PBBA: u9,
            }),
            ///  Graphic MMU buffer 2 configuration register
            B2CR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Physical buffer offset
                PBO: u19,
                ///  Physical buffer base address
                PBBA: u9,
            }),
            ///  Graphic MMU buffer 3 configuration register
            B3CR: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Physical buffer offset
                PBO: u19,
                ///  Physical buffer base address
                PBBA: u9,
            }),
            reserved4084: [4036]u8,
            ///  Graphic MMU version register
            VERR: mmio.Mmio(packed struct(u32) {
                ///  Minor revision
                MINREV: u4,
                ///  Major revision
                MAJREV: u4,
                padding: u24,
            }),
            ///  Graphic MMU identification register
            IPIDR: mmio.Mmio(packed struct(u32) {
                ///  Identification Code
                ID: u32,
            }),
            ///  Graphic MMU size identification register
            SIDR: mmio.Mmio(packed struct(u32) {
                ///  Size and ID
                SID: u32,
            }),
            ///  Graphic MMU LUT entry 0 low
            LUT0L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 0 high
            LUT0H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1 low
            LUT1L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1 high
            LUT1H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 2 low
            LUT2L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 2 high
            LUT2H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 3 low
            LUT3L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 3 high
            LUT3H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 4 low
            LUT4L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 4 high
            LUT4H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 5 low
            LUT5L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 5 high
            LUT5H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 6 low
            LUT6L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 6 high
            LUT6H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 7 low
            LUT7L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 7 high
            LUT7H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 8 low
            LUT8L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 8 high
            LUT8H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 9 low
            LUT9L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 9 high
            LUT9H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 10 low
            LUT10L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 10 high
            LUT10H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 11 low
            LUT11L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 11 high
            LUT11H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 12 low
            LUT12L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 12 high
            LUT12H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 13 low
            LUT13L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 13 high
            LUT13H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 14 low
            LUT14L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 14 high
            LUT14H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 15 low
            LUT15L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 15 high
            LUT15H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 16 low
            LUT16L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 16 high
            LUT16H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 17 low
            LUT17L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 17 high
            LUT17H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 18 low
            LUT18L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 18 high
            LUT18H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 19 low
            LUT19L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 19 high
            LUT19H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 20 low
            LUT20L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 20 high
            LUT20H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 21 low
            LUT21L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 21 high
            LUT21H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 22 low
            LUT22L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 22 high
            LUT22H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 23 low
            LUT23L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 23 high
            LUT23H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 24 low
            LUT24L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 24 high
            LUT24H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 25 low
            LUT25L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 25 high
            LUT25H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 26 low
            LUT26L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 26 high
            LUT26H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 27 low
            LUT27L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 27 high
            LUT27H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 28 low
            LUT28L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 28 high
            LUT28H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 29 low
            LUT29L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 29 high
            LUT29H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 30 low
            LUT30L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 30 high
            LUT30H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 31 low
            LUT31L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 31 high
            LUT31H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 32 low
            LUT32L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 32 high
            LUT32H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 33 low
            LUT33L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 33 high
            LUT33H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 34 low
            LUT34L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 34 high
            LUT34H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 35 low
            LUT35L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 35 high
            LUT35H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 36 low
            LUT36L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 36 high
            LUT36H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 37 low
            LUT37L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 37 high
            LUT37H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 38 low
            LUT38L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 38 high
            LUT38H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 39 low
            LUT39L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 39 high
            LUT39H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 40 low
            LUT40L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 40 high
            LUT40H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 41 low
            LUT41L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 41 high
            LUT41H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 42 low
            LUT42L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 42 high
            LUT42H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 43 low
            LUT43L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 43 high
            LUT43H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 44 low
            LUT44L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 44 high
            LUT44H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 45 low
            LUT45L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 45 high
            LUT45H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 46 low
            LUT46L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 46 high
            LUT46H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 47 low
            LUT47L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 47 high
            LUT47H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 48 low
            LUT48L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 48 high
            LUT48H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 49 low
            LUT49L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 49 high
            LUT49H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 50 low
            LUT50L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 50 high
            LUT50H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 51 low
            LUT51L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 51 high
            LUT51H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 52 low
            LUT52L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 52 high
            LUT52H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 53 low
            LUT53L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 53 high
            LUT53H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 54 low
            LUT54L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 54 high
            LUT54H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 55 low
            LUT55L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 55 high
            LUT55H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 56 low
            LUT56L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 56 high
            LUT56H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 57 low
            LUT57L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 57 high
            LUT57H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 58 low
            LUT58L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 58 high
            LUT58H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 59 low
            LUT59L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 59 high
            LUT59H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 60 low
            LUT60L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 60 high
            LUT60H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 61 low
            LUT61L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 61 high
            LUT61H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 62 low
            LUT62L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 62 high
            LUT62H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 63 low
            LUT63L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 63 high
            LUT63H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 64 low
            LUT64L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 64 high
            LUT64H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 65 low
            LUT65L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 65 high
            LUT65H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 66 low
            LUT66L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 66 high
            LUT66H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 67 low
            LUT67L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 67 high
            LUT67H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 68 low
            LUT68L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 68 high
            LUT68H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 69 low
            LUT69L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 69 high
            LUT69H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 70 low
            LUT70L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 70 high
            LUT70H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 71 low
            LUT71L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 71 high
            LUT71H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 72 low
            LUT72L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 72 high
            LUT72H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 73 low
            LUT73L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 73 high
            LUT73H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 74 low
            LUT74L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 74 high
            LUT74H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 75 low
            LUT75L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 75 high
            LUT75H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 76 low
            LUT76L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 76 high
            LUT76H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 77 low
            LUT77L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 77 high
            LUT77H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 78 low
            LUT78L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 78 high
            LUT78H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 79 low
            LUT79L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 79 high
            LUT79H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 80 low
            LUT80L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 80 high
            LUT80H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 81 low
            LUT81L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 81 high
            LUT81H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 82 low
            LUT82L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 82 high
            LUT82H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 83 low
            LUT83L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 83 high
            LUT83H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 84 low
            LUT84L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 84 high
            LUT84H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 85 low
            LUT85L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 85 high
            LUT85H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 86 low
            LUT86L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 86 high
            LUT86H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 87 low
            LUT87L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 87 high
            LUT87H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 88 low
            LUT88L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 88 high
            LUT88H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 89 low
            LUT89L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 89 high
            LUT89H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 90 low
            LUT90L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 90 high
            LUT90H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 91 low
            LUT91L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 91 high
            LUT91H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 92 low
            LUT92L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 92 high
            LUT92H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 93 low
            LUT93L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 93 high
            LUT93H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 94 low
            LUT94L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 94 high
            LUT94H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 95 low
            LUT95L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 95 high
            LUT95H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 96 low
            LUT96L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 96 high
            LUT96H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 97 low
            LUT97L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 97 high
            LUT97H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 98 low
            LUT98L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 98 high
            LUT98H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 99 low
            LUT99L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 99 high
            LUT99H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 100 low
            LUT100L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 100 high
            LUT100H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 101 low
            LUT101L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 101 high
            LUT101H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 102 low
            LUT102L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 102 high
            LUT102H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 103 low
            LUT103L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 103 high
            LUT103H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 104 low
            LUT104L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 104 high
            LUT104H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 105 low
            LUT105L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 105 high
            LUT105H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 106 low
            LUT106L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 106 high
            LUT106H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 107 low
            LUT107L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 107 high
            LUT107H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 108 low
            LUT108L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 108 high
            LUT108H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 109 low
            LUT109L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 109 high
            LUT109H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 110 low
            LUT110L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 110 high
            LUT110H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 111 low
            LUT111L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 111 high
            LUT111H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 112 low
            LUT112L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 112 high
            LUT112H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 113 low
            LUT113L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 113 high
            LUT113H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 114 low
            LUT114L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 114 high
            LUT114H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 115 low
            LUT115L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 115 high
            LUT115H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 116 low
            LUT116L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 116 high
            LUT116H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 117 low
            LUT117L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 117 high
            LUT117H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 118 low
            LUT118L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 118 high
            LUT118H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 119 low
            LUT119L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 119 high
            LUT119H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 120 low
            LUT120L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 120 high
            LUT120H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 121 low
            LUT121L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 121 high
            LUT121H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 122 low
            LUT122L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 122 high
            LUT122H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 123 low
            LUT123L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 123 high
            LUT123H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 124 low
            LUT124L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 124 high
            LUT124H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 125 low
            LUT125L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 125 high
            LUT125H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 126 low
            LUT126L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 126 high
            LUT126H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 127 low
            LUT127L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 127 high
            LUT127H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 128 low
            LUT128L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 128 high
            LUT128H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 129 low
            LUT129L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 129 high
            LUT129H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 130 low
            LUT130L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 130 high
            LUT130H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 131 low
            LUT131L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 131 high
            LUT131H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 132 low
            LUT132L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 132 high
            LUT132H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 133 low
            LUT133L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 133 high
            LUT133H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 134 low
            LUT134L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 134 high
            LUT134H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 135 low
            LUT135L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 135 high
            LUT135H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 136 low
            LUT136L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 136 high
            LUT136H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 137 low
            LUT137L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 137 high
            LUT137H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 138 low
            LUT138L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 138 high
            LUT138H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 139 low
            LUT139L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 139 high
            LUT139H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 140 low
            LUT140L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 140 high
            LUT140H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 141 low
            LUT141L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 141 high
            LUT141H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 142 low
            LUT142L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 142 high
            LUT142H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 143 low
            LUT143L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 143 high
            LUT143H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 144 low
            LUT144L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 144 high
            LUT144H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 145 low
            LUT145L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 145 high
            LUT145H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 146 low
            LUT146L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 146 high
            LUT146H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 147 low
            LUT147L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 147 high
            LUT147H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 148 low
            LUT148L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 148 high
            LUT148H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 149 low
            LUT149L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 149 high
            LUT149H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 150 low
            LUT150L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 150 high
            LUT150H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 151 low
            LUT151L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 151 high
            LUT151H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 152 low
            LUT152L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 152 high
            LUT152H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 153 low
            LUT153L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 153 high
            LUT153H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 154 low
            LUT154L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 154 high
            LUT154H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 155 low
            LUT155L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 155 high
            LUT155H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 156 low
            LUT156L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 156 high
            LUT156H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 157 low
            LUT157L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 157 high
            LUT157H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 158 low
            LUT158L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 158 high
            LUT158H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 159 low
            LUT159L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 159 high
            LUT159H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 160 low
            LUT160L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 160 high
            LUT160H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 161 low
            LUT161L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 161 high
            LUT161H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 162 low
            LUT162L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 162 high
            LUT162H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 163 low
            LUT163L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 163 high
            LUT163H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 164 low
            LUT164L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 164 high
            LUT164H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 165 low
            LUT165L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 165 high
            LUT165H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 166 low
            LUT166L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 166 high
            LUT166H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 167 low
            LUT167L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 167 high
            LUT167H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 168 low
            LUT168L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 168 high
            LUT168H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 169 low
            LUT169L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 169 high
            LUT169H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 170 low
            LUT170L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 170 high
            LUT170H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 171 low
            LUT171L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 171 high
            LUT171H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 172 low
            LUT172L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 172 high
            LUT172H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 173 low
            LUT173L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 173 high
            LUT173H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 174 low
            LUT174L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 174 high
            LUT174H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 175 low
            LUT175L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 175 high
            LUT175H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 176 low
            LUT176L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 176 high
            LUT176H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 177 low
            LUT177L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 177 high
            LUT177H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 178 low
            LUT178L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 178 high
            LUT178H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 179 low
            LUT179L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 179 high
            LUT179H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 180 low
            LUT180L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 180 high
            LUT180H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 181 low
            LUT181L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 181 high
            LUT181H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 182 low
            LUT182L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 182 high
            LUT182H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 183 low
            LUT183L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 183 high
            LUT183H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 184 low
            LUT184L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 184 high
            LUT184H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 185 low
            LUT185L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 185 high
            LUT185H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 186 low
            LUT186L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 186 high
            LUT186H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 187 low
            LUT187L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 187 high
            LUT187H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 188 low
            LUT188L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 188 high
            LUT188H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 189 low
            LUT189L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 189 high
            LUT189H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 190 low
            LUT190L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 190 high
            LUT190H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 191 low
            LUT191L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 191 high
            LUT191H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 192 low
            LUT192L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 192 high
            LUT192H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 193 low
            LUT193L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 193 high
            LUT193H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 194 low
            LUT194L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 194 high
            LUT194H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 195 low
            LUT195L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 195 high
            LUT195H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 196 low
            LUT196L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 196 high
            LUT196H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 197 low
            LUT197L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 197 high
            LUT197H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 198 low
            LUT198L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 198 high
            LUT198H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 199 low
            LUT199L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 199 high
            LUT199H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 200 low
            LUT200L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 200 high
            LUT200H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 201 low
            LUT201L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 201 high
            LUT201H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 202 low
            LUT202L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 202 high
            LUT202H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 203 low
            LUT203L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 203 high
            LUT203H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 204 low
            LUT204L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 204 high
            LUT204H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 205 low
            LUT205L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 205 high
            LUT205H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 206 low
            LUT206L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 206 high
            LUT206H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 207 low
            LUT207L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 207 high
            LUT207H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 208 low
            LUT208L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 208 high
            LUT208H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 209 low
            LUT209L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 209 high
            LUT209H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 210 low
            LUT210L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 210 high
            LUT210H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 211 low
            LUT211L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 211 high
            LUT211H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 212 low
            LUT212L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 212 high
            LUT212H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 213 low
            LUT213L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 213 high
            LUT213H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 214 low
            LUT214L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 214 high
            LUT214H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 215 low
            LUT215L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 215 high
            LUT215H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 216 low
            LUT216L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 216 high
            LUT216H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 217 low
            LUT217L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 217 high
            LUT217H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 218 low
            LUT218L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 218 high
            LUT218H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 219 low
            LUT219L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 219 high
            LUT219H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 220 low
            LUT220L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 220 high
            LUT220H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 221 low
            LUT221L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 221 high
            LUT221H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 222 low
            LUT222L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 222 high
            LUT222H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 223 low
            LUT223L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 223 high
            LUT223H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 224 low
            LUT224L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 224 high
            LUT224H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 225 low
            LUT225L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 225 high
            LUT225H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 226 low
            LUT226L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 226 high
            LUT226H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 227 low
            LUT227L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 227 high
            LUT227H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 228 low
            LUT228L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 228 high
            LUT228H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 229 low
            LUT229L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 229 high
            LUT229H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 230 low
            LUT230L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 230 high
            LUT230H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 231 low
            LUT231L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 231 high
            LUT231H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 232 low
            LUT232L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 232 high
            LUT232H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 233 low
            LUT233L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 233 high
            LUT233H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 234 low
            LUT234L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 234 high
            LUT234H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 235 low
            LUT235L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 235 high
            LUT235H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 236 low
            LUT236L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 236 high
            LUT236H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 237 low
            LUT237L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 237 high
            LUT237H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 238 low
            LUT238L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 238 high
            LUT238H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 239 low
            LUT239L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 239 high
            LUT239H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 240 low
            LUT240L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 240 high
            LUT240H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 241 low
            LUT241L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 241 high
            LUT241H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 242 low
            LUT242L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 242 high
            LUT242H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 243 low
            LUT243L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 243 high
            LUT243H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 244 low
            LUT244L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 244 high
            LUT244H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 245 low
            LUT245L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 245 high
            LUT245H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 246 low
            LUT246L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 246 high
            LUT246H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 247 low
            LUT247L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 247 high
            LUT247H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 248 low
            LUT248L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 248 high
            LUT248H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 249 low
            LUT249L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 249 high
            LUT249H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 250 low
            LUT250L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 250 high
            LUT250H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 251 low
            LUT251L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 251 high
            LUT251H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 252 low
            LUT252L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 252 high
            LUT252H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 253 low
            LUT253L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 253 high
            LUT253H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 254 low
            LUT254L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 254 high
            LUT254H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 255 low
            LUT255L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 255 high
            LUT255H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 256 low
            LUT256L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 256 high
            LUT256H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 257 low
            LUT257L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 257 high
            LUT257H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 258 low
            LUT258L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 258 high
            LUT258H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 259 low
            LUT259L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 259 high
            LUT259H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 260 low
            LUT260L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 260 high
            LUT260H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 261 low
            LUT261L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 261 high
            LUT261H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 262 low
            LUT262L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 262 high
            LUT262H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 263 low
            LUT263L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 263 high
            LUT263H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 264 low
            LUT264L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 264 high
            LUT264H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 265 low
            LUT265L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 265 high
            LUT265H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 266 low
            LUT266L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 266 high
            LUT266H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 267 low
            LUT267L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 267 high
            LUT267H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 268 low
            LUT268L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 268 high
            LUT268H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 269 low
            LUT269L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 269 high
            LUT269H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 270 low
            LUT270L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 270 high
            LUT270H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 271 low
            LUT271L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 271 high
            LUT271H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 272 low
            LUT272L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 272 high
            LUT272H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 273 low
            LUT273L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 273 high
            LUT273H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 274 low
            LUT274L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 274 high
            LUT274H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 275 low
            LUT275L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 275 high
            LUT275H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 276 low
            LUT276L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 276 high
            LUT276H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 277 low
            LUT277L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 277 high
            LUT277H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 278 low
            LUT278L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 278 high
            LUT278H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 279 low
            LUT279L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 279 high
            LUT279H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 280 low
            LUT280L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 280 high
            LUT280H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 281 low
            LUT281L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 281 high
            LUT281H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 282 low
            LUT282L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 282 high
            LUT282H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 283 low
            LUT283L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 283 high
            LUT283H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 284 low
            LUT284L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 284 high
            LUT284H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 285 low
            LUT285L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 285 high
            LUT285H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 286 low
            LUT286L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 286 high
            LUT286H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 287 low
            LUT287L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 287 high
            LUT287H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 288 low
            LUT288L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 288 high
            LUT288H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 289 low
            LUT289L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 289 high
            LUT289H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 290 low
            LUT290L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 290 high
            LUT290H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 291 low
            LUT291L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 291 high
            LUT291H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 292 low
            LUT292L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 292 high
            LUT292H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 293 low
            LUT293L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 293 high
            LUT293H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 294 low
            LUT294L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 294 high
            LUT294H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 295 low
            LUT295L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 295 high
            LUT295H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 296 low
            LUT296L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 296 high
            LUT296H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 297 low
            LUT297L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 297 high
            LUT297H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 298 low
            LUT298L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 298 high
            LUT298H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 299 low
            LUT299L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 299 high
            LUT299H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 300 low
            LUT300L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 300 high
            LUT300H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 301 low
            LUT301L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 301 high
            LUT301H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 302 low
            LUT302L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 302 high
            LUT302H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 303 low
            LUT303L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 303 high
            LUT303H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 304 low
            LUT304L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 304 high
            LUT304H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 305 low
            LUT305L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 305 high
            LUT305H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 306 low
            LUT306L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 306 high
            LUT306H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 307 low
            LUT307L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 307 high
            LUT307H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 308 low
            LUT308L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 308 high
            LUT308H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 309 low
            LUT309L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 309 high
            LUT309H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 310 low
            LUT310L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 310 high
            LUT310H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 311 low
            LUT311L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 311 high
            LUT311H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 312 low
            LUT312L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 312 high
            LUT312H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 313 low
            LUT313L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 313 high
            LUT313H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 314 low
            LUT314L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 314 high
            LUT314H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 315 low
            LUT315L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 315 high
            LUT315H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 316 low
            LUT316L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 316 high
            LUT316H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 317 low
            LUT317L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 317 high
            LUT317H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 318 low
            LUT318L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 318 high
            LUT318H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 319 low
            LUT319L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 319 high
            LUT319H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 320 low
            LUT320L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 320 high
            LUT320H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 321 low
            LUT321L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 321 high
            LUT321H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 322 low
            LUT322L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 322 high
            LUT322H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 323 low
            LUT323L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 323 high
            LUT323H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 324 low
            LUT324L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 324 high
            LUT324H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 325 low
            LUT325L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 325 high
            LUT325H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 326 low
            LUT326L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 326 high
            LUT326H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 327 low
            LUT327L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 327 high
            LUT327H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 328 low
            LUT328L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 328 high
            LUT328H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 329 low
            LUT329L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 329 high
            LUT329H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 330 low
            LUT330L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 330 high
            LUT330H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 331 low
            LUT331L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 331 high
            LUT331H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 332 low
            LUT332L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 332 high
            LUT332H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 333 low
            LUT333L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 333 high
            LUT333H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 334 low
            LUT334L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 334 high
            LUT334H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 335 low
            LUT335L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 335 high
            LUT335H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 336 low
            LUT336L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 336 high
            LUT336H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 337 low
            LUT337L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 337 high
            LUT337H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 338 low
            LUT338L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 338 high
            LUT338H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 339 low
            LUT339L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 339 high
            LUT339H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 340 low
            LUT340L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 340 high
            LUT340H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 341 low
            LUT341L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 341 high
            LUT341H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 342 low
            LUT342L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 342 high
            LUT342H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 343 low
            LUT343L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 343 high
            LUT343H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 344 low
            LUT344L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 344 high
            LUT344H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 345 low
            LUT345L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 345 high
            LUT345H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 346 low
            LUT346L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 346 high
            LUT346H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 347 low
            LUT347L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 347 high
            LUT347H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 348 low
            LUT348L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 348 high
            LUT348H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 349 low
            LUT349L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 349 high
            LUT349H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 350 low
            LUT350L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 350 high
            LUT350H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 351 low
            LUT351L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 351 high
            LUT351H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 352 low
            LUT352L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 352 high
            LUT352H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 353 low
            LUT353L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 353 high
            LUT353H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 354 low
            LUT354L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 354 high
            LUT354H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 355 low
            LUT355L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 355 high
            LUT355H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 356 low
            LUT356L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 356 high
            LUT356H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 357 low
            LUT357L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 357 high
            LUT357H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 358 low
            LUT358L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 358 high
            LUT358H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 359 low
            LUT359L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 359 high
            LUT359H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 360 low
            LUT360L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 360 high
            LUT360H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 361 low
            LUT361L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 361 high
            LUT361H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 362 low
            LUT362L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 362 high
            LUT362H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 363 low
            LUT363L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 363 high
            LUT363H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 364 low
            LUT364L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 364 high
            LUT364H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 365 low
            LUT365L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 365 high
            LUT365H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 366 low
            LUT366L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 366 high
            LUT366H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 367 low
            LUT367L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 367 high
            LUT367H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 368 low
            LUT368L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 368 high
            LUT368H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 369 low
            LUT369L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 369 high
            LUT369H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 370 low
            LUT370L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 370 high
            LUT370H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 371 low
            LUT371L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 371 high
            LUT371H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 372 low
            LUT372L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 372 high
            LUT372H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 373 low
            LUT373L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 373 high
            LUT373H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 374 low
            LUT374L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 374 high
            LUT374H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 375 low
            LUT375L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 375 high
            LUT375H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 376 low
            LUT376L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 376 high
            LUT376H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 377 low
            LUT377L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 377 high
            LUT377H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 378 low
            LUT378L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 378 high
            LUT378H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 379 low
            LUT379L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 379 high
            LUT379H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 380 low
            LUT380L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 380 high
            LUT380H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 381 low
            LUT381L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 381 high
            LUT381H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 382 low
            LUT382L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 382 high
            LUT382H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 383 low
            LUT383L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 383 high
            LUT383H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 384 low
            LUT384L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 384 high
            LUT384H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 385 low
            LUT385L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 385 high
            LUT385H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 386 low
            LUT386L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 386 high
            LUT386H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 387 low
            LUT387L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 387 high
            LUT387H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 388 low
            LUT388L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 388 high
            LUT388H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 389 low
            LUT389L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 389 high
            LUT389H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 390 low
            LUT390L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 390 high
            LUT390H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 391 low
            LUT391L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 391 high
            LUT391H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 392 low
            LUT392L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 392 high
            LUT392H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 393 low
            LUT393L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 393 high
            LUT393H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 394 low
            LUT394L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 394 high
            LUT394H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 395 low
            LUT395L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 395 high
            LUT395H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 396 low
            LUT396L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 396 high
            LUT396H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 397 low
            LUT397L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 397 high
            LUT397H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 398 low
            LUT398L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 398 high
            LUT398H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 399 low
            LUT399L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 399 high
            LUT399H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 400 low
            LUT400L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 400 high
            LUT400H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 401 low
            LUT401L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 401 high
            LUT401H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 402 low
            LUT402L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 402 high
            LUT402H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 403 low
            LUT403L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 403 high
            LUT403H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 404 low
            LUT404L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 404 high
            LUT404H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 405 low
            LUT405L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 405 high
            LUT405H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 406 low
            LUT406L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 406 high
            LUT406H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 407 low
            LUT407L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 407 high
            LUT407H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 408 low
            LUT408L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 408 high
            LUT408H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 409 low
            LUT409L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 409 high
            LUT409H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 410 low
            LUT410L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 410 high
            LUT410H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 411 low
            LUT411L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 411 high
            LUT411H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 412 low
            LUT412L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 412 high
            LUT412H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 413 low
            LUT413L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 413 high
            LUT413H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 414 low
            LUT414L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 414 high
            LUT414H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 415 low
            LUT415L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 415 high
            LUT415H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 416 low
            LUT416L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 416 high
            LUT416H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 417 low
            LUT417L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 417 high
            LUT417H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 418 low
            LUT418L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 418 high
            LUT418H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 419 low
            LUT419L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 419 high
            LUT419H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 420 low
            LUT420L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 420 high
            LUT420H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 421 low
            LUT421L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 421 high
            LUT421H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 422 low
            LUT422L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 422 high
            LUT422H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 423 low
            LUT423L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 423 high
            LUT423H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 424 low
            LUT424L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 424 high
            LUT424H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 425 low
            LUT425L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 425 high
            LUT425H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 426 low
            LUT426L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 426 high
            LUT426H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 427 low
            LUT427L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 427 high
            LUT427H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 428 low
            LUT428L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 428 high
            LUT428H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 429 low
            LUT429L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 429 high
            LUT429H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 430 low
            LUT430L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 430 high
            LUT430H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 431 low
            LUT431L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 431 high
            LUT431H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 432 low
            LUT432L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 432 high
            LUT432H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 433 low
            LUT433L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 433 high
            LUT433H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 434 low
            LUT434L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 434 high
            LUT434H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 435 low
            LUT435L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 435 high
            LUT435H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 436 low
            LUT436L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 436 high
            LUT436H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 437 low
            LUT437L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 437 high
            LUT437H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 438 low
            LUT438L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 438 high
            LUT438H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 439 low
            LUT439L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 439 high
            LUT439H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 440 low
            LUT440L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 440 high
            LUT440H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 441 low
            LUT441L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 441 high
            LUT441H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 442 low
            LUT442L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 442 high
            LUT442H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 443 low
            LUT443L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 443 high
            LUT443H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 444 low
            LUT444L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 444 high
            LUT444H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 445 low
            LUT445L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 445 high
            LUT445H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 446 low
            LUT446L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 446 high
            LUT446H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 447 low
            LUT447L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 447 high
            LUT447H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 448 low
            LUT448L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 448 high
            LUT448H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 449 low
            LUT449L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 449 high
            LUT449H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 450 low
            LUT450L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 450 high
            LUT450H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 451 low
            LUT451L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 451 high
            LUT451H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 452 low
            LUT452L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 452 high
            LUT452H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 453 low
            LUT453L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 453 high
            LUT453H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 454 low
            LUT454L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 454 high
            LUT454H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 455 low
            LUT455L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 455 high
            LUT455H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 456 low
            LUT456L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 456 high
            LUT456H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 457 low
            LUT457L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 457 high
            LUT457H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 458 low
            LUT458L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 458 high
            LUT458H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 459 low
            LUT459L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 459 high
            LUT459H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 460 low
            LUT460L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 460 high
            LUT460H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 461 low
            LUT461L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 461 high
            LUT461H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 462 low
            LUT462L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 462 high
            LUT462H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 463 low
            LUT463L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 463 high
            LUT463H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 464 low
            LUT464L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 464 high
            LUT464H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 465 low
            LUT465L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 465 high
            LUT465H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 466 low
            LUT466L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 466 high
            LUT466H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 467 low
            LUT467L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 467 high
            LUT467H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 468 low
            LUT468L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 468 high
            LUT468H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 469 low
            LUT469L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 469 high
            LUT469H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 470 low
            LUT470L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 470 high
            LUT470H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 471 low
            LUT471L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 471 high
            LUT471H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 472 low
            LUT472L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 472 high
            LUT472H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 473 low
            LUT473L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 473 high
            LUT473H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 474 low
            LUT474L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 474 high
            LUT474H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 475 low
            LUT475L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 475 high
            LUT475H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 476 low
            LUT476L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 476 high
            LUT476H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 477 low
            LUT477L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 477 high
            LUT477H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 478 low
            LUT478L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 478 high
            LUT478H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 479 low
            LUT479L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 479 high
            LUT479H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 480 low
            LUT480L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 480 high
            LUT480H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 481 low
            LUT481L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 481 high
            LUT481H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 482 low
            LUT482L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 482 high
            LUT482H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 483 low
            LUT483L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 483 high
            LUT483H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 484 low
            LUT484L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 484 high
            LUT484H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 485 low
            LUT485L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 485 high
            LUT485H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 486 low
            LUT486L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 486 high
            LUT486H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 487 low
            LUT487L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 487 high
            LUT487H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 488 low
            LUT488L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 488 high
            LUT488H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 489 low
            LUT489L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 489 high
            LUT489H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 490 low
            LUT490L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 490 high
            LUT490H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 491 low
            LUT491L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 491 high
            LUT491H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 492 low
            LUT492L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 492 high
            LUT492H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 493 low
            LUT493L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 493 high
            LUT493H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 494 low
            LUT494L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 494 high
            LUT494H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 495 low
            LUT495L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 495 high
            LUT495H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 496 low
            LUT496L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 496 high
            LUT496H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 497 low
            LUT497L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 497 high
            LUT497H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 498 low
            LUT498L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 498 high
            LUT498H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 499 low
            LUT499L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 499 high
            LUT499H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 500 low
            LUT500L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 500 high
            LUT500H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 501 low
            LUT501L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 501 high
            LUT501H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 502 low
            LUT502L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 502 high
            LUT502H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 503 low
            LUT503L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 503 high
            LUT503H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 504 low
            LUT504L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 504 high
            LUT504H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 505 low
            LUT505L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 505 high
            LUT505H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 506 low
            LUT506L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 506 high
            LUT506H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 507 low
            LUT507L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 507 high
            LUT507H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 508 low
            LUT508L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 508 high
            LUT508H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 509 low
            LUT509L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 509 high
            LUT509H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 510 low
            LUT510L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 510 high
            LUT510H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 511 low
            LUT511L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 511 high
            LUT511H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 512 low
            LUT512L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 512 high
            LUT512H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 513 low
            LUT513L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 513 high
            LUT513H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 514 low
            LUT514L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 514 high
            LUT514H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 515 low
            LUT515L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 515 high
            LUT515H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 516 low
            LUT516L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 516 high
            LUT516H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 517 low
            LUT517L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 517 high
            LUT517H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 518 low
            LUT518L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 518 high
            LUT518H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 519 low
            LUT519L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 519 high
            LUT519H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 520 low
            LUT520L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 520 high
            LUT520H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 521 low
            LUT521L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 521 high
            LUT521H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 522 low
            LUT522L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 522 high
            LUT522H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 523 low
            LUT523L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 523 high
            LUT523H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 524 low
            LUT524L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 524 high
            LUT524H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 525 low
            LUT525L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 525 high
            LUT525H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 526 low
            LUT526L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 526 high
            LUT526H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 527 low
            LUT527L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 527 high
            LUT527H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 528 low
            LUT528L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 528 high
            LUT528H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 529 low
            LUT529L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 529 high
            LUT529H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 530 low
            LUT530L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 530 high
            LUT530H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 531 low
            LUT531L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 531 high
            LUT531H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 532 low
            LUT532L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 532 high
            LUT532H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 533 low
            LUT533L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 533 high
            LUT533H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 534 low
            LUT534L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 534 high
            LUT534H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 535 low
            LUT535L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 535 high
            LUT535H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 536 low
            LUT536L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 536 high
            LUT536H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 537 low
            LUT537L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 537 high
            LUT537H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 538 low
            LUT538L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 538 high
            LUT538H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 539 low
            LUT539L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 539 high
            LUT539H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 540 low
            LUT540L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 540 high
            LUT540H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 541 low
            LUT541L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 541 high
            LUT541H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 542 low
            LUT542L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 542 high
            LUT542H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 543 low
            LUT543L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 543 high
            LUT543H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 544 low
            LUT544L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 544 high
            LUT544H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 545 low
            LUT545L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 545 high
            LUT545H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 546 low
            LUT546L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 546 high
            LUT546H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 547 low
            LUT547L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 547 high
            LUT547H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 548 low
            LUT548L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 548 high
            LUT548H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 549 low
            LUT549L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 549 high
            LUT549H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 550 low
            LUT550L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 550 high
            LUT550H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 551 low
            LUT551L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 551 high
            LUT551H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 552 low
            LUT552L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 552 high
            LUT552H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 553 low
            LUT553L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 553 high
            LUT553H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 554 low
            LUT554L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 554 high
            LUT554H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 555 low
            LUT555L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 555 high
            LUT555H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 556 low
            LUT556L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 556 high
            LUT556H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 557 low
            LUT557L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 557 high
            LUT557H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 558 low
            LUT558L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 558 high
            LUT558H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 559 low
            LUT559L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 559 high
            LUT559H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 560 low
            LUT560L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 560 high
            LUT560H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 561 low
            LUT561L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 561 high
            LUT561H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 562 low
            LUT562L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 562 high
            LUT562H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 563 low
            LUT563L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 563 high
            LUT563H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 564 low
            LUT564L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 564 high
            LUT564H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 565 low
            LUT565L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 565 high
            LUT565H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 566 low
            LUT566L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 566 high
            LUT566H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 567 low
            LUT567L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 567 high
            LUT567H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 568 low
            LUT568L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 568 high
            LUT568H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 569 low
            LUT569L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 569 high
            LUT569H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 570 low
            LUT570L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 570 high
            LUT570H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 571 low
            LUT571L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 571 high
            LUT571H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 572 low
            LUT572L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 572 high
            LUT572H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 573 low
            LUT573L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 573 high
            LUT573H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 574 low
            LUT574L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 574 high
            LUT574H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 575 low
            LUT575L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 575 high
            LUT575H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 576 low
            LUT576L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 576 high
            LUT576H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 577 low
            LUT577L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 577 high
            LUT577H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 578 low
            LUT578L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 578 high
            LUT578H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 579 low
            LUT579L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 579 high
            LUT579H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 580 low
            LUT580L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 580 high
            LUT580H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 581 low
            LUT581L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 581 high
            LUT581H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 582 low
            LUT582L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 582 high
            LUT582H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 583 low
            LUT583L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 583 high
            LUT583H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 584 low
            LUT584L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 584 high
            LUT584H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 585 low
            LUT585L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 585 high
            LUT585H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 586 low
            LUT586L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 586 high
            LUT586H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 587 low
            LUT587L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 587 high
            LUT587H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 588 low
            LUT588L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 588 high
            LUT588H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 589 low
            LUT589L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 589 high
            LUT589H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 590 low
            LUT590L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 590 high
            LUT590H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 591 low
            LUT591L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 591 high
            LUT591H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 592 low
            LUT592L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 592 high
            LUT592H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 593 low
            LUT593L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 593 high
            LUT593H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 594 low
            LUT594L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 594 high
            LUT594H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 595 low
            LUT595L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 595 high
            LUT595H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 596 low
            LUT596L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 596 high
            LUT596H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 597 low
            LUT597L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 597 high
            LUT597H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 598 low
            LUT598L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 598 high
            LUT598H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 599 low
            LUT599L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 599 high
            LUT599H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 600 low
            LUT600L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 600 high
            LUT600H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 601 low
            LUT601L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 601 high
            LUT601H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 602 low
            LUT602L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 602 high
            LUT602H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 603 low
            LUT603L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 603 high
            LUT603H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 604 low
            LUT604L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 604 high
            LUT604H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 605 low
            LUT605L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 605 high
            LUT605H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 606 low
            LUT606L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 606 high
            LUT606H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 607 low
            LUT607L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 607 high
            LUT607H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 608 low
            LUT608L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 608 high
            LUT608H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 609 low
            LUT609L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 609 high
            LUT609H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 610 low
            LUT610L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 610 high
            LUT610H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 611 low
            LUT611L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 611 high
            LUT611H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 612 low
            LUT612L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 612 high
            LUT612H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 613 low
            LUT613L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 613 high
            LUT613H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 614 low
            LUT614L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 614 high
            LUT614H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 615 low
            LUT615L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 615 high
            LUT615H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 616 low
            LUT616L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 616 high
            LUT616H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 617 low
            LUT617L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 617 high
            LUT617H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 618 low
            LUT618L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 618 high
            LUT618H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 619 low
            LUT619L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 619 high
            LUT619H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 620 low
            LUT620L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 620 high
            LUT620H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 621 low
            LUT621L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 621 high
            LUT621H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 622 low
            LUT622L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 622 high
            LUT622H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 623 low
            LUT623L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 623 high
            LUT623H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 624 low
            LUT624L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 624 high
            LUT624H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 625 low
            LUT625L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 625 high
            LUT625H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 626 low
            LUT626L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 626 high
            LUT626H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 627 low
            LUT627L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 627 high
            LUT627H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 628 low
            LUT628L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 628 high
            LUT628H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 629 low
            LUT629L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 629 high
            LUT629H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 630 low
            LUT630L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 630 high
            LUT630H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 631 low
            LUT631L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 631 high
            LUT631H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 632 low
            LUT632L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 632 high
            LUT632H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 633 low
            LUT633L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 633 high
            LUT633H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 634 low
            LUT634L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 634 high
            LUT634H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 635 low
            LUT635L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 635 high
            LUT635H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 636 low
            LUT636L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 636 high
            LUT636H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 637 low
            LUT637L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 637 high
            LUT637H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 638 low
            LUT638L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 638 high
            LUT638H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 639 low
            LUT639L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 639 high
            LUT639H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 640 low
            LUT640L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 640 high
            LUT640H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 641 low
            LUT641L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 641 high
            LUT641H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 642 low
            LUT642L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 642 high
            LUT642H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 643 low
            LUT643L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 643 high
            LUT643H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 644 low
            LUT644L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 644 high
            LUT644H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 645 low
            LUT645L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 645 high
            LUT645H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 646 low
            LUT646L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 646 high
            LUT646H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 647 low
            LUT647L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 647 high
            LUT647H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 648 low
            LUT648L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 648 high
            LUT648H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 649 low
            LUT649L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 649 high
            LUT649H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 650 low
            LUT650L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 650 high
            LUT650H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 651 low
            LUT651L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 651 high
            LUT651H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 652 low
            LUT652L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 652 high
            LUT652H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 653 low
            LUT653L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 653 high
            LUT653H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 654 low
            LUT654L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 654 high
            LUT654H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 655 low
            LUT655L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 655 high
            LUT655H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 656 low
            LUT656L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 656 high
            LUT656H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 657 low
            LUT657L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 657 high
            LUT657H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 658 low
            LUT658L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 658 high
            LUT658H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 659 low
            LUT659L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 659 high
            LUT659H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 660 low
            LUT660L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 660 high
            LUT660H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 661 low
            LUT661L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 661 high
            LUT661H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 662 low
            LUT662L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 662 high
            LUT662H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 663 low
            LUT663L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 663 high
            LUT663H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 664 low
            LUT664L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 664 high
            LUT664H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 665 low
            LUT665L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 665 high
            LUT665H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 666 low
            LUT666L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 666 high
            LUT666H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 667 low
            LUT667L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 667 high
            LUT667H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 668 low
            LUT668L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 668 high
            LUT668H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 669 low
            LUT669L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 669 high
            LUT669H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 670 low
            LUT670L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 670 high
            LUT670H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 671 low
            LUT671L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 671 high
            LUT671H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 672 low
            LUT672L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 672 high
            LUT672H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 673 low
            LUT673L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 673 high
            LUT673H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 674 low
            LUT674L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 674 high
            LUT674H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 675 low
            LUT675L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 675 high
            LUT675H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 676 low
            LUT676L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 676 high
            LUT676H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 677 low
            LUT677L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 677 high
            LUT677H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 678 low
            LUT678L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 678 high
            LUT678H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 679 low
            LUT679L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 679 high
            LUT679H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 680 low
            LUT680L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 680 high
            LUT680H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 681 low
            LUT681L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 681 high
            LUT681H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 682 low
            LUT682L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 682 high
            LUT682H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 683 low
            LUT683L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 683 high
            LUT683H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 684 low
            LUT684L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 684 high
            LUT684H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 685 low
            LUT685L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 685 high
            LUT685H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 686 low
            LUT686L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 686 high
            LUT686H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 687 low
            LUT687L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 687 high
            LUT687H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 688 low
            LUT688L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 688 high
            LUT688H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 689 low
            LUT689L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 689 high
            LUT689H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 690 low
            LUT690L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 690 high
            LUT690H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 691 low
            LUT691L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 691 high
            LUT691H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 692 low
            LUT692L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 692 high
            LUT692H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 693 low
            LUT693L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 693 high
            LUT693H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 694 low
            LUT694L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 694 high
            LUT694H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 695 low
            LUT695L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 695 high
            LUT695H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 696 low
            LUT696L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 696 high
            LUT696H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 697 low
            LUT697L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 697 high
            LUT697H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 698 low
            LUT698L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 698 high
            LUT698H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 699 low
            LUT699L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 699 high
            LUT699H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 700 low
            LUT700L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 700 high
            LUT700H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 701 low
            LUT701L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 701 high
            LUT701H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 702 low
            LUT702L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 702 high
            LUT702H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 703 low
            LUT703L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 703 high
            LUT703H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 704 low
            LUT704L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 704 high
            LUT704H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 705 low
            LUT705L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 705 high
            LUT705H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 706 low
            LUT706L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 706 high
            LUT706H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 707 low
            LUT707L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 707 high
            LUT707H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 708 low
            LUT708L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 708 high
            LUT708H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 709 low
            LUT709L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 709 high
            LUT709H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 710 low
            LUT710L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 710 high
            LUT710H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 711 low
            LUT711L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 711 high
            LUT711H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 712 low
            LUT712L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 712 high
            LUT712H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 713 low
            LUT713L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 713 high
            LUT713H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 714 low
            LUT714L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 714 high
            LUT714H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 715 low
            LUT715L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 715 high
            LUT715H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 716 low
            LUT716L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 716 high
            LUT716H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 717 low
            LUT717L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 717 high
            LUT717H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 718 low
            LUT718L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 718 high
            LUT718H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 719 low
            LUT719L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 719 high
            LUT719H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 720 low
            LUT720L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 720 high
            LUT720H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 721 low
            LUT721L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 721 high
            LUT721H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 722 low
            LUT722L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 722 high
            LUT722H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 723 low
            LUT723L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 723 high
            LUT723H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 724 low
            LUT724L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 724 high
            LUT724H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 725 low
            LUT725L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 725 high
            LUT725H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 726 low
            LUT726L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 726 high
            LUT726H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 727 low
            LUT727L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 727 high
            LUT727H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 728 low
            LUT728L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 728 high
            LUT728H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 729 low
            LUT729L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 729 high
            LUT729H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 730 low
            LUT730L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 730 high
            LUT730H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 731 low
            LUT731L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 731 high
            LUT731H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 732 low
            LUT732L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 732 high
            LUT732H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 733 low
            LUT733L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 733 high
            LUT733H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 734 low
            LUT734L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 734 high
            LUT734H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 735 low
            LUT735L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 735 high
            LUT735H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 736 low
            LUT736L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 736 high
            LUT736H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 737 low
            LUT737L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 737 high
            LUT737H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 738 low
            LUT738L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 738 high
            LUT738H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 739 low
            LUT739L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 739 high
            LUT739H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 740 low
            LUT740L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 740 high
            LUT740H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 741 low
            LUT741L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 741 high
            LUT741H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 742 low
            LUT742L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 742 high
            LUT742H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 743 low
            LUT743L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 743 high
            LUT743H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 744 low
            LUT744L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 744 high
            LUT744H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 745 low
            LUT745L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 745 high
            LUT745H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 746 low
            LUT746L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 746 high
            LUT746H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 747 low
            LUT747L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 747 high
            LUT747H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 748 low
            LUT748L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 748 high
            LUT748H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 749 low
            LUT749L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 749 high
            LUT749H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 750 low
            LUT750L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 750 high
            LUT750H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 751 low
            LUT751L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 751 high
            LUT751H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 752 low
            LUT752L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 752 high
            LUT752H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 753 low
            LUT753L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 753 high
            LUT753H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 754 low
            LUT754L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 754 high
            LUT754H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 755 low
            LUT755L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 755 high
            LUT755H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 756 low
            LUT756L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 756 high
            LUT756H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 757 low
            LUT757L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 757 high
            LUT757H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 758 low
            LUT758L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 758 high
            LUT758H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 759 low
            LUT759L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 759 high
            LUT759H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 760 low
            LUT760L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 760 high
            LUT760H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 761 low
            LUT761L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 761 high
            LUT761H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 762 low
            LUT762L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 762 high
            LUT762H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 763 low
            LUT763L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 763 high
            LUT763H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 764 low
            LUT764L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 764 high
            LUT764H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 765 low
            LUT765L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 765 high
            LUT765H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 766 low
            LUT766L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 766 high
            LUT766H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 767 low
            LUT767L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 767 high
            LUT767H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 768 low
            LUT768L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 768 high
            LUT768H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 769 low
            LUT769L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 769 high
            LUT769H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 770 low
            LUT770L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 770 high
            LUT770H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 771 low
            LUT771L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 771 high
            LUT771H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 772 low
            LUT772L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 772 high
            LUT772H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 773 low
            LUT773L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 773 high
            LUT773H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 774 low
            LUT774L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 774 high
            LUT774H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 775 low
            LUT775L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 775 high
            LUT775H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 776 low
            LUT776L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 776 high
            LUT776H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 777 low
            LUT777L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 777 high
            LUT777H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 778 low
            LUT778L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 778 high
            LUT778H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 779 low
            LUT779L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 779 high
            LUT779H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 780 low
            LUT780L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 780 high
            LUT780H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 781 low
            LUT781L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 781 high
            LUT781H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 782 low
            LUT782L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 782 high
            LUT782H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 783 low
            LUT783L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 783 high
            LUT783H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 784 low
            LUT784L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 784 high
            LUT784H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 785 low
            LUT785L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 785 high
            LUT785H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 786 low
            LUT786L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 786 high
            LUT786H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 787 low
            LUT787L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 787 high
            LUT787H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 788 low
            LUT788L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 788 high
            LUT788H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 789 low
            LUT789L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 789 high
            LUT789H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 790 low
            LUT790L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 790 high
            LUT790H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 791 low
            LUT791L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 791 high
            LUT791H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 792 low
            LUT792L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 792 high
            LUT792H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 793 low
            LUT793L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 793 high
            LUT793H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 794 low
            LUT794L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 794 high
            LUT794H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 795 low
            LUT795L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 795 high
            LUT795H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 796 low
            LUT796L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 796 high
            LUT796H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 797 low
            LUT797L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 797 high
            LUT797H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 798 low
            LUT798L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 798 high
            LUT798H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 799 low
            LUT799L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 799 high
            LUT799H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 800 low
            LUT800L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 800 high
            LUT800H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 801 low
            LUT801L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 801 high
            LUT801H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 802 low
            LUT802L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 802 high
            LUT802H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 803 low
            LUT803L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 803 high
            LUT803H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 804 low
            LUT804L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 804 high
            LUT804H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 805 low
            LUT805L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 805 high
            LUT805H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 806 low
            LUT806L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 806 high
            LUT806H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 807 low
            LUT807L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 807 high
            LUT807H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 808 low
            LUT808L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 808 high
            LUT808H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 809 low
            LUT809L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 809 high
            LUT809H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 810 low
            LUT810L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 810 high
            LUT810H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 811 low
            LUT811L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 811 high
            LUT811H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 812 low
            LUT812L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 812 high
            LUT812H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 813 low
            LUT813L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 813 high
            LUT813H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 814 low
            LUT814L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 814 high
            LUT814H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 815 low
            LUT815L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 815 high
            LUT815H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 816 low
            LUT816L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 816 high
            LUT816H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 817 low
            LUT817L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 817 high
            LUT817H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 818 low
            LUT818L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 818 high
            LUT818H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 819 low
            LUT819L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 819 high
            LUT819H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 820 low
            LUT820L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 820 high
            LUT820H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 821 low
            LUT821L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 821 high
            LUT821H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 822 low
            LUT822L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 822 high
            LUT822H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 823 low
            LUT823L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 823 high
            LUT823H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 824 low
            LUT824L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 824 high
            LUT824H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 825 low
            LUT825L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 825 high
            LUT825H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 826 low
            LUT826L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 826 high
            LUT826H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 827 low
            LUT827L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 827 high
            LUT827H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 828 low
            LUT828L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 828 high
            LUT828H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 829 low
            LUT829L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 829 high
            LUT829H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 830 low
            LUT830L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 830 high
            LUT830H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 831 low
            LUT831L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 831 high
            LUT831H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 832 low
            LUT832L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 832 high
            LUT832H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 833 low
            LUT833L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 833 high
            LUT833H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 834 low
            LUT834L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 834 high
            LUT834H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 835 low
            LUT835L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 835 high
            LUT835H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 836 low
            LUT836L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 836 high
            LUT836H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 837 low
            LUT837L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 837 high
            LUT837H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 838 low
            LUT838L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 838 high
            LUT838H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 839 low
            LUT839L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 839 high
            LUT839H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 840 low
            LUT840L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 840 high
            LUT840H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 841 low
            LUT841L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 841 high
            LUT841H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 842 low
            LUT842L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 842 high
            LUT842H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 843 low
            LUT843L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 843 high
            LUT843H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 844 low
            LUT844L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 844 high
            LUT844H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 845 low
            LUT845L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 845 high
            LUT845H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 846 low
            LUT846L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 846 high
            LUT846H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 847 low
            LUT847L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 847 high
            LUT847H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 848 low
            LUT848L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 848 high
            LUT848H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 849 low
            LUT849L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 849 high
            LUT849H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 850 low
            LUT850L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 850 high
            LUT850H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 851 low
            LUT851L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 851 high
            LUT851H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 852 low
            LUT852L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 852 high
            LUT852H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 853 low
            LUT853L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 853 high
            LUT853H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 854 low
            LUT854L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 854 high
            LUT854H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 855 low
            LUT855L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 855 high
            LUT855H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 856 low
            LUT856L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 856 high
            LUT856H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 857 low
            LUT857L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 857 high
            LUT857H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 858 low
            LUT858L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 858 high
            LUT858H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 859 low
            LUT859L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 859 high
            LUT859H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 860 low
            LUT860L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 860 high
            LUT860H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 861 low
            LUT861L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 861 high
            LUT861H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 862 low
            LUT862L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 862 high
            LUT862H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 863 low
            LUT863L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 863 high
            LUT863H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 864 low
            LUT864L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 864 high
            LUT864H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 865 low
            LUT865L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 865 high
            LUT865H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 866 low
            LUT866L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 866 high
            LUT866H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 867 low
            LUT867L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 867 high
            LUT867H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 868 low
            LUT868L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 868 high
            LUT868H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 869 low
            LUT869L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 869 high
            LUT869H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 870 low
            LUT870L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 870 high
            LUT870H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 871 low
            LUT871L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 871 high
            LUT871H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 872 low
            LUT872L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 872 high
            LUT872H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 873 low
            LUT873L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 873 high
            LUT873H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 874 low
            LUT874L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 874 high
            LUT874H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 875 low
            LUT875L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 875 high
            LUT875H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 876 low
            LUT876L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 876 high
            LUT876H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 877 low
            LUT877L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 877 high
            LUT877H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 878 low
            LUT878L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 878 high
            LUT878H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 879 low
            LUT879L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 879 high
            LUT879H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 880 low
            LUT880L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 880 high
            LUT880H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 881 low
            LUT881L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 881 high
            LUT881H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 882 low
            LUT882L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 882 high
            LUT882H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 883 low
            LUT883L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 883 high
            LUT883H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 884 low
            LUT884L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 884 high
            LUT884H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 885 low
            LUT885L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 885 high
            LUT885H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 886 low
            LUT886L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 886 high
            LUT886H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 887 low
            LUT887L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 887 high
            LUT887H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 888 low
            LUT888L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 888 high
            LUT888H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 889 low
            LUT889L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 889 high
            LUT889H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 890 low
            LUT890L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 890 high
            LUT890H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 891 low
            LUT891L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 891 high
            LUT891H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 892 low
            LUT892L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 892 high
            LUT892H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 893 low
            LUT893L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 893 high
            LUT893H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 894 low
            LUT894L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 894 high
            LUT894H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 895 low
            LUT895L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 895 high
            LUT895H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 896 low
            LUT896L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 896 high
            LUT896H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 897 low
            LUT897L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 897 high
            LUT897H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 898 low
            LUT898L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 898 high
            LUT898H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 899 low
            LUT899L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 899 high
            LUT899H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 900 low
            LUT900L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 900 high
            LUT900H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 901 low
            LUT901L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 901 high
            LUT901H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 902 low
            LUT902L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 902 high
            LUT902H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 903 low
            LUT903L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 903 high
            LUT903H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 904 low
            LUT904L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 904 high
            LUT904H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 905 low
            LUT905L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 905 high
            LUT905H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 906 low
            LUT906L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 906 high
            LUT906H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 907 low
            LUT907L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 907 high
            LUT907H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 908 low
            LUT908L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 908 high
            LUT908H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 909 low
            LUT909L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 909 high
            LUT909H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 910 low
            LUT910L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 910 high
            LUT910H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 911 low
            LUT911L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 911 high
            LUT911H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 912 low
            LUT912L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 912 high
            LUT912H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 913 low
            LUT913L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 913 high
            LUT913H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 914 low
            LUT914L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 914 high
            LUT914H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 915 low
            LUT915L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 915 high
            LUT915H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 916 low
            LUT916L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 916 high
            LUT916H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 917 low
            LUT917L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 917 high
            LUT917H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 918 low
            LUT918L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 918 high
            LUT918H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 919 low
            LUT919L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 919 high
            LUT919H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 920 low
            LUT920L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 920 high
            LUT920H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 921 low
            LUT921L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 921 high
            LUT921H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 922 low
            LUT922L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 922 high
            LUT922H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 923 low
            LUT923L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 923 high
            LUT923H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 924 low
            LUT924L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 924 high
            LUT924H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 925 low
            LUT925L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 925 high
            LUT925H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 926 low
            LUT926L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 926 high
            LUT926H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 927 low
            LUT927L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 927 high
            LUT927H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 928 low
            LUT928L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 928 high
            LUT928H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 929 low
            LUT929L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 929 high
            LUT929H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 930 low
            LUT930L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 930 high
            LUT930H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 931 low
            LUT931L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 931 high
            LUT931H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 932 low
            LUT932L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 932 high
            LUT932H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 933 low
            LUT933L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 933 high
            LUT933H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 934 low
            LUT934L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 934 high
            LUT934H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 935 low
            LUT935L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 935 high
            LUT935H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 936 low
            LUT936L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 936 high
            LUT936H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 937 low
            LUT937L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 937 high
            LUT937H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 938 low
            LUT938L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 938 high
            LUT938H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 939 low
            LUT939L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 939 high
            LUT939H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 940 low
            LUT940L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 940 high
            LUT940H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 941 low
            LUT941L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 941 high
            LUT941H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 942 low
            LUT942L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 942 high
            LUT942H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 943 low
            LUT943L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 943 high
            LUT943H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 944 low
            LUT944L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 944 high
            LUT944H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 945 low
            LUT945L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 945 high
            LUT945H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 946 low
            LUT946L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 946 high
            LUT946H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 947 low
            LUT947L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 947 high
            LUT947H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 948 low
            LUT948L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 948 high
            LUT948H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 949 low
            LUT949L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 949 high
            LUT949H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 950 low
            LUT950L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 950 high
            LUT950H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 951 low
            LUT951L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 951 high
            LUT951H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 952 low
            LUT952L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 952 high
            LUT952H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 953 low
            LUT953L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 953 high
            LUT953H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 954 low
            LUT954L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 954 high
            LUT954H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 955 low
            LUT955L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 955 high
            LUT955H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 956 low
            LUT956L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 956 high
            LUT956H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 957 low
            LUT957L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 957 high
            LUT957H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 958 low
            LUT958L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 958 high
            LUT958H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 959 low
            LUT959L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 959 high
            LUT959H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 960 low
            LUT960L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 960 high
            LUT960H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 961 low
            LUT961L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 961 high
            LUT961H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 962 low
            LUT962L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 962 high
            LUT962H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 963 low
            LUT963L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 963 high
            LUT963H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 964 low
            LUT964L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 964 high
            LUT964H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 965 low
            LUT965L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 965 high
            LUT965H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 966 low
            LUT966L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 966 high
            LUT966H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 967 low
            LUT967L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 967 high
            LUT967H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 968 low
            LUT968L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 968 high
            LUT968H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 969 low
            LUT969L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 969 high
            LUT969H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 970 low
            LUT970L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 970 high
            LUT970H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 971 low
            LUT971L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 971 high
            LUT971H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 972 low
            LUT972L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 972 high
            LUT972H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 973 low
            LUT973L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 973 high
            LUT973H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 974 low
            LUT974L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 974 high
            LUT974H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 975 low
            LUT975L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 975 high
            LUT975H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 976 low
            LUT976L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 976 high
            LUT976H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 977 low
            LUT977L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 977 high
            LUT977H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 978 low
            LUT978L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 978 high
            LUT978H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 979 low
            LUT979L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 979 high
            LUT979H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 980 low
            LUT980L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 980 high
            LUT980H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 981 low
            LUT981L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 981 high
            LUT981H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 982 low
            LUT982L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 982 high
            LUT982H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 983 low
            LUT983L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 983 high
            LUT983H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 984 low
            LUT984L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 984 high
            LUT984H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 985 low
            LUT985L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 985 high
            LUT985H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 986 low
            LUT986L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 986 high
            LUT986H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 987 low
            LUT987L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 987 high
            LUT987H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 988 low
            LUT988L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 988 high
            LUT988H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 989 low
            LUT989L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 989 high
            LUT989H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 990 low
            LUT990L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 990 high
            LUT990H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 991 low
            LUT991L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 991 high
            LUT991H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 992 low
            LUT992L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 992 high
            LUT992H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 993 low
            LUT993L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 993 high
            LUT993H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 994 low
            LUT994L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 994 high
            LUT994H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 995 low
            LUT995L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 995 high
            LUT995H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 996 low
            LUT996L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 996 high
            LUT996H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 997 low
            LUT997L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 997 high
            LUT997H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 998 low
            LUT998L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 998 high
            LUT998H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 999 low
            LUT999L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 999 high
            LUT999H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1000 low
            LUT1000L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1000 high
            LUT1000H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1001 low
            LUT1001L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1001 high
            LUT1001H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1002 low
            LUT1002L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1002 high
            LUT1002H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1003 low
            LUT1003L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1003 high
            LUT1003H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1004 low
            LUT1004L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1004 high
            LUT1004H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1005 low
            LUT1005L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1005 high
            LUT1005H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1006 low
            LUT1006L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1006 high
            LUT1006H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1007 low
            LUT1007L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1007 high
            LUT1007H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1008 low
            LUT1008L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1008 high
            LUT1008H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1009 low
            LUT1009L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1009 high
            LUT1009H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1010 low
            LUT1010L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1010 high
            LUT1010H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1011 low
            LUT1011L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1011 high
            LUT1011H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1012 low
            LUT1012L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1012 high
            LUT1012H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1013 low
            LUT1013L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1013 high
            LUT1013H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1014 low
            LUT1014L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1014 high
            LUT1014H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1015 low
            LUT1015L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1015 high
            LUT1015H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1016 low
            LUT1016L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1016 high
            LUT1016H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1017 low
            LUT1017L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1017 high
            LUT1017H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1018 low
            LUT1018L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1018 high
            LUT1018H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1019 low
            LUT1019L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1019 high
            LUT1019H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1020 low
            LUT1020L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1020 high
            LUT1020H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1021 low
            LUT1021L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1021 high
            LUT1021H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1022 low
            LUT1022L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1022 high
            LUT1022H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
            ///  Graphic MMU LUT entry 1023 low
            LUT1023L: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  First Valid Block
                FVB: u8,
                ///  Last Valid Block
                LVB: u8,
                padding: u8,
            }),
            ///  Graphic MMU LUT entry 1023 high
            LUT1023H: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Line offset
                LO: u18,
                padding: u10,
            }),
        };

        ///  DSI Host
        pub const DSI = extern struct {
            ///  DSI Host Version Register
            DSI_VR: mmio.Mmio(packed struct(u32) {
                ///  Version of the DSI Host
                VERSION: u32,
            }),
            ///  DSI Host Control Register
            DSI_CR: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                padding: u31,
            }),
            ///  DSI HOST Clock Control Register
            DSI_CCR: mmio.Mmio(packed struct(u32) {
                ///  TX Escape Clock Division
                TXECKDIV: u8,
                ///  Timeout Clock Division
                TOCKDIV: u8,
                padding: u16,
            }),
            ///  DSI Host LTDC VCID Register
            DSI_LVCIDR: mmio.Mmio(packed struct(u32) {
                ///  Virtual Channel ID
                VCID: u2,
                padding: u30,
            }),
            ///  DSI Host LTDC Color Coding Register
            DSI_LCOLCR: mmio.Mmio(packed struct(u32) {
                ///  Color Coding
                COLC: u4,
                reserved8: u4,
                ///  Loosely Packet Enable
                LPE: u1,
                padding: u23,
            }),
            ///  DSI Host LTDC Polarity Configuration Register
            DSI_LPCR: mmio.Mmio(packed struct(u32) {
                ///  Data Enable Polarity
                DEP: u1,
                ///  VSYNC Polarity
                VSP: u1,
                ///  HSYNC Polarity
                HSP: u1,
                padding: u29,
            }),
            ///  DSI Host Low-Power mode Configuration Register
            DSI_LPMCR: mmio.Mmio(packed struct(u32) {
                ///  VACT Largest Packet Size
                VLPSIZE: u8,
                reserved16: u8,
                ///  Largest Packet Size
                LPSIZE: u8,
                padding: u8,
            }),
            ///  DSI Host Protocol Configuration Register
            DSI_PCR: mmio.Mmio(packed struct(u32) {
                ///  EoTp Transmission Enable
                ETTXE: u1,
                ///  EoTp Reception Enable
                ETRXE: u1,
                ///  Bus Turn Around Enable
                BTAE: u1,
                ///  ECC Reception Enable
                ECCRXE: u1,
                ///  CRC Reception Enable
                CRCRXE: u1,
                padding: u27,
            }),
            ///  DSI Host Generic VCID Register
            DSI_GVCIDR: mmio.Mmio(packed struct(u32) {
                ///  Virtual Channel ID
                VCID: u2,
                padding: u30,
            }),
            ///  DSI Host mode Configuration Register
            DSI_MCR: mmio.Mmio(packed struct(u32) {
                ///  Command mode
                CMDM: u1,
                padding: u31,
            }),
            ///  DSI Host Video mode Configuration Register
            DSI_VMCR: mmio.Mmio(packed struct(u32) {
                ///  Video mode Type
                VMT: u2,
                reserved8: u6,
                ///  Low-Power Vertical Sync Active Enable
                LPVSAE: u1,
                ///  Low-power Vertical Back-Porch Enable
                LPVBPE: u1,
                ///  Low-power Vertical Front-porch Enable
                LPVFPE: u1,
                ///  Low-Power Vertical Active Enable
                LPVAE: u1,
                ///  Low-Power Horizontal Back-Porch Enable
                LPHBPE: u1,
                ///  Low-Power Horizontal Front-Porch Enable
                LPHFPE: u1,
                ///  Frame Bus-Turn-Around Acknowledge Enable
                FBTAAE: u1,
                ///  Low-Power Command Enable
                LPCE: u1,
                ///  Pattern Generator Enable
                PGE: u1,
                reserved20: u3,
                ///  Pattern Generator mode
                PGM: u1,
                reserved24: u3,
                ///  Pattern Generator Orientation
                PGO: u1,
                padding: u7,
            }),
            ///  DSI Host Video Packet Configuration Register
            DSI_VPCR: mmio.Mmio(packed struct(u32) {
                ///  Video Packet Size
                VPSIZE: u14,
                padding: u18,
            }),
            ///  DSI Host Video Chunks Configuration Register
            DSI_VCCR: mmio.Mmio(packed struct(u32) {
                ///  Number of Chunks
                NUMC: u13,
                padding: u19,
            }),
            ///  DSI Host Video Null Packet Configuration Register
            DSI_VNPCR: mmio.Mmio(packed struct(u32) {
                ///  Null Packet Size
                NPSIZE: u13,
                padding: u19,
            }),
            ///  DSI Host Video HSA Configuration Register
            DSI_VHSACR: mmio.Mmio(packed struct(u32) {
                ///  Horizontal Synchronism Active duration
                HSA: u12,
                padding: u20,
            }),
            ///  DSI Host Video HBP Configuration Register
            DSI_VHBPCR: mmio.Mmio(packed struct(u32) {
                ///  Horizontal Back-Porch duration
                HBP: u12,
                padding: u20,
            }),
            ///  DSI Host Video Line Configuration Register
            DSI_VLCR: mmio.Mmio(packed struct(u32) {
                ///  Horizontal Line duration
                HLINE: u15,
                padding: u17,
            }),
            ///  DSI Host Video VSA Configuration Register
            DSI_VVSACR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Synchronism Active duration
                VSA: u10,
                padding: u22,
            }),
            ///  DSI Host Video VBP Configuration Register
            DSI_VVBPCR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Back-Porch duration
                VBP: u10,
                padding: u22,
            }),
            ///  DSI Host Video VFP Configuration Register
            DSI_VVFPCR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Front-Porch duration
                VFP: u10,
                padding: u22,
            }),
            ///  DSI Host Video VA Configuration Register
            DSI_VVACR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Active duration
                VA: u14,
                padding: u18,
            }),
            ///  DSI Host LTDC Command Configuration Register
            DSI_LCCR: mmio.Mmio(packed struct(u32) {
                ///  Command Size
                CMDSIZE: u16,
                padding: u16,
            }),
            ///  DSI Host Command mode Configuration Register
            DSI_CMCR: mmio.Mmio(packed struct(u32) {
                ///  Tearing Effect Acknowledge Request Enable
                TEARE: u1,
                ///  Acknowledge Request Enable
                ARE: u1,
                reserved8: u6,
                ///  Generic Short Write Zero parameters Transmission
                GSW0TX: u1,
                ///  Generic Short Write One parameters Transmission
                GSW1TX: u1,
                ///  Generic Short Write Two parameters Transmission
                GSW2TX: u1,
                ///  Generic Short Read Zero parameters Transmission
                GSR0TX: u1,
                ///  Generic Short Read One parameters Transmission
                GSR1TX: u1,
                ///  Generic Short Read Two parameters Transmission
                GSR2TX: u1,
                ///  Generic Long Write Transmission
                GLWTX: u1,
                reserved16: u1,
                ///  DCS Short Write Zero parameter Transmission
                DSW0TX: u1,
                ///  DCS Short Read One parameter Transmission
                DSW1TX: u1,
                ///  DCS Short Read Zero parameter Transmission
                DSR0TX: u1,
                ///  DCS Long Write Transmission
                DLWTX: u1,
                reserved24: u4,
                ///  Maximum Read Packet Size
                MRDPS: u1,
                padding: u7,
            }),
            ///  DSI Host Generic Header Configuration Register
            DSI_GHCR: mmio.Mmio(packed struct(u32) {
                ///  Type
                DT: u6,
                ///  Channel
                VCID: u2,
                ///  WordCount LSB
                WCLSB: u8,
                ///  WordCount MSB
                WCMSB: u8,
                padding: u8,
            }),
            ///  DSI Host Generic Payload Data Register
            DSI_GPDR: mmio.Mmio(packed struct(u32) {
                ///  Payload Byte 1
                DATA1: u8,
                ///  Payload Byte 2
                DATA2: u8,
                ///  Payload Byte 3
                DATA3: u8,
                ///  Payload Byte 4
                DATA4: u8,
            }),
            ///  DSI Host Generic Packet Status Register
            DSI_GPSR: mmio.Mmio(packed struct(u32) {
                ///  Command FIFO Empty
                CMDFE: u1,
                ///  Command FIFO Full
                CMDFF: u1,
                ///  Payload Write FIFO Empty
                PWRFE: u1,
                ///  Payload Write FIFO Full
                PWRFF: u1,
                ///  Payload Read FIFO Empty
                PRDFE: u1,
                ///  Payload Read FIFO Full
                PRDFF: u1,
                ///  Read Command Busy
                RCB: u1,
                padding: u25,
            }),
            ///  DSI Host Timeout Counter Configuration Register 0
            DSI_TCCR0: mmio.Mmio(packed struct(u32) {
                ///  Low-power Reception Timeout Counter
                LPRX_TOCNT: u16,
                ///  High-Speed Transmission Timeout Counter
                HSTX_TOCNT: u16,
            }),
            ///  DSI Host Timeout Counter Configuration Register 1
            DSI_TCCR1: mmio.Mmio(packed struct(u32) {
                ///  High-Speed Read Timeout Counter
                HSRD_TOCNT: u16,
                padding: u16,
            }),
            ///  DSI Host Timeout Counter Configuration Register 2
            DSI_TCCR2: mmio.Mmio(packed struct(u32) {
                ///  Low-Power Read Timeout Counter
                LPRD_TOCNT: u16,
                padding: u16,
            }),
            ///  DSI Host Timeout Counter Configuration Register 3
            DSI_TCCR3: mmio.Mmio(packed struct(u32) {
                ///  High-Speed Write Timeout Counter
                HSWR_TOCNT: u16,
                reserved24: u8,
                ///  Presp mode
                PM: u1,
                padding: u7,
            }),
            ///  DSI Host Timeout Counter Configuration Register 4
            DSI_TCCR4: mmio.Mmio(packed struct(u32) {
                ///  Low-Power Write Timeout Counter
                LSWR_TOCNT: u16,
                padding: u16,
            }),
            ///  DSI Host Timeout Counter Configuration Register 5
            DSI_TCCR5: mmio.Mmio(packed struct(u32) {
                ///  Bus-Turn-Around Timeout Counter
                BTA_TOCNT: u16,
                padding: u16,
            }),
            ///  DSI Host Clock Lane Configuration Register
            DSI_CLCR: mmio.Mmio(packed struct(u32) {
                ///  D-PHY Clock Control
                DPCC: u1,
                ///  Automatic Clock lane Control
                ACR: u1,
                padding: u30,
            }),
            ///  DSI Host Clock Lane Timer Configuration Register
            DSI_CLTCR: mmio.Mmio(packed struct(u32) {
                ///  Low-Power to High-Speed Time
                LP2HS_TIME: u10,
                reserved16: u6,
                ///  High-Speed to Low-Power Time
                HS2LP_TIME: u10,
                padding: u6,
            }),
            ///  DSI Host Data Lane Timer Configuration Register
            DSI_DLTRC: mmio.Mmio(packed struct(u32) {
                ///  Maximum Read Time
                MRD_TIME: u15,
                reserved16: u1,
                ///  Low-Power To High-Speed Time
                LP2HS_TIME: u8,
                ///  High-Speed To Low-Power Time
                HS2LP_TIME: u8,
            }),
            ///  DSI Host PHY Control Register
            DSI_PCTLR: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  Digital Enable
                DEN: u1,
                ///  Clock Enable
                CKE: u1,
                padding: u29,
            }),
            ///  DSI Host PHY Configuration Register
            DSI_PCONFR: mmio.Mmio(packed struct(u32) {
                ///  Number of Lanes
                NL: u2,
                reserved8: u6,
                ///  Stop Wait Time
                SW_TIME: u8,
                padding: u16,
            }),
            ///  DSI Host PHY ULPS Control Register
            DSI_PUCR: mmio.Mmio(packed struct(u32) {
                ///  ULPS Request on Clock Lane
                URCL: u1,
                ///  ULPS Exit on Clock Lane
                UECL: u1,
                ///  ULPS Request on Data Lane
                URDL: u1,
                ///  ULPS Exit on Data Lane
                UEDL: u1,
                padding: u28,
            }),
            ///  DSI Host PHY TX Triggers Configuration Register
            DSI_PTTCR: mmio.Mmio(packed struct(u32) {
                ///  Transmission Trigger
                TX_TRIG: u4,
                padding: u28,
            }),
            ///  DSI Host PHY Status Register
            DSI_PSR: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  PHY Direction
                PD: u1,
                ///  PHY Stop State Clock lane
                PSSC: u1,
                ///  ULPS Active Not Clock lane
                UANC: u1,
                ///  PHY Stop State lane 0
                PSS0: u1,
                ///  ULPS Active Not lane 1
                UAN0: u1,
                ///  RX ULPS Escape lane 0
                RUE0: u1,
                ///  PHY Stop State lane 1
                PSS1: u1,
                ///  ULPS Active Not lane 1
                UAN1: u1,
                padding: u23,
            }),
            ///  DSI Host Interrupt & Status Register 0
            DSI_ISR0: mmio.Mmio(packed struct(u32) {
                ///  Acknowledge Error 0
                AE0: u1,
                ///  Acknowledge Error 1
                AE1: u1,
                ///  Acknowledge Error 2
                AE2: u1,
                ///  Acknowledge Error 3
                AE3: u1,
                ///  Acknowledge Error 4
                AE4: u1,
                ///  Acknowledge Error 5
                AE5: u1,
                ///  Acknowledge Error 6
                AE6: u1,
                ///  Acknowledge Error 7
                AE7: u1,
                ///  Acknowledge Error 8
                AE8: u1,
                ///  Acknowledge Error 9
                AE9: u1,
                ///  Acknowledge Error 10
                AE10: u1,
                ///  Acknowledge Error 11
                AE11: u1,
                ///  Acknowledge Error 12
                AE12: u1,
                ///  Acknowledge Error 13
                AE13: u1,
                ///  Acknowledge Error 14
                AE14: u1,
                ///  Acknowledge Error 15
                AE15: u1,
                ///  PHY Error 0
                PE0: u1,
                ///  PHY Error 1
                PE1: u1,
                ///  PHY Error 2
                PE2: u1,
                ///  PHY Error 3
                PE3: u1,
                ///  PHY Error 4
                PE4: u1,
                padding: u11,
            }),
            ///  DSI Host Interrupt & Status Register 1
            DSI_ISR1: mmio.Mmio(packed struct(u32) {
                ///  Timeout High-Speed Transmission
                TOHSTX: u1,
                ///  Timeout Low-Power Reception
                TOLPRX: u1,
                ///  ECC Single-bit Error
                ECCSE: u1,
                ///  ECC Multi-bit Error
                ECCME: u1,
                ///  CRC Error
                CRCE: u1,
                ///  Packet Size Error
                PSE: u1,
                ///  EoTp Error
                EOTPE: u1,
                ///  LTDC Payload Write Error
                LPWRE: u1,
                ///  Generic Command Write Error
                GCWRE: u1,
                ///  Generic Payload Write Error
                GPWRE: u1,
                ///  Generic Payload Transmit Error
                GPTXE: u1,
                ///  Generic Payload Read Error
                GPRDE: u1,
                ///  Generic Payload Receive Error
                GPRXE: u1,
                padding: u19,
            }),
            ///  DSI Host Interrupt Enable Register 0
            DSI_IER0: mmio.Mmio(packed struct(u32) {
                ///  Acknowledge Error 0 Interrupt Enable
                AE0IE: u1,
                ///  Acknowledge Error 1 Interrupt Enable
                AE1IE: u1,
                ///  Acknowledge Error 2 Interrupt Enable
                AE2IE: u1,
                ///  Acknowledge Error 3 Interrupt Enable
                AE3IE: u1,
                ///  Acknowledge Error 4 Interrupt Enable
                AE4IE: u1,
                ///  Acknowledge Error 5 Interrupt Enable
                AE5IE: u1,
                ///  Acknowledge Error 6 Interrupt Enable
                AE6IE: u1,
                ///  Acknowledge Error 7 Interrupt Enable
                AE7IE: u1,
                ///  Acknowledge Error 8 Interrupt Enable
                AE8IE: u1,
                ///  Acknowledge Error 9 Interrupt Enable
                AE9IE: u1,
                ///  Acknowledge Error 10 Interrupt Enable
                AE10IE: u1,
                ///  Acknowledge Error 11 Interrupt Enable
                AE11IE: u1,
                ///  Acknowledge Error 12 Interrupt Enable
                AE12IE: u1,
                ///  Acknowledge Error 13 Interrupt Enable
                AE13IE: u1,
                ///  Acknowledge Error 14 Interrupt Enable
                AE14IE: u1,
                ///  Acknowledge Error 15 Interrupt Enable
                AE15IE: u1,
                ///  PHY Error 0 Interrupt Enable
                PE0IE: u1,
                ///  PHY Error 1 Interrupt Enable
                PE1IE: u1,
                ///  PHY Error 2 Interrupt Enable
                PE2IE: u1,
                ///  PHY Error 3 Interrupt Enable
                PE3IE: u1,
                ///  PHY Error 4 Interrupt Enable
                PE4IE: u1,
                padding: u11,
            }),
            ///  DSI Host Interrupt Enable Register 1
            DSI_IER1: mmio.Mmio(packed struct(u32) {
                ///  Timeout High-Speed Transmission Interrupt Enable
                TOHSTXIE: u1,
                ///  Timeout Low-Power Reception Interrupt Enable
                TOLPRXIE: u1,
                ///  ECC Single-bit Error Interrupt Enable
                ECCSEIE: u1,
                ///  ECC Multi-bit Error Interrupt Enable
                ECCMEIE: u1,
                ///  CRC Error Interrupt Enable
                CRCEIE: u1,
                ///  Packet Size Error Interrupt Enable
                PSEIE: u1,
                ///  EoTp Error Interrupt Enable
                EOTPEIE: u1,
                ///  LTDC Payload Write Error Interrupt Enable
                LPWREIE: u1,
                ///  Generic Command Write Error Interrupt Enable
                GCWREIE: u1,
                ///  Generic Payload Write Error Interrupt Enable
                GPWREIE: u1,
                ///  Generic Payload Transmit Error Interrupt Enable
                GPTXEIE: u1,
                ///  Generic Payload Read Error Interrupt Enable
                GPRDEIE: u1,
                ///  Generic Payload Receive Error Interrupt Enable
                GPRXEIE: u1,
                padding: u19,
            }),
            ///  DSI Host Force Interrupt Register 0
            DSI_FIR0: mmio.Mmio(packed struct(u32) {
                ///  Force Acknowledge Error 0
                FAE0: u1,
                ///  Force Acknowledge Error 1
                FAE1: u1,
                ///  Force Acknowledge Error 2
                FAE2: u1,
                ///  Force Acknowledge Error 3
                FAE3: u1,
                ///  Force Acknowledge Error 4
                FAE4: u1,
                ///  Force Acknowledge Error 5
                FAE5: u1,
                ///  Force Acknowledge Error 6
                FAE6: u1,
                ///  Force Acknowledge Error 7
                FAE7: u1,
                ///  Force Acknowledge Error 8
                FAE8: u1,
                ///  Force Acknowledge Error 9
                FAE9: u1,
                ///  Force Acknowledge Error 10
                FAE10: u1,
                ///  Force Acknowledge Error 11
                FAE11: u1,
                ///  Force Acknowledge Error 12
                FAE12: u1,
                ///  Force Acknowledge Error 13
                FAE13: u1,
                ///  Force Acknowledge Error 14
                FAE14: u1,
                ///  Force Acknowledge Error 15
                FAE15: u1,
                ///  Force PHY Error 0
                FPE0: u1,
                ///  Force PHY Error 1
                FPE1: u1,
                ///  Force PHY Error 2
                FPE2: u1,
                ///  Force PHY Error 3
                FPE3: u1,
                ///  Force PHY Error 4
                FPE4: u1,
                padding: u11,
            }),
            ///  DSI Host Force Interrupt Register 1
            DSI_FIR1: mmio.Mmio(packed struct(u32) {
                ///  Force Timeout High-Speed Transmission
                FTOHSTX: u1,
                ///  Force Timeout Low-Power Reception
                FTOLPRX: u1,
                ///  Force ECC Single-bit Error
                FECCSE: u1,
                ///  Force ECC Multi-bit Error
                FECCME: u1,
                ///  Force CRC Error
                FCRCE: u1,
                ///  Force Packet Size Error
                FPSE: u1,
                ///  Force EoTp Error
                FEOTPE: u1,
                ///  Force LTDC Payload Write Error
                FLPWRE: u1,
                ///  Force Generic Command Write Error
                FGCWRE: u1,
                ///  Force Generic Payload Write Error
                FGPWRE: u1,
                ///  Force Generic Payload Transmit Error
                FGPTXE: u1,
                ///  Force Generic Payload Read Error
                FGPRDE: u1,
                ///  Force Generic Payload Receive Error
                FGPRXE: u1,
                padding: u19,
            }),
            ///  DSI Host Video Shadow Control Register
            DSI_VSCR: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  Update Register
                UR: u1,
                padding: u23,
            }),
            ///  DSI Host LTDC Current VCID Register
            DSI_LCVCIDR: mmio.Mmio(packed struct(u32) {
                ///  Virtual Channel ID
                VCID: u2,
                padding: u30,
            }),
            ///  DSI Host LTDC Current Color Coding Register
            DSI_LCCCR: mmio.Mmio(packed struct(u32) {
                ///  Color Coding
                COLC: u4,
                reserved8: u4,
                ///  Loosely Packed Enable
                LPE: u1,
                padding: u23,
            }),
            ///  DSI Host Low-Power mode Current Configuration Register
            DSI_LPMCCR: mmio.Mmio(packed struct(u32) {
                ///  VACT Largest Packet Size
                VLPSIZE: u8,
                reserved16: u8,
                ///  Largest Packet Size
                LPSIZE: u8,
                padding: u8,
            }),
            ///  DSI Host Video mode Current Configuration Register
            DSI_VMCCR: mmio.Mmio(packed struct(u32) {
                ///  Video mode Type
                VMT: u2,
                ///  Low-Power Vertical Sync time Enable
                LPVSAE: u1,
                ///  Low-power Vertical Back-Porch Enable
                LPVBPE: u1,
                ///  Low-power Vertical Front-Porch Enable
                LPVFPE: u1,
                ///  Low-Power Vertical Active Enable
                LPVAE: u1,
                ///  Low-power Horizontal Back-Porch Enable
                LPHBPE: u1,
                ///  Low-Power Horizontal Front-Porch Enable
                LPHFE: u1,
                ///  Frame BTA Acknowledge Enable
                FBTAAE: u1,
                ///  Low-Power Command Enable
                LPCE: u1,
                padding: u22,
            }),
            ///  DSI Host Video Packet Current Configuration Register
            DSI_VPCCR: mmio.Mmio(packed struct(u32) {
                ///  Video Packet Size
                VPSIZE: u14,
                padding: u18,
            }),
            ///  DSI Host Video Chunks Current Configuration Register
            DSI_VCCCR: mmio.Mmio(packed struct(u32) {
                ///  Number of Chunks
                NUMC: u13,
                padding: u19,
            }),
            ///  DSI Host Video Null Packet Current Configuration Register
            DSI_VNPCCR: mmio.Mmio(packed struct(u32) {
                ///  Null Packet Size
                NPSIZE: u13,
                padding: u19,
            }),
            ///  DSI Host Video HSA Current Configuration Register
            DSI_VHSACCR: mmio.Mmio(packed struct(u32) {
                ///  Horizontal Synchronism Active duration
                HSA: u12,
                padding: u20,
            }),
            ///  DSI Host Video HBP Current Configuration Register
            DSI_VHBPCCR: mmio.Mmio(packed struct(u32) {
                ///  Horizontal Back-Porch duration
                HBP: u12,
                padding: u20,
            }),
            ///  DSI Host Video Line Current Configuration Register
            DSI_VLCCR: mmio.Mmio(packed struct(u32) {
                ///  Horizontal Line duration
                HLINE: u15,
                padding: u17,
            }),
            ///  DSI Host Video VSA Current Configuration Register
            DSI_VVSACCR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Synchronism Active duration
                VSA: u10,
                padding: u22,
            }),
            ///  DSI Host Video VBP Current Configuration Register
            DSI_VVBPCCR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Back-Porch duration
                VBP: u10,
                padding: u22,
            }),
            ///  DSI Host Video VFP Current Configuration Register
            DSI_VVFPCCR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Front-Porch duration
                VFP: u10,
                padding: u22,
            }),
            ///  DSI Host Video VA Current Configuration Register
            DSI_VVACCR: mmio.Mmio(packed struct(u32) {
                ///  Vertical Active duration
                VA: u14,
                padding: u18,
            }),
            reserved1024: [780]u8,
            ///  DSI Wrapper Configuration Register
            DSI_WCFGR: mmio.Mmio(packed struct(u32) {
                ///  DSI Mode
                DSIM: u1,
                ///  Color Multiplexing
                COLMUX: u3,
                ///  TE Source
                TESRC: u1,
                ///  TE Polarity
                TEPOL: u1,
                ///  Automatic Refresh
                AR: u1,
                ///  VSync Polarity
                VSPOL: u1,
                padding: u24,
            }),
            ///  DSI Wrapper Control Register
            DSI_WCR: mmio.Mmio(packed struct(u32) {
                ///  Color Mode
                COLM: u1,
                ///  Shutdown
                SHTDN: u1,
                ///  LTDC Enable
                LTDCEN: u1,
                ///  DSI Enable
                DSIEN: u1,
                padding: u28,
            }),
            ///  DSI Wrapper Interrupt Enable Register
            DSI_WIER: mmio.Mmio(packed struct(u32) {
                ///  Tearing Effect Interrupt Enable
                TEIE: u1,
                ///  End of Refresh Interrupt Enable
                ERIE: u1,
                reserved9: u7,
                ///  PLL Lock Interrupt Enable
                PLLLIE: u1,
                ///  PLL Unlock Interrupt Enable
                PLLUIE: u1,
                reserved13: u2,
                ///  Regulator Ready Interrupt Enable
                RRIE: u1,
                padding: u18,
            }),
            ///  DSI Wrapper Interrupt & Status Register
            DSI_WISR: mmio.Mmio(packed struct(u32) {
                ///  Tearing Effect Interrupt Flag
                TEIF: u1,
                ///  End of Refresh Interrupt Flag
                ERIF: u1,
                ///  Busy Flag
                BUSY: u1,
                reserved8: u5,
                ///  PLL Lock Status
                PLLLS: u1,
                ///  PLL Lock Interrupt Flag
                PLLLIF: u1,
                ///  PLL Unlock Interrupt Flag
                PLLUIF: u1,
                reserved12: u1,
                ///  Regulator Ready Status
                RRS: u1,
                ///  Regulator Ready Interrupt Flag
                RRIF: u1,
                padding: u18,
            }),
            ///  DSI Wrapper Interrupt Flag Clear Register
            DSI_WIFCR: mmio.Mmio(packed struct(u32) {
                ///  Clear Tearing Effect Interrupt Flag
                CTEIF: u1,
                ///  Clear End of Refresh Interrupt Flag
                CERIF: u1,
                reserved9: u7,
                ///  Clear PLL Lock Interrupt Flag
                CPLLLIF: u1,
                ///  Clear PLL Unlock Interrupt Flag
                CPLLUIF: u1,
                reserved13: u2,
                ///  Clear Regulator Ready Interrupt Flag
                CRRIF: u1,
                padding: u18,
            }),
            reserved1048: [4]u8,
            ///  DSI Wrapper PHY Configuration Register 1
            DSI_WPCR1: mmio.Mmio(packed struct(u32) {
                ///  Unit Interval multiplied by 4
                UIX4: u6,
                ///  Swap Clock Lane pins
                SWCL: u1,
                ///  Swap Data Lane 0 pins
                SWDL0: u1,
                ///  Swap Data Lane 1 pins
                SWDL1: u1,
                ///  Invert Hight-Speed data signal on Clock Lane
                HSICL: u1,
                ///  Invert the Hight-Speed data signal on Data Lane 0
                HSIDL0: u1,
                ///  Invert the High-Speed data signal on Data Lane 1
                HSIDL1: u1,
                ///  Force in TX Stop Mode the Clock Lane
                FTXSMCL: u1,
                ///  Force in TX Stop Mode the Data Lanes
                FTXSMDL: u1,
                ///  Contention Detection OFF on Data Lanes
                CDOFFDL: u1,
                reserved16: u1,
                ///  Turn Disable Data Lanes
                TDDL: u1,
                reserved18: u1,
                ///  Pull-Down Enable
                PDEN: u1,
                ///  custom time for tCLK-PREPARE Enable
                TCLKPREPEN: u1,
                ///  custom time for tCLK-ZERO Enable
                TCLKZEROEN: u1,
                ///  custom time for tHS-PREPARE Enable
                THSPREPEN: u1,
                ///  custom time for tHS-TRAIL Enable
                THSTRAILEN: u1,
                ///  custom time for tHS-ZERO Enable
                THSZEROEN: u1,
                ///  custom time for tLPX for Data lanes Enable
                TLPXDEN: u1,
                ///  custom time for tHS-EXIT Enable
                THSEXITEN: u1,
                ///  custom time for tLPX for Clock lane Enable
                TLPXCEN: u1,
                ///  custom time for tCLK-POST Enable
                TCLKPOSTEN: u1,
                padding: u4,
            }),
            ///  DSI Wrapper PHY Configuration Register 2
            DSI_WPCR2: mmio.Mmio(packed struct(u32) {
                ///  High-Speed Transmission Delay on Clock Lane
                HSTXDCL: u2,
                ///  High-Speed Transmission Delay on Data Lanes
                HSTXDLL: u2,
                reserved6: u2,
                ///  Low-Power transmission Slew Rate Compensation on Clock Lane
                LPSRCL: u2,
                ///  Low-Power transmission Slew Rate Compensation on Data Lanes
                LPSRDL: u2,
                reserved12: u2,
                ///  SDD Control
                SDCC: u1,
                reserved16: u3,
                ///  High-Speed Transmission Slew Rate Control on Clock Lane
                HSTXSRCCL: u2,
                ///  High-Speed Transmission Slew Rate Control on Data Lanes
                HSTXSRCDL: u2,
                reserved22: u2,
                ///  Forces LP Receiver in Low-Power Mode
                FLPRXLPM: u1,
                reserved25: u2,
                ///  Low-Power RX low-pass Filtering Tuning
                LPRXFT: u2,
                padding: u5,
            }),
            ///  DSI Wrapper PHY Configuration Register 3
            DSI_WPCR3: mmio.Mmio(packed struct(u32) {
                ///  tCLK-PREPARE
                TCLKPREP: u8,
                ///  tCLK-ZERO
                TCLKZEO: u8,
                ///  tHS-PREPARE
                THSPREP: u8,
                ///  tHSTRAIL
                THSTRAIL: u8,
            }),
            ///  DSI_WPCR4
            DSI_WPCR4: mmio.Mmio(packed struct(u32) {
                ///  tHS-ZERO
                THSZERO: u8,
                ///  tLPX for Data lanes
                TLPXD: u8,
                ///  tHSEXIT
                THSEXIT: u8,
                ///  tLPXC for Clock lane
                TLPXC: u8,
            }),
            ///  DSI Wrapper PHY Configuration Register 5
            DSI_WPCR5: mmio.Mmio(packed struct(u32) {
                ///  tCLK-POST
                THSZERO: u8,
                padding: u24,
            }),
            reserved1072: [4]u8,
            ///  DSI Wrapper Regulator and PLL Control Register
            DSI_WRPCR: mmio.Mmio(packed struct(u32) {
                ///  PLL Enable
                PLLEN: u1,
                reserved2: u1,
                ///  PLL Loop Division Factor
                NDIV: u7,
                reserved11: u2,
                ///  PLL Input Division Factor
                IDF: u4,
                reserved16: u1,
                ///  PLL Output Division Factor
                ODF: u2,
                reserved24: u6,
                ///  Regulator Enable
                REGEN: u1,
                padding: u7,
            }),
        };

        ///  General-purpose I/Os
        pub const GPIOI = extern struct {
            ///  GPIO port mode register
            MODER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                MODER0: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER1: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER2: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER3: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER4: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER5: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER6: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER7: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER8: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER9: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER10: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER11: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER12: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER13: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER14: u2,
                ///  Port x configuration bits (y = 0..15)
                MODER15: u2,
            }),
            ///  GPIO port output type register
            OTYPER: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OT0: u1,
                ///  Port x configuration bits (y = 0..15)
                OT1: u1,
                ///  Port x configuration bits (y = 0..15)
                OT2: u1,
                ///  Port x configuration bits (y = 0..15)
                OT3: u1,
                ///  Port x configuration bits (y = 0..15)
                OT4: u1,
                ///  Port x configuration bits (y = 0..15)
                OT5: u1,
                ///  Port x configuration bits (y = 0..15)
                OT6: u1,
                ///  Port x configuration bits (y = 0..15)
                OT7: u1,
                ///  Port x configuration bits (y = 0..15)
                OT8: u1,
                ///  Port x configuration bits (y = 0..15)
                OT9: u1,
                ///  Port x configuration bits (y = 0..15)
                OT10: u1,
                ///  Port x configuration bits (y = 0..15)
                OT11: u1,
                ///  Port x configuration bits (y = 0..15)
                OT12: u1,
                ///  Port x configuration bits (y = 0..15)
                OT13: u1,
                ///  Port x configuration bits (y = 0..15)
                OT14: u1,
                ///  Port x configuration bits (y = 0..15)
                OT15: u1,
                padding: u16,
            }),
            ///  GPIO port output speed register
            OSPEEDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                OSPEEDR15: u2,
            }),
            ///  GPIO port pull-up/pull-down register
            PUPDR: mmio.Mmio(packed struct(u32) {
                ///  Port x configuration bits (y = 0..15)
                PUPDR0: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR1: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR2: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR3: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR4: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR5: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR6: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR7: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR8: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR9: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR10: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR11: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR12: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR13: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR14: u2,
                ///  Port x configuration bits (y = 0..15)
                PUPDR15: u2,
            }),
            ///  GPIO port input data register
            IDR: mmio.Mmio(packed struct(u32) {
                ///  Port input data (y = 0..15)
                IDR0: u1,
                ///  Port input data (y = 0..15)
                IDR1: u1,
                ///  Port input data (y = 0..15)
                IDR2: u1,
                ///  Port input data (y = 0..15)
                IDR3: u1,
                ///  Port input data (y = 0..15)
                IDR4: u1,
                ///  Port input data (y = 0..15)
                IDR5: u1,
                ///  Port input data (y = 0..15)
                IDR6: u1,
                ///  Port input data (y = 0..15)
                IDR7: u1,
                ///  Port input data (y = 0..15)
                IDR8: u1,
                ///  Port input data (y = 0..15)
                IDR9: u1,
                ///  Port input data (y = 0..15)
                IDR10: u1,
                ///  Port input data (y = 0..15)
                IDR11: u1,
                ///  Port input data (y = 0..15)
                IDR12: u1,
                ///  Port input data (y = 0..15)
                IDR13: u1,
                ///  Port input data (y = 0..15)
                IDR14: u1,
                ///  Port input data (y = 0..15)
                IDR15: u1,
                padding: u16,
            }),
            ///  GPIO port output data register
            ODR: mmio.Mmio(packed struct(u32) {
                ///  Port output data (y = 0..15)
                ODR0: u1,
                ///  Port output data (y = 0..15)
                ODR1: u1,
                ///  Port output data (y = 0..15)
                ODR2: u1,
                ///  Port output data (y = 0..15)
                ODR3: u1,
                ///  Port output data (y = 0..15)
                ODR4: u1,
                ///  Port output data (y = 0..15)
                ODR5: u1,
                ///  Port output data (y = 0..15)
                ODR6: u1,
                ///  Port output data (y = 0..15)
                ODR7: u1,
                ///  Port output data (y = 0..15)
                ODR8: u1,
                ///  Port output data (y = 0..15)
                ODR9: u1,
                ///  Port output data (y = 0..15)
                ODR10: u1,
                ///  Port output data (y = 0..15)
                ODR11: u1,
                ///  Port output data (y = 0..15)
                ODR12: u1,
                ///  Port output data (y = 0..15)
                ODR13: u1,
                ///  Port output data (y = 0..15)
                ODR14: u1,
                ///  Port output data (y = 0..15)
                ODR15: u1,
                padding: u16,
            }),
            ///  GPIO port bit set/reset register
            BSRR: mmio.Mmio(packed struct(u32) {
                ///  Port x set bit y (y= 0..15)
                BS0: u1,
                ///  Port x set bit y (y= 0..15)
                BS1: u1,
                ///  Port x set bit y (y= 0..15)
                BS2: u1,
                ///  Port x set bit y (y= 0..15)
                BS3: u1,
                ///  Port x set bit y (y= 0..15)
                BS4: u1,
                ///  Port x set bit y (y= 0..15)
                BS5: u1,
                ///  Port x set bit y (y= 0..15)
                BS6: u1,
                ///  Port x set bit y (y= 0..15)
                BS7: u1,
                ///  Port x set bit y (y= 0..15)
                BS8: u1,
                ///  Port x set bit y (y= 0..15)
                BS9: u1,
                ///  Port x set bit y (y= 0..15)
                BS10: u1,
                ///  Port x set bit y (y= 0..15)
                BS11: u1,
                ///  Port x set bit y (y= 0..15)
                BS12: u1,
                ///  Port x set bit y (y= 0..15)
                BS13: u1,
                ///  Port x set bit y (y= 0..15)
                BS14: u1,
                ///  Port x set bit y (y= 0..15)
                BS15: u1,
                ///  Port x set bit y (y= 0..15)
                BR0: u1,
                ///  Port x reset bit y (y = 0..15)
                BR1: u1,
                ///  Port x reset bit y (y = 0..15)
                BR2: u1,
                ///  Port x reset bit y (y = 0..15)
                BR3: u1,
                ///  Port x reset bit y (y = 0..15)
                BR4: u1,
                ///  Port x reset bit y (y = 0..15)
                BR5: u1,
                ///  Port x reset bit y (y = 0..15)
                BR6: u1,
                ///  Port x reset bit y (y = 0..15)
                BR7: u1,
                ///  Port x reset bit y (y = 0..15)
                BR8: u1,
                ///  Port x reset bit y (y = 0..15)
                BR9: u1,
                ///  Port x reset bit y (y = 0..15)
                BR10: u1,
                ///  Port x reset bit y (y = 0..15)
                BR11: u1,
                ///  Port x reset bit y (y = 0..15)
                BR12: u1,
                ///  Port x reset bit y (y = 0..15)
                BR13: u1,
                ///  Port x reset bit y (y = 0..15)
                BR14: u1,
                ///  Port x reset bit y (y = 0..15)
                BR15: u1,
            }),
            ///  GPIO port configuration lock register
            LCKR: mmio.Mmio(packed struct(u32) {
                ///  Port x lock bit y (y= 0..15)
                LCK0: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK1: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK2: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK3: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK4: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK5: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK6: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK7: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK8: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK9: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK10: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK11: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK12: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK13: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK14: u1,
                ///  Port x lock bit y (y= 0..15)
                LCK15: u1,
                ///  Port x lock bit y (y= 0..15)
                LCKK: u1,
                padding: u15,
            }),
            ///  GPIO alternate function low register
            AFRL: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL0: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL1: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL2: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL3: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL4: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL5: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL6: u4,
                ///  Alternate function selection for port x bit y (y = 0..7)
                AFRL7: u4,
            }),
            ///  GPIO alternate function high register
            AFRH: mmio.Mmio(packed struct(u32) {
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH8: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH9: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH10: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH11: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH12: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH13: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH14: u4,
                ///  Alternate function selection for port x bit y (y = 8..15)
                AFRH15: u4,
            }),
            ///  GPIO port bit reset register
            BRR: mmio.Mmio(packed struct(u32) {
                ///  Port Reset bit
                BR0: u1,
                ///  Port Reset bit
                BR1: u1,
                ///  Port Reset bit
                BR2: u1,
                ///  Port Reset bit
                BR3: u1,
                ///  Port Reset bit
                BR4: u1,
                ///  Port Reset bit
                BR5: u1,
                ///  Port Reset bit
                BR6: u1,
                ///  Port Reset bit
                BR7: u1,
                ///  Port Reset bit
                BR8: u1,
                ///  Port Reset bit
                BR9: u1,
                ///  Port Reset bit
                BR10: u1,
                ///  Port Reset bit
                BR11: u1,
                ///  Port Reset bit
                BR12: u1,
                ///  Port Reset bit
                BR13: u1,
                ///  Port Reset bit
                BR14: u1,
                ///  Port Reset bit
                BR15: u1,
                padding: u16,
            }),
        };

        ///  Serial audio interface
        pub const SAI1 = extern struct {
            reserved4: [4]u8,
            ///  AConfiguration register 1
            ACR1: mmio.Mmio(packed struct(u32) {
                ///  Audio block mode
                MODE: u2,
                ///  Protocol configuration
                PRTCFG: u2,
                reserved5: u1,
                ///  Data size
                DS: u3,
                ///  Least significant bit first
                LSBFIRST: u1,
                ///  Clock strobing edge
                CKSTR: u1,
                ///  Synchronization enable
                SYNCEN: u2,
                ///  Mono mode
                MONO: u1,
                ///  Output drive
                OutDri: u1,
                reserved16: u2,
                ///  Audio block A enable
                SAIAEN: u1,
                ///  DMA enable
                DMAEN: u1,
                reserved19: u1,
                ///  No divider
                NODIV: u1,
                ///  Master clock divider
                MCJDIV: u4,
                padding: u8,
            }),
            ///  AConfiguration register 2
            ACR2: mmio.Mmio(packed struct(u32) {
                ///  FIFO threshold
                FTH: u3,
                ///  FIFO flush
                FFLUS: u1,
                ///  Tristate management on data line
                TRIS: u1,
                ///  Mute
                MUTE: u1,
                ///  Mute value
                MUTEVAL: u1,
                ///  Mute counter
                MUTECN: u6,
                ///  Complement bit
                CPL: u1,
                ///  Companding mode
                COMP: u2,
                padding: u16,
            }),
            ///  AFRCR
            AFRCR: mmio.Mmio(packed struct(u32) {
                ///  Frame length
                FRL: u8,
                ///  Frame synchronization active level length
                FSALL: u7,
                reserved16: u1,
                ///  Frame synchronization definition
                FSDEF: u1,
                ///  Frame synchronization polarity
                FSPOL: u1,
                ///  Frame synchronization offset
                FSOFF: u1,
                padding: u13,
            }),
            ///  ASlot register
            ASLOTR: mmio.Mmio(packed struct(u32) {
                ///  First bit offset
                FBOFF: u5,
                reserved6: u1,
                ///  Slot size
                SLOTSZ: u2,
                ///  Number of slots in an audio frame
                NBSLOT: u4,
                reserved16: u4,
                ///  Slot enable
                SLOTEN: u16,
            }),
            ///  AInterrupt mask register2
            AIM: mmio.Mmio(packed struct(u32) {
                ///  Overrun/underrun interrupt enable
                OVRUDRIE: u1,
                ///  Mute detection interrupt enable
                MUTEDET: u1,
                ///  Wrong clock configuration interrupt enable
                WCKCFG: u1,
                ///  FIFO request interrupt enable
                FREQIE: u1,
                ///  Codec not ready interrupt enable
                CNRDYIE: u1,
                ///  Anticipated frame synchronization detection interrupt enable
                AFSDETIE: u1,
                ///  Late frame synchronization detection interrupt enable
                LFSDET: u1,
                padding: u25,
            }),
            ///  AStatus register
            ASR: mmio.Mmio(packed struct(u32) {
                ///  Overrun / underrun
                OVRUDR: u1,
                ///  Mute detection
                MUTEDET: u1,
                ///  Wrong clock configuration flag. This bit is read only
                WCKCFG: u1,
                ///  FIFO request
                FREQ: u1,
                ///  Codec not ready
                CNRDY: u1,
                ///  Anticipated frame synchronization detection
                AFSDET: u1,
                ///  Late frame synchronization detection
                LFSDET: u1,
                reserved16: u9,
                ///  FIFO level threshold
                FLVL: u3,
                padding: u13,
            }),
            ///  AClear flag register
            ACLRFR: mmio.Mmio(packed struct(u32) {
                ///  Clear overrun / underrun
                OVRUDR: u1,
                ///  Mute detection flag
                MUTEDET: u1,
                ///  Clear wrong clock configuration flag
                WCKCFG: u1,
                reserved4: u1,
                ///  Clear codec not ready flag
                CNRDY: u1,
                ///  Clear anticipated frame synchronization detection flag
                CAFSDET: u1,
                ///  Clear late frame synchronization detection flag
                LFSDET: u1,
                padding: u25,
            }),
            ///  AData register
            ADR: mmio.Mmio(packed struct(u32) {
                ///  Data
                DATA: u32,
            }),
            ///  BConfiguration register 1
            BCR1: mmio.Mmio(packed struct(u32) {
                ///  Audio block mode
                MODE: u2,
                ///  Protocol configuration
                PRTCFG: u2,
                reserved5: u1,
                ///  Data size
                DS: u3,
                ///  Least significant bit first
                LSBFIRST: u1,
                ///  Clock strobing edge
                CKSTR: u1,
                ///  Synchronization enable
                SYNCEN: u2,
                ///  Mono mode
                MONO: u1,
                ///  Output drive
                OutDri: u1,
                reserved16: u2,
                ///  Audio block B enable
                SAIBEN: u1,
                ///  DMA enable
                DMAEN: u1,
                reserved19: u1,
                ///  No divider
                NODIV: u1,
                ///  Master clock divider
                MCJDIV: u4,
                padding: u8,
            }),
            ///  BConfiguration register 2
            BCR2: mmio.Mmio(packed struct(u32) {
                ///  FIFO threshold
                FTH: u3,
                ///  FIFO flush
                FFLUS: u1,
                ///  Tristate management on data line
                TRIS: u1,
                ///  Mute
                MUTE: u1,
                ///  Mute value
                MUTEVAL: u1,
                ///  Mute counter
                MUTECN: u6,
                ///  Complement bit
                CPL: u1,
                ///  Companding mode
                COMP: u2,
                padding: u16,
            }),
            ///  BFRCR
            BFRCR: mmio.Mmio(packed struct(u32) {
                ///  Frame length
                FRL: u8,
                ///  Frame synchronization active level length
                FSALL: u7,
                reserved16: u1,
                ///  Frame synchronization definition
                FSDEF: u1,
                ///  Frame synchronization polarity
                FSPOL: u1,
                ///  Frame synchronization offset
                FSOFF: u1,
                padding: u13,
            }),
            ///  BSlot register
            BSLOTR: mmio.Mmio(packed struct(u32) {
                ///  First bit offset
                FBOFF: u5,
                reserved6: u1,
                ///  Slot size
                SLOTSZ: u2,
                ///  Number of slots in an audio frame
                NBSLOT: u4,
                reserved16: u4,
                ///  Slot enable
                SLOTEN: u16,
            }),
            ///  BInterrupt mask register2
            BIM: mmio.Mmio(packed struct(u32) {
                ///  Overrun/underrun interrupt enable
                OVRUDRIE: u1,
                ///  Mute detection interrupt enable
                MUTEDET: u1,
                ///  Wrong clock configuration interrupt enable
                WCKCFG: u1,
                ///  FIFO request interrupt enable
                FREQIE: u1,
                ///  Codec not ready interrupt enable
                CNRDYIE: u1,
                ///  Anticipated frame synchronization detection interrupt enable
                AFSDETIE: u1,
                ///  Late frame synchronization detection interrupt enable
                LFSDETIE: u1,
                padding: u25,
            }),
            ///  BStatus register
            BSR: mmio.Mmio(packed struct(u32) {
                ///  Overrun / underrun
                OVRUDR: u1,
                ///  Mute detection
                MUTEDET: u1,
                ///  Wrong clock configuration flag
                WCKCFG: u1,
                ///  FIFO request
                FREQ: u1,
                ///  Codec not ready
                CNRDY: u1,
                ///  Anticipated frame synchronization detection
                AFSDET: u1,
                ///  Late frame synchronization detection
                LFSDET: u1,
                reserved16: u9,
                ///  FIFO level threshold
                FLVL: u3,
                padding: u13,
            }),
            ///  BClear flag register
            BCLRFR: mmio.Mmio(packed struct(u32) {
                ///  Clear overrun / underrun
                OVRUDR: u1,
                ///  Mute detection flag
                MUTEDET: u1,
                ///  Clear wrong clock configuration flag
                WCKCFG: u1,
                reserved4: u1,
                ///  Clear codec not ready flag
                CNRDY: u1,
                ///  Clear anticipated frame synchronization detection flag
                CAFSDET: u1,
                ///  Clear late frame synchronization detection flag
                LFSDET: u1,
                padding: u25,
            }),
            ///  BData register
            BDR: mmio.Mmio(packed struct(u32) {
                ///  Data
                DATA: u32,
            }),
        };

        ///  DMA2D controller
        pub const DMA2D = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Start
                START: u1,
                ///  Suspend
                SUSP: u1,
                ///  Abort
                ABORT: u1,
                reserved8: u5,
                ///  Transfer error interrupt enable
                TEIE: u1,
                ///  Transfer complete interrupt enable
                TCIE: u1,
                ///  Transfer watermark interrupt enable
                TWIE: u1,
                ///  CLUT access error interrupt enable
                CAEIE: u1,
                ///  CLUT transfer complete interrupt enable
                CTCIE: u1,
                ///  Configuration Error Interrupt Enable
                CEIE: u1,
                reserved16: u2,
                ///  DMA2D mode
                MODE: u2,
                padding: u14,
            }),
            ///  Interrupt Status Register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  Transfer error interrupt flag
                TEIF: u1,
                ///  Transfer complete interrupt flag
                TCIF: u1,
                ///  Transfer watermark interrupt flag
                TWIF: u1,
                ///  CLUT access error interrupt flag
                CAEIF: u1,
                ///  CLUT transfer complete interrupt flag
                CTCIF: u1,
                ///  Configuration error interrupt flag
                CEIF: u1,
                padding: u26,
            }),
            ///  interrupt flag clear register
            IFCR: mmio.Mmio(packed struct(u32) {
                ///  Clear Transfer error interrupt flag
                CTEIF: u1,
                ///  Clear transfer complete interrupt flag
                CTCIF: u1,
                ///  Clear transfer watermark interrupt flag
                CTWIF: u1,
                ///  Clear CLUT access error interrupt flag
                CAECIF: u1,
                ///  Clear CLUT transfer complete interrupt flag
                CCTCIF: u1,
                ///  Clear configuration error interrupt flag
                CCEIF: u1,
                padding: u26,
            }),
            ///  foreground memory address register
            FGMAR: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            ///  foreground offset register
            FGOR: mmio.Mmio(packed struct(u32) {
                ///  Line offset
                LO: u14,
                padding: u18,
            }),
            ///  background memory address register
            BGMAR: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            ///  background offset register
            BGOR: mmio.Mmio(packed struct(u32) {
                ///  Line offset
                LO: u14,
                padding: u18,
            }),
            ///  foreground PFC control register
            FGPFCCR: mmio.Mmio(packed struct(u32) {
                ///  Color mode
                CM: u4,
                ///  CLUT color mode
                CCM: u1,
                ///  Start
                START: u1,
                reserved8: u2,
                ///  CLUT size
                CS: u8,
                ///  Alpha mode
                AM: u2,
                reserved20: u2,
                ///  Alpha Inverted
                AI: u1,
                ///  Red Blue Swap
                RBS: u1,
                reserved24: u2,
                ///  Alpha value
                ALPHA: u8,
            }),
            ///  foreground color register
            FGCOLR: mmio.Mmio(packed struct(u32) {
                ///  Blue Value
                BLUE: u8,
                ///  Green Value
                GREEN: u8,
                ///  Red Value
                RED: u8,
                padding: u8,
            }),
            ///  background PFC control register
            BGPFCCR: mmio.Mmio(packed struct(u32) {
                ///  Color mode
                CM: u4,
                ///  CLUT Color mode
                CCM: u1,
                ///  Start
                START: u1,
                reserved8: u2,
                ///  CLUT size
                CS: u8,
                ///  Alpha mode
                AM: u2,
                reserved20: u2,
                ///  Alpha Inverted
                AI: u1,
                ///  Red Blue Swap
                RBS: u1,
                reserved24: u2,
                ///  Alpha value
                ALPHA: u8,
            }),
            ///  background color register
            BGCOLR: mmio.Mmio(packed struct(u32) {
                ///  Blue Value
                BLUE: u8,
                ///  Green Value
                GREEN: u8,
                ///  Red Value
                RED: u8,
                padding: u8,
            }),
            ///  foreground CLUT memory address register
            FGCMAR: mmio.Mmio(packed struct(u32) {
                ///  Memory Address
                MA: u32,
            }),
            ///  background CLUT memory address register
            BGCMAR: mmio.Mmio(packed struct(u32) {
                ///  Memory address
                MA: u32,
            }),
            ///  output PFC control register
            OPFCCR: mmio.Mmio(packed struct(u32) {
                ///  Color mode
                CM: u3,
                reserved20: u17,
                ///  Alpha Inverted
                AI: u1,
                ///  Red Blue Swap
                RBS: u1,
                padding: u10,
            }),
            ///  output color register
            OCOLR: mmio.Mmio(packed struct(u32) {
                ///  Blue Value
                BLUE: u8,
                ///  Green Value
                GREEN: u8,
                ///  Red Value
                RED: u8,
                ///  Alpha Channel Value
                APLHA: u8,
            }),
            ///  output memory address register
            OMAR: mmio.Mmio(packed struct(u32) {
                ///  Memory Address
                MA: u32,
            }),
            ///  output offset register
            OOR: mmio.Mmio(packed struct(u32) {
                ///  Line Offset
                LO: u14,
                padding: u18,
            }),
            ///  number of line register
            NLR: mmio.Mmio(packed struct(u32) {
                ///  Number of lines
                NL: u16,
                ///  Pixel per lines
                PL: u14,
                padding: u2,
            }),
            ///  line watermark register
            LWR: mmio.Mmio(packed struct(u32) {
                ///  Line watermark
                LW: u16,
                padding: u16,
            }),
            ///  AHB master timer configuration register
            AMTCR: mmio.Mmio(packed struct(u32) {
                ///  Enable
                EN: u1,
                reserved8: u7,
                ///  Dead Time
                DT: u8,
                padding: u16,
            }),
            reserved1024: [944]u8,
            ///  FGCLUT
            FGCLUT: mmio.Mmio(packed struct(u32) {
                ///  BLUE
                BLUE: u8,
                ///  GREEN
                GREEN: u8,
                ///  RED
                RED: u8,
                ///  APLHA
                APLHA: u8,
            }),
            reserved2048: [1020]u8,
            ///  BGCLUT
            BGCLUT: mmio.Mmio(packed struct(u32) {
                ///  BLUE
                BLUE: u8,
                ///  GREEN
                GREEN: u8,
                ///  RED
                RED: u8,
                ///  APLHA
                APLHA: u8,
            }),
        };

        ///  General-purpose-timers
        pub const TIM2 = extern struct {
            ///  control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Counter enable
                CEN: u1,
                ///  Update disable
                UDIS: u1,
                ///  Update request source
                URS: u1,
                ///  One-pulse mode
                OPM: u1,
                ///  Direction
                DIR: u1,
                ///  Center-aligned mode selection
                CMS: u2,
                ///  Auto-reload preload enable
                ARPE: u1,
                ///  Clock division
                CKD: u2,
                padding: u22,
            }),
            ///  control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  Capture/compare DMA selection
                CCDS: u1,
                ///  Master mode selection
                MMS: u3,
                ///  TI1 selection
                TI1S: u1,
                padding: u24,
            }),
            ///  slave mode control register
            SMCR: mmio.Mmio(packed struct(u32) {
                ///  Slave mode selection
                SMS: u3,
                reserved4: u1,
                ///  Trigger selection
                TS: u3,
                ///  Master/Slave mode
                MSM: u1,
                ///  External trigger filter
                ETF: u4,
                ///  External trigger prescaler
                ETPS: u2,
                ///  External clock enable
                ECE: u1,
                ///  External trigger polarity
                ETP: u1,
                padding: u16,
            }),
            ///  DMA/Interrupt enable register
            DIER: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt enable
                UIE: u1,
                ///  Capture/Compare 1 interrupt enable
                CC1IE: u1,
                ///  Capture/Compare 2 interrupt enable
                CC2IE: u1,
                ///  Capture/Compare 3 interrupt enable
                CC3IE: u1,
                ///  Capture/Compare 4 interrupt enable
                CC4IE: u1,
                reserved6: u1,
                ///  Trigger interrupt enable
                TIE: u1,
                reserved8: u1,
                ///  Update DMA request enable
                UDE: u1,
                ///  Capture/Compare 1 DMA request enable
                CC1DE: u1,
                ///  Capture/Compare 2 DMA request enable
                CC2DE: u1,
                ///  Capture/Compare 3 DMA request enable
                CC3DE: u1,
                ///  Capture/Compare 4 DMA request enable
                CC4DE: u1,
                ///  COM DMA request enable
                COMDE: u1,
                ///  Trigger DMA request enable
                TDE: u1,
                padding: u17,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt flag
                UIF: u1,
                ///  Capture/compare 1 interrupt flag
                CC1IF: u1,
                ///  Capture/Compare 2 interrupt flag
                CC2IF: u1,
                ///  Capture/Compare 3 interrupt flag
                CC3IF: u1,
                ///  Capture/Compare 4 interrupt flag
                CC4IF: u1,
                reserved6: u1,
                ///  Trigger interrupt flag
                TIF: u1,
                reserved9: u2,
                ///  Capture/Compare 1 overcapture flag
                CC1OF: u1,
                ///  Capture/compare 2 overcapture flag
                CC2OF: u1,
                ///  Capture/Compare 3 overcapture flag
                CC3OF: u1,
                ///  Capture/Compare 4 overcapture flag
                CC4OF: u1,
                padding: u19,
            }),
            ///  event generation register
            EGR: mmio.Mmio(packed struct(u32) {
                ///  Update generation
                UG: u1,
                ///  Capture/compare 1 generation
                CC1G: u1,
                ///  Capture/compare 2 generation
                CC2G: u1,
                ///  Capture/compare 3 generation
                CC3G: u1,
                ///  Capture/compare 4 generation
                CC4G: u1,
                reserved6: u1,
                ///  Trigger generation
                TG: u1,
                padding: u25,
            }),
            ///  capture/compare mode register 1 (output mode)
            CCMR1_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 selection
                CC1S: u2,
                ///  Output compare 1 fast enable
                OC1FE: u1,
                ///  Output compare 1 preload enable
                OC1PE: u1,
                ///  Output compare 1 mode
                OC1M: u3,
                ///  Output compare 1 clear enable
                OC1CE: u1,
                ///  Capture/Compare 2 selection
                CC2S: u2,
                ///  Output compare 2 fast enable
                OC2FE: u1,
                ///  Output compare 2 preload enable
                OC2PE: u1,
                ///  Output compare 2 mode
                OC2M: u3,
                ///  Output compare 2 clear enable
                OC2CE: u1,
                padding: u16,
            }),
            ///  capture/compare mode register 2 (output mode)
            CCMR2_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 3 selection
                CC3S: u2,
                ///  Output compare 3 fast enable
                OC3FE: u1,
                ///  Output compare 3 preload enable
                OC3PE: u1,
                ///  Output compare 3 mode
                OC3M: u3,
                ///  Output compare 3 clear enable
                OC3CE: u1,
                ///  Capture/Compare 4 selection
                CC4S: u2,
                ///  Output compare 4 fast enable
                OC4FE: u1,
                ///  Output compare 4 preload enable
                OC4PE: u1,
                ///  Output compare 4 mode
                OC4M: u3,
                ///  Output compare 4 clear enable
                OC4CE: u1,
                padding: u16,
            }),
            ///  capture/compare enable register
            CCER: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 output enable
                CC1E: u1,
                ///  Capture/Compare 1 output Polarity
                CC1P: u1,
                reserved3: u1,
                ///  Capture/Compare 1 output Polarity
                CC1NP: u1,
                ///  Capture/Compare 2 output enable
                CC2E: u1,
                ///  Capture/Compare 2 output Polarity
                CC2P: u1,
                reserved7: u1,
                ///  Capture/Compare 2 output Polarity
                CC2NP: u1,
                ///  Capture/Compare 3 output enable
                CC3E: u1,
                ///  Capture/Compare 3 output Polarity
                CC3P: u1,
                reserved11: u1,
                ///  Capture/Compare 3 output Polarity
                CC3NP: u1,
                ///  Capture/Compare 4 output enable
                CC4E: u1,
                ///  Capture/Compare 3 output Polarity
                CC4P: u1,
                reserved15: u1,
                ///  Capture/Compare 4 output Polarity
                CC4NP: u1,
                padding: u16,
            }),
            ///  counter
            CNT: mmio.Mmio(packed struct(u32) {
                ///  Low counter value
                CNT_L: u16,
                ///  High counter value (TIM2 only)
                CNT_H: u16,
            }),
            ///  prescaler
            PSC: mmio.Mmio(packed struct(u32) {
                ///  Prescaler value
                PSC: u16,
                padding: u16,
            }),
            ///  auto-reload register
            ARR: mmio.Mmio(packed struct(u32) {
                ///  Low Auto-reload value
                ARR_L: u16,
                ///  High Auto-reload value (TIM2 only)
                ARR_H: u16,
            }),
            reserved52: [4]u8,
            ///  capture/compare register 1
            CCR1: mmio.Mmio(packed struct(u32) {
                ///  Low Capture/Compare 1 value
                CCR1_L: u16,
                ///  High Capture/Compare 1 value (TIM2 only)
                CCR1_H: u16,
            }),
            ///  capture/compare register 2
            CCR2: mmio.Mmio(packed struct(u32) {
                ///  Low Capture/Compare 2 value
                CCR2_L: u16,
                ///  High Capture/Compare 2 value (TIM2 only)
                CCR2_H: u16,
            }),
            ///  capture/compare register 3
            CCR3: mmio.Mmio(packed struct(u32) {
                ///  Low Capture/Compare value
                CCR3_L: u16,
                ///  High Capture/Compare value (TIM2 only)
                CCR3_H: u16,
            }),
            ///  capture/compare register 4
            CCR4: mmio.Mmio(packed struct(u32) {
                ///  Low Capture/Compare value
                CCR4_L: u16,
                ///  High Capture/Compare value (TIM2 only)
                CCR4_H: u16,
            }),
            reserved72: [4]u8,
            ///  DMA control register
            DCR: mmio.Mmio(packed struct(u32) {
                ///  DMA base address
                DBA: u5,
                reserved8: u3,
                ///  DMA burst length
                DBL: u5,
                padding: u19,
            }),
            ///  DMA address for full transfer
            DMAR: mmio.Mmio(packed struct(u32) {
                ///  DMA register for burst accesses
                DMAB: u16,
                padding: u16,
            }),
            ///  TIM2 option register
            OR: mmio.Mmio(packed struct(u32) {
                ///  Timer2 ETR remap
                ETR_RMP: u3,
                ///  Internal trigger
                TI4_RMP: u2,
                padding: u27,
            }),
        };

        ///  Hash processor
        pub const HASH = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Initialize message digest calculation
                INIT: u1,
                ///  DMA enable
                DMAE: u1,
                ///  Data type selection
                DATATYPE: u2,
                ///  Mode selection
                MODE: u1,
                ///  Algorithm selection
                ALGO0: u1,
                ///  Number of words already pushed
                NBW: u4,
                ///  DIN not empty
                DINNE: u1,
                ///  Multiple DMA Transfers
                MDMAT: u1,
                reserved16: u2,
                ///  Long key selection
                LKEY: u1,
                reserved18: u1,
                ///  ALGO
                ALGO1: u1,
                padding: u13,
            }),
            ///  data input register
            DIN: mmio.Mmio(packed struct(u32) {
                ///  Data input
                DATAIN: u32,
            }),
            ///  start register
            STR: mmio.Mmio(packed struct(u32) {
                ///  Number of valid bits in the last word of the message
                NBLW: u5,
                reserved8: u3,
                ///  Digest calculation
                DCAL: u1,
                padding: u23,
            }),
            ///  digest registers
            HR0: mmio.Mmio(packed struct(u32) {
                ///  H0
                H0: u32,
            }),
            reserved32: [16]u8,
            ///  interrupt enable register
            IMR: mmio.Mmio(packed struct(u32) {
                ///  Data input interrupt enable
                DINIE: u1,
                ///  Digest calculation completion interrupt enable
                DCIE: u1,
                padding: u30,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Data input interrupt status
                DINIS: u1,
                ///  Digest calculation completion interrupt status
                DCIS: u1,
                ///  DMA Status
                DMAS: u1,
                ///  Busy bit
                BUSY: u1,
                padding: u28,
            }),
            reserved248: [208]u8,
            ///  context swap registers
            CSR0: mmio.Mmio(packed struct(u32) {
                ///  CSR0
                CSR0: u32,
            }),
            ///  context swap registers
            CSR1: mmio.Mmio(packed struct(u32) {
                ///  CSR1
                CSR1: u32,
            }),
            ///  context swap registers
            CSR2: mmio.Mmio(packed struct(u32) {
                ///  CSR2
                CSR2: u32,
            }),
            ///  context swap registers
            CSR3: mmio.Mmio(packed struct(u32) {
                ///  CSR3
                CSR3: u32,
            }),
            ///  context swap registers
            CSR4: mmio.Mmio(packed struct(u32) {
                ///  CSR4
                CSR4: u32,
            }),
            ///  context swap registers
            CSR5: mmio.Mmio(packed struct(u32) {
                ///  CSR5
                CSR5: u32,
            }),
            ///  context swap registers
            CSR6: mmio.Mmio(packed struct(u32) {
                ///  CSR6
                CSR6: u32,
            }),
            ///  context swap registers
            CSR7: mmio.Mmio(packed struct(u32) {
                ///  CSR7
                CSR7: u32,
            }),
            ///  context swap registers
            CSR8: mmio.Mmio(packed struct(u32) {
                ///  CSR8
                CSR8: u32,
            }),
            ///  context swap registers
            CSR9: mmio.Mmio(packed struct(u32) {
                ///  CSR9
                CSR9: u32,
            }),
            ///  context swap registers
            CSR10: mmio.Mmio(packed struct(u32) {
                ///  CSR10
                CSR10: u32,
            }),
            ///  context swap registers
            CSR11: mmio.Mmio(packed struct(u32) {
                ///  CSR11
                CSR11: u32,
            }),
            ///  context swap registers
            CSR12: mmio.Mmio(packed struct(u32) {
                ///  CSR12
                CSR12: u32,
            }),
            ///  context swap registers
            CSR13: mmio.Mmio(packed struct(u32) {
                ///  CSR13
                CSR13: u32,
            }),
            ///  context swap registers
            CSR14: mmio.Mmio(packed struct(u32) {
                ///  CSR14
                CSR14: u32,
            }),
            ///  context swap registers
            CSR15: mmio.Mmio(packed struct(u32) {
                ///  CSR15
                CSR15: u32,
            }),
            ///  context swap registers
            CSR16: mmio.Mmio(packed struct(u32) {
                ///  CSR16
                CSR16: u32,
            }),
            ///  context swap registers
            CSR17: mmio.Mmio(packed struct(u32) {
                ///  CSR17
                CSR17: u32,
            }),
            ///  context swap registers
            CSR18: mmio.Mmio(packed struct(u32) {
                ///  CSR18
                CSR18: u32,
            }),
            ///  context swap registers
            CSR19: mmio.Mmio(packed struct(u32) {
                ///  CSR19
                CSR19: u32,
            }),
            ///  context swap registers
            CSR20: mmio.Mmio(packed struct(u32) {
                ///  CSR20
                CSR20: u32,
            }),
            ///  context swap registers
            CSR21: mmio.Mmio(packed struct(u32) {
                ///  CSR21
                CSR21: u32,
            }),
            ///  context swap registers
            CSR22: mmio.Mmio(packed struct(u32) {
                ///  CSR22
                CSR22: u32,
            }),
            ///  context swap registers
            CSR23: mmio.Mmio(packed struct(u32) {
                ///  CSR23
                CSR23: u32,
            }),
            ///  context swap registers
            CSR24: mmio.Mmio(packed struct(u32) {
                ///  CSR24
                CSR24: u32,
            }),
            ///  context swap registers
            CSR25: mmio.Mmio(packed struct(u32) {
                ///  CSR25
                CSR25: u32,
            }),
            ///  context swap registers
            CSR26: mmio.Mmio(packed struct(u32) {
                ///  CSR26
                CSR26: u32,
            }),
            ///  context swap registers
            CSR27: mmio.Mmio(packed struct(u32) {
                ///  CSR27
                CSR27: u32,
            }),
            ///  context swap registers
            CSR28: mmio.Mmio(packed struct(u32) {
                ///  CSR28
                CSR28: u32,
            }),
            ///  context swap registers
            CSR29: mmio.Mmio(packed struct(u32) {
                ///  CSR29
                CSR29: u32,
            }),
            ///  context swap registers
            CSR30: mmio.Mmio(packed struct(u32) {
                ///  CSR30
                CSR30: u32,
            }),
            ///  context swap registers
            CSR31: mmio.Mmio(packed struct(u32) {
                ///  CSR31
                CSR31: u32,
            }),
            ///  context swap registers
            CSR32: mmio.Mmio(packed struct(u32) {
                ///  CSR32
                CSR32: u32,
            }),
            ///  context swap registers
            CSR33: mmio.Mmio(packed struct(u32) {
                ///  CSR33
                CSR33: u32,
            }),
            ///  context swap registers
            CSR34: mmio.Mmio(packed struct(u32) {
                ///  CSR34
                CSR34: u32,
            }),
            ///  context swap registers
            CSR35: mmio.Mmio(packed struct(u32) {
                ///  CSR35
                CSR35: u32,
            }),
            ///  context swap registers
            CSR36: mmio.Mmio(packed struct(u32) {
                ///  CSR36
                CSR36: u32,
            }),
            ///  context swap registers
            CSR37: mmio.Mmio(packed struct(u32) {
                ///  CSR37
                CSR37: u32,
            }),
            ///  context swap registers
            CSR38: mmio.Mmio(packed struct(u32) {
                ///  CSR38
                CSR38: u32,
            }),
            ///  context swap registers
            CSR39: mmio.Mmio(packed struct(u32) {
                ///  CSR39
                CSR39: u32,
            }),
            ///  context swap registers
            CSR40: mmio.Mmio(packed struct(u32) {
                ///  CSR40
                CSR40: u32,
            }),
            ///  context swap registers
            CSR41: mmio.Mmio(packed struct(u32) {
                ///  CSR41
                CSR41: u32,
            }),
            ///  context swap registers
            CSR42: mmio.Mmio(packed struct(u32) {
                ///  CSR42
                CSR42: u32,
            }),
            ///  context swap registers
            CSR43: mmio.Mmio(packed struct(u32) {
                ///  CSR43
                CSR43: u32,
            }),
            ///  context swap registers
            CSR44: mmio.Mmio(packed struct(u32) {
                ///  CSR44
                CSR44: u32,
            }),
            ///  context swap registers
            CSR45: mmio.Mmio(packed struct(u32) {
                ///  CSR45
                CSR45: u32,
            }),
            ///  context swap registers
            CSR46: mmio.Mmio(packed struct(u32) {
                ///  CSR46
                CSR46: u32,
            }),
            ///  context swap registers
            CSR47: mmio.Mmio(packed struct(u32) {
                ///  CSR47
                CSR47: u32,
            }),
            ///  context swap registers
            CSR48: mmio.Mmio(packed struct(u32) {
                ///  CSR48
                CSR48: u32,
            }),
            ///  context swap registers
            CSR49: mmio.Mmio(packed struct(u32) {
                ///  CSR49
                CSR49: u32,
            }),
            ///  context swap registers
            CSR50: mmio.Mmio(packed struct(u32) {
                ///  CSR50
                CSR50: u32,
            }),
            ///  context swap registers
            CSR51: mmio.Mmio(packed struct(u32) {
                ///  CSR51
                CSR51: u32,
            }),
            ///  context swap registers
            CSR52: mmio.Mmio(packed struct(u32) {
                ///  CSR52
                CSR52: u32,
            }),
            ///  context swap registers
            CSR53: mmio.Mmio(packed struct(u32) {
                ///  CSR53
                CSR53: u32,
            }),
            reserved784: [320]u8,
            ///  HASH digest register
            HASH_HR0: mmio.Mmio(packed struct(u32) {
                ///  H0
                H0: u32,
            }),
            ///  read-only
            HASH_HR1: mmio.Mmio(packed struct(u32) {
                ///  H1
                H1: u32,
            }),
            ///  read-only
            HASH_HR2: mmio.Mmio(packed struct(u32) {
                ///  H2
                H2: u32,
            }),
            ///  read-only
            HASH_HR3: mmio.Mmio(packed struct(u32) {
                ///  H3
                H3: u32,
            }),
            ///  read-only
            HASH_HR4: mmio.Mmio(packed struct(u32) {
                ///  H4
                H4: u32,
            }),
            ///  read-only
            HASH_HR5: mmio.Mmio(packed struct(u32) {
                ///  H5
                H5: u32,
            }),
            ///  read-only
            HASH_HR6: mmio.Mmio(packed struct(u32) {
                ///  H6
                H6: u32,
            }),
            ///  read-only
            HASH_HR7: mmio.Mmio(packed struct(u32) {
                ///  H7
                H7: u32,
            }),
        };

        ///  Digital camera interface
        pub const DCMI = extern struct {
            ///  control register 1
            CR: mmio.Mmio(packed struct(u32) {
                ///  Capture enable
                CAPTURE: u1,
                ///  Capture mode
                CM: u1,
                ///  Crop feature
                CROP: u1,
                ///  JPEG format
                JPEG: u1,
                ///  Embedded synchronization select
                ESS: u1,
                ///  Pixel clock polarity
                PCKPOL: u1,
                ///  Horizontal synchronization polarity
                HSPOL: u1,
                ///  Vertical synchronization polarity
                VSPOL: u1,
                ///  Frame capture rate control
                FCRC: u2,
                ///  Extended data mode
                EDM: u2,
                reserved14: u2,
                ///  DCMI enable
                ENABLE: u1,
                reserved16: u1,
                ///  Byte Select mode
                BSM: u2,
                ///  Odd/Even Byte Select (Byte Select Start)
                OEBS: u1,
                ///  Line Select mode
                LSM: u1,
                ///  Odd/Even Line Select (Line Select Start)
                OELS: u1,
                padding: u11,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  HSYNC
                HSYNC: u1,
                ///  VSYNC
                VSYNC: u1,
                ///  FIFO not empty
                FNE: u1,
                padding: u29,
            }),
            ///  raw interrupt status register
            RIS: mmio.Mmio(packed struct(u32) {
                ///  Capture complete raw interrupt status
                FRAME_RIS: u1,
                ///  Overrun raw interrupt status
                OVR_RIS: u1,
                ///  Synchronization error raw interrupt status
                ERR_RIS: u1,
                ///  VSYNC raw interrupt status
                VSYNC_RIS: u1,
                ///  Line raw interrupt status
                LINE_RIS: u1,
                padding: u27,
            }),
            ///  interrupt enable register
            IER: mmio.Mmio(packed struct(u32) {
                ///  Capture complete interrupt enable
                FRAME_IE: u1,
                ///  Overrun interrupt enable
                OVR_IE: u1,
                ///  Synchronization error interrupt enable
                ERR_IE: u1,
                ///  VSYNC interrupt enable
                VSYNC_IE: u1,
                ///  Line interrupt enable
                LINE_IE: u1,
                padding: u27,
            }),
            ///  masked interrupt status register
            MIS: mmio.Mmio(packed struct(u32) {
                ///  Capture complete masked interrupt status
                FRAME_MIS: u1,
                ///  Overrun masked interrupt status
                OVR_MIS: u1,
                ///  Synchronization error masked interrupt status
                ERR_MIS: u1,
                ///  VSYNC masked interrupt status
                VSYNC_MIS: u1,
                ///  Line masked interrupt status
                LINE_MIS: u1,
                padding: u27,
            }),
            ///  interrupt clear register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  Capture complete interrupt status clear
                FRAME_ISC: u1,
                ///  Overrun interrupt status clear
                OVR_ISC: u1,
                ///  Synchronization error interrupt status clear
                ERR_ISC: u1,
                ///  Vertical synch interrupt status clear
                VSYNC_ISC: u1,
                ///  line interrupt status clear
                LINE_ISC: u1,
                padding: u27,
            }),
            ///  embedded synchronization code register
            ESCR: mmio.Mmio(packed struct(u32) {
                ///  Frame start delimiter code
                FSC: u8,
                ///  Line start delimiter code
                LSC: u8,
                ///  Line end delimiter code
                LEC: u8,
                ///  Frame end delimiter code
                FEC: u8,
            }),
            ///  embedded synchronization unmask register
            ESUR: mmio.Mmio(packed struct(u32) {
                ///  Frame start delimiter unmask
                FSU: u8,
                ///  Line start delimiter unmask
                LSU: u8,
                ///  Line end delimiter unmask
                LEU: u8,
                ///  Frame end delimiter unmask
                FEU: u8,
            }),
            ///  crop window start
            CWSTRT: mmio.Mmio(packed struct(u32) {
                ///  Horizontal offset count
                HOFFCNT: u14,
                reserved16: u2,
                ///  Vertical start line count
                VST: u13,
                padding: u3,
            }),
            ///  crop window size
            CWSIZE: mmio.Mmio(packed struct(u32) {
                ///  Capture count
                CAPCNT: u14,
                reserved16: u2,
                ///  Vertical line count
                VLINE: u14,
                padding: u2,
            }),
            ///  data register
            DR: mmio.Mmio(packed struct(u32) {
                ///  Data byte 0
                Byte0: u8,
                ///  Data byte 1
                Byte1: u8,
                ///  Data byte 2
                Byte2: u8,
                ///  Data byte 3
                Byte3: u8,
            }),
        };

        ///  Clock recovery system
        pub const CRS = extern struct {
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  SYNC event OK interrupt enable
                SYNCOKIE: u1,
                ///  SYNC warning interrupt enable
                SYNCWARNIE: u1,
                ///  Synchronization or trimming error interrupt enable
                ERRIE: u1,
                ///  Expected SYNC interrupt enable
                ESYNCIE: u1,
                reserved5: u1,
                ///  Frequency error counter enable
                CEN: u1,
                ///  Automatic trimming enable
                AUTOTRIMEN: u1,
                ///  Generate software SYNC event
                SWSYNC: u1,
                ///  HSI48 oscillator smooth trimming
                TRIM: u6,
                padding: u18,
            }),
            ///  configuration register
            CFGR: mmio.Mmio(packed struct(u32) {
                ///  Counter reload value
                RELOAD: u16,
                ///  Frequency error limit
                FELIM: u8,
                ///  SYNC divider
                SYNCDIV: u3,
                reserved28: u1,
                ///  SYNC signal source selection
                SYNCSRC: u2,
                reserved31: u1,
                ///  SYNC polarity selection
                SYNCPOL: u1,
            }),
            ///  interrupt and status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  SYNC event OK flag
                SYNCOKF: u1,
                ///  SYNC warning flag
                SYNCWARNF: u1,
                ///  Error flag
                ERRF: u1,
                ///  Expected SYNC flag
                ESYNCF: u1,
                reserved8: u4,
                ///  SYNC error
                SYNCERR: u1,
                ///  SYNC missed
                SYNCMISS: u1,
                ///  Trimming overflow or underflow
                TRIMOVF: u1,
                reserved15: u4,
                ///  Frequency error direction
                FEDIR: u1,
                ///  Frequency error capture
                FECAP: u16,
            }),
            ///  interrupt flag clear register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  SYNC event OK clear flag
                SYNCOKC: u1,
                ///  SYNC warning clear flag
                SYNCWARNC: u1,
                ///  Error clear flag
                ERRC: u1,
                ///  Expected SYNC clear flag
                ESYNCC: u1,
                padding: u28,
            }),
        };

        ///  General purpose timers
        pub const TIM15 = extern struct {
            ///  control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Counter enable
                CEN: u1,
                ///  Update disable
                UDIS: u1,
                ///  Update request source
                URS: u1,
                ///  One-pulse mode
                OPM: u1,
                reserved7: u3,
                ///  Auto-reload preload enable
                ARPE: u1,
                ///  Clock division
                CKD: u2,
                reserved11: u1,
                ///  UIF status bit remapping
                UIFREMAP: u1,
                padding: u20,
            }),
            ///  control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                ///  Capture/compare preloaded control
                CCPC: u1,
                reserved2: u1,
                ///  Capture/compare control update selection
                CCUS: u1,
                ///  Capture/compare DMA selection
                CCDS: u1,
                reserved8: u4,
                ///  Output Idle state 1
                OIS1: u1,
                ///  Output Idle state 1
                OIS1N: u1,
                padding: u22,
            }),
            reserved12: [4]u8,
            ///  DMA/Interrupt enable register
            DIER: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt enable
                UIE: u1,
                ///  Capture/Compare 1 interrupt enable
                CC1IE: u1,
                reserved5: u3,
                ///  COM interrupt enable
                COMIE: u1,
                ///  Trigger interrupt enable
                TIE: u1,
                ///  Break interrupt enable
                BIE: u1,
                ///  Update DMA request enable
                UDE: u1,
                ///  Capture/Compare 1 DMA request enable
                CC1DE: u1,
                reserved13: u3,
                ///  COM DMA request enable
                COMDE: u1,
                ///  Trigger DMA request enable
                TDE: u1,
                padding: u17,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt flag
                UIF: u1,
                ///  Capture/compare 1 interrupt flag
                CC1IF: u1,
                reserved5: u3,
                ///  COM interrupt flag
                COMIF: u1,
                ///  Trigger interrupt flag
                TIF: u1,
                ///  Break interrupt flag
                BIF: u1,
                reserved9: u1,
                ///  Capture/Compare 1 overcapture flag
                CC1OF: u1,
                padding: u22,
            }),
            ///  event generation register
            EGR: mmio.Mmio(packed struct(u32) {
                ///  Update generation
                UG: u1,
                ///  Capture/compare 1 generation
                CC1G: u1,
                reserved5: u3,
                ///  Capture/Compare control update generation
                COMG: u1,
                ///  Trigger generation
                TG: u1,
                ///  Break generation
                BG: u1,
                padding: u24,
            }),
            ///  capture/compare mode register (output mode)
            CCMR1_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 selection
                CC1S: u2,
                ///  Output Compare 1 fast enable
                OC1FE: u1,
                ///  Output Compare 1 preload enable
                OC1PE: u1,
                ///  Output Compare 1 mode
                OC1M: u3,
                reserved16: u9,
                ///  Output Compare 1 mode
                OC1M_2: u1,
                padding: u15,
            }),
            reserved32: [4]u8,
            ///  capture/compare enable register
            CCER: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 output enable
                CC1E: u1,
                ///  Capture/Compare 1 output Polarity
                CC1P: u1,
                ///  Capture/Compare 1 complementary output enable
                CC1NE: u1,
                ///  Capture/Compare 1 output Polarity
                CC1NP: u1,
                padding: u28,
            }),
            ///  counter
            CNT: mmio.Mmio(packed struct(u32) {
                ///  counter value
                CNT: u16,
                reserved31: u15,
                ///  UIF Copy
                UIFCPY: u1,
            }),
            ///  prescaler
            PSC: mmio.Mmio(packed struct(u32) {
                ///  Prescaler value
                PSC: u16,
                padding: u16,
            }),
            ///  auto-reload register
            ARR: mmio.Mmio(packed struct(u32) {
                ///  Auto-reload value
                ARR: u16,
                padding: u16,
            }),
            ///  repetition counter register
            RCR: mmio.Mmio(packed struct(u32) {
                ///  Repetition counter value
                REP: u8,
                padding: u24,
            }),
            ///  capture/compare register 1
            CCR1: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 value
                CCR1: u16,
                padding: u16,
            }),
            reserved68: [12]u8,
            ///  break and dead-time register
            BDTR: mmio.Mmio(packed struct(u32) {
                ///  Dead-time generator setup
                DTG: u8,
                ///  Lock configuration
                LOCK: u2,
                ///  Off-state selection for Idle mode
                OSSI: u1,
                ///  Off-state selection for Run mode
                OSSR: u1,
                ///  Break enable
                BKE: u1,
                ///  Break polarity
                BKP: u1,
                ///  Automatic output enable
                AOE: u1,
                ///  Main output enable
                MOE: u1,
                ///  Break filter
                BKF: u4,
                padding: u12,
            }),
            ///  DMA control register
            DCR: mmio.Mmio(packed struct(u32) {
                ///  DMA base address
                DBA: u5,
                reserved8: u3,
                ///  DMA burst length
                DBL: u5,
                padding: u19,
            }),
            ///  DMA address for full transfer
            DMAR: mmio.Mmio(packed struct(u32) {
                ///  DMA register for burst accesses
                DMAB: u16,
                padding: u16,
            }),
        };

        ///  General purpose timers
        pub const TIM16 = extern struct {
            ///  control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Counter enable
                CEN: u1,
                ///  Update disable
                UDIS: u1,
                ///  Update request source
                URS: u1,
                ///  One-pulse mode
                OPM: u1,
                reserved7: u3,
                ///  Auto-reload preload enable
                ARPE: u1,
                ///  Clock division
                CKD: u2,
                reserved11: u1,
                ///  UIF status bit remapping
                UIFREMAP: u1,
                padding: u20,
            }),
            ///  control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                ///  Capture/compare preloaded control
                CCPC: u1,
                reserved2: u1,
                ///  Capture/compare control update selection
                CCUS: u1,
                ///  Capture/compare DMA selection
                CCDS: u1,
                reserved8: u4,
                ///  Output Idle state 1
                OIS1: u1,
                ///  Output Idle state 1
                OIS1N: u1,
                padding: u22,
            }),
            reserved12: [4]u8,
            ///  DMA/Interrupt enable register
            DIER: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt enable
                UIE: u1,
                ///  Capture/Compare 1 interrupt enable
                CC1IE: u1,
                reserved5: u3,
                ///  COM interrupt enable
                COMIE: u1,
                ///  Trigger interrupt enable
                TIE: u1,
                ///  Break interrupt enable
                BIE: u1,
                ///  Update DMA request enable
                UDE: u1,
                ///  Capture/Compare 1 DMA request enable
                CC1DE: u1,
                reserved13: u3,
                ///  COM DMA request enable
                COMDE: u1,
                ///  Trigger DMA request enable
                TDE: u1,
                padding: u17,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt flag
                UIF: u1,
                ///  Capture/compare 1 interrupt flag
                CC1IF: u1,
                reserved5: u3,
                ///  COM interrupt flag
                COMIF: u1,
                ///  Trigger interrupt flag
                TIF: u1,
                ///  Break interrupt flag
                BIF: u1,
                reserved9: u1,
                ///  Capture/Compare 1 overcapture flag
                CC1OF: u1,
                padding: u22,
            }),
            ///  event generation register
            EGR: mmio.Mmio(packed struct(u32) {
                ///  Update generation
                UG: u1,
                ///  Capture/compare 1 generation
                CC1G: u1,
                reserved5: u3,
                ///  Capture/Compare control update generation
                COMG: u1,
                ///  Trigger generation
                TG: u1,
                ///  Break generation
                BG: u1,
                padding: u24,
            }),
            ///  capture/compare mode register (output mode)
            CCMR1_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 selection
                CC1S: u2,
                ///  Output Compare 1 fast enable
                OC1FE: u1,
                ///  Output Compare 1 preload enable
                OC1PE: u1,
                ///  Output Compare 1 mode
                OC1M: u3,
                reserved16: u9,
                ///  Output Compare 1 mode
                OC1M_2: u1,
                padding: u15,
            }),
            reserved32: [4]u8,
            ///  capture/compare enable register
            CCER: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 output enable
                CC1E: u1,
                ///  Capture/Compare 1 output Polarity
                CC1P: u1,
                ///  Capture/Compare 1 complementary output enable
                CC1NE: u1,
                ///  Capture/Compare 1 output Polarity
                CC1NP: u1,
                padding: u28,
            }),
            ///  counter
            CNT: mmio.Mmio(packed struct(u32) {
                ///  counter value
                CNT: u16,
                reserved31: u15,
                ///  UIF Copy
                UIFCPY: u1,
            }),
            ///  prescaler
            PSC: mmio.Mmio(packed struct(u32) {
                ///  Prescaler value
                PSC: u16,
                padding: u16,
            }),
            ///  auto-reload register
            ARR: mmio.Mmio(packed struct(u32) {
                ///  Auto-reload value
                ARR: u16,
                padding: u16,
            }),
            ///  repetition counter register
            RCR: mmio.Mmio(packed struct(u32) {
                ///  Repetition counter value
                REP: u8,
                padding: u24,
            }),
            ///  capture/compare register 1
            CCR1: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 value
                CCR1: u16,
                padding: u16,
            }),
            reserved68: [12]u8,
            ///  break and dead-time register
            BDTR: mmio.Mmio(packed struct(u32) {
                ///  Dead-time generator setup
                DTG: u8,
                ///  Lock configuration
                LOCK: u2,
                ///  Off-state selection for Idle mode
                OSSI: u1,
                ///  Off-state selection for Run mode
                OSSR: u1,
                ///  Break enable
                BKE: u1,
                ///  Break polarity
                BKP: u1,
                ///  Automatic output enable
                AOE: u1,
                ///  Main output enable
                MOE: u1,
                ///  Break filter
                BKF: u4,
                padding: u12,
            }),
            ///  DMA control register
            DCR: mmio.Mmio(packed struct(u32) {
                ///  DMA base address
                DBA: u5,
                reserved8: u3,
                ///  DMA burst length
                DBL: u5,
                padding: u19,
            }),
            ///  DMA address for full transfer
            DMAR: mmio.Mmio(packed struct(u32) {
                ///  DMA register for burst accesses
                DMAB: u16,
                padding: u16,
            }),
            ///  TIM16 option register 1
            OR1: mmio.Mmio(packed struct(u32) {
                ///  Input capture 1 remap
                TI1_RMP: u2,
                padding: u30,
            }),
            reserved96: [12]u8,
            ///  TIM17 option register 1
            OR2: mmio.Mmio(packed struct(u32) {
                ///  BRK BKIN input enable
                BKINE: u1,
                ///  BRK COMP1 enable
                BKCMP1E: u1,
                ///  BRK COMP2 enable
                BKCMP2E: u1,
                reserved8: u5,
                ///  BRK DFSDM_BREAK1 enable
                BKDFBK1E: u1,
                ///  BRK BKIN input polarity
                BKINP: u1,
                ///  BRK COMP1 input polarity
                BKCMP1P: u1,
                ///  BRK COMP2 input polarit
                BKCMP2P: u1,
                padding: u20,
            }),
        };

        ///  Nested Vectored Interrupt Controller
        pub const NVIC = extern struct {
            ///  Interrupt Set-Enable Register
            ISER0: mmio.Mmio(packed struct(u32) {
                ///  SETENA
                SETENA: u32,
            }),
            ///  Interrupt Set-Enable Register
            ISER1: mmio.Mmio(packed struct(u32) {
                ///  SETENA
                SETENA: u32,
            }),
            ///  Interrupt Set-Enable Register
            ISER2: mmio.Mmio(packed struct(u32) {
                ///  SETENA
                SETENA: u32,
            }),
            reserved128: [116]u8,
            ///  Interrupt Clear-Enable Register
            ICER0: mmio.Mmio(packed struct(u32) {
                ///  CLRENA
                CLRENA: u32,
            }),
            ///  Interrupt Clear-Enable Register
            ICER1: mmio.Mmio(packed struct(u32) {
                ///  CLRENA
                CLRENA: u32,
            }),
            ///  Interrupt Clear-Enable Register
            ICER2: mmio.Mmio(packed struct(u32) {
                ///  CLRENA
                CLRENA: u32,
            }),
            reserved256: [116]u8,
            ///  Interrupt Set-Pending Register
            ISPR0: mmio.Mmio(packed struct(u32) {
                ///  SETPEND
                SETPEND: u32,
            }),
            ///  Interrupt Set-Pending Register
            ISPR1: mmio.Mmio(packed struct(u32) {
                ///  SETPEND
                SETPEND: u32,
            }),
            ///  Interrupt Set-Pending Register
            ISPR2: mmio.Mmio(packed struct(u32) {
                ///  SETPEND
                SETPEND: u32,
            }),
            reserved384: [116]u8,
            ///  Interrupt Clear-Pending Register
            ICPR0: mmio.Mmio(packed struct(u32) {
                ///  CLRPEND
                CLRPEND: u32,
            }),
            ///  Interrupt Clear-Pending Register
            ICPR1: mmio.Mmio(packed struct(u32) {
                ///  CLRPEND
                CLRPEND: u32,
            }),
            ///  Interrupt Clear-Pending Register
            ICPR2: mmio.Mmio(packed struct(u32) {
                ///  CLRPEND
                CLRPEND: u32,
            }),
            reserved512: [116]u8,
            ///  Interrupt Active Bit Register
            IABR0: mmio.Mmio(packed struct(u32) {
                ///  ACTIVE
                ACTIVE: u32,
            }),
            ///  Interrupt Active Bit Register
            IABR1: mmio.Mmio(packed struct(u32) {
                ///  ACTIVE
                ACTIVE: u32,
            }),
            ///  Interrupt Active Bit Register
            IABR2: mmio.Mmio(packed struct(u32) {
                ///  ACTIVE
                ACTIVE: u32,
            }),
            reserved768: [244]u8,
            ///  Interrupt Priority Register
            IPR0: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR1: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR2: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR3: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR4: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR5: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR6: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR7: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR8: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR9: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR10: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR11: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR12: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR13: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR14: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR15: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR16: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR17: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR18: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR19: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
            ///  Interrupt Priority Register
            IPR20: mmio.Mmio(packed struct(u32) {
                ///  IPR_N0
                IPR_N0: u8,
                ///  IPR_N1
                IPR_N1: u8,
                ///  IPR_N2
                IPR_N2: u8,
                ///  IPR_N3
                IPR_N3: u8,
            }),
        };

        ///  Advanced-timers
        pub const TIM1 = extern struct {
            ///  control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Counter enable
                CEN: u1,
                ///  Update disable
                UDIS: u1,
                ///  Update request source
                URS: u1,
                ///  One-pulse mode
                OPM: u1,
                ///  Direction
                DIR: u1,
                ///  Center-aligned mode selection
                CMS: u2,
                ///  Auto-reload preload enable
                ARPE: u1,
                ///  Clock division
                CKD: u2,
                padding: u22,
            }),
            ///  control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                ///  Capture/compare preloaded control
                CCPC: u1,
                reserved2: u1,
                ///  Capture/compare control update selection
                CCUS: u1,
                ///  Capture/compare DMA selection
                CCDS: u1,
                ///  Master mode selection
                MMS: u3,
                ///  TI1 selection
                TI1S: u1,
                ///  Output Idle state 1
                OIS1: u1,
                ///  Output Idle state 1
                OIS1N: u1,
                ///  Output Idle state 2
                OIS2: u1,
                ///  Output Idle state 2
                OIS2N: u1,
                ///  Output Idle state 3
                OIS3: u1,
                ///  Output Idle state 3
                OIS3N: u1,
                ///  Output Idle state 4
                OIS4: u1,
                padding: u17,
            }),
            ///  slave mode control register
            SMCR: mmio.Mmio(packed struct(u32) {
                ///  Slave mode selection
                SMS: u3,
                reserved4: u1,
                ///  Trigger selection
                TS: u3,
                ///  Master/Slave mode
                MSM: u1,
                ///  External trigger filter
                ETF: u4,
                ///  External trigger prescaler
                ETPS: u2,
                ///  External clock enable
                ECE: u1,
                ///  External trigger polarity
                ETP: u1,
                padding: u16,
            }),
            ///  DMA/Interrupt enable register
            DIER: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt enable
                UIE: u1,
                ///  Capture/Compare 1 interrupt enable
                CC1IE: u1,
                ///  Capture/Compare 2 interrupt enable
                CC2IE: u1,
                ///  Capture/Compare 3 interrupt enable
                CC3IE: u1,
                ///  Capture/Compare 4 interrupt enable
                CC4IE: u1,
                ///  COM interrupt enable
                COMIE: u1,
                ///  Trigger interrupt enable
                TIE: u1,
                ///  Break interrupt enable
                BIE: u1,
                ///  Update DMA request enable
                UDE: u1,
                ///  Capture/Compare 1 DMA request enable
                CC1DE: u1,
                ///  Capture/Compare 2 DMA request enable
                CC2DE: u1,
                ///  Capture/Compare 3 DMA request enable
                CC3DE: u1,
                ///  Capture/Compare 4 DMA request enable
                CC4DE: u1,
                ///  COM DMA request enable
                COMDE: u1,
                ///  Trigger DMA request enable
                TDE: u1,
                padding: u17,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt flag
                UIF: u1,
                ///  Capture/compare 1 interrupt flag
                CC1IF: u1,
                ///  Capture/Compare 2 interrupt flag
                CC2IF: u1,
                ///  Capture/Compare 3 interrupt flag
                CC3IF: u1,
                ///  Capture/Compare 4 interrupt flag
                CC4IF: u1,
                ///  COM interrupt flag
                COMIF: u1,
                ///  Trigger interrupt flag
                TIF: u1,
                ///  Break interrupt flag
                BIF: u1,
                reserved9: u1,
                ///  Capture/Compare 1 overcapture flag
                CC1OF: u1,
                ///  Capture/compare 2 overcapture flag
                CC2OF: u1,
                ///  Capture/Compare 3 overcapture flag
                CC3OF: u1,
                ///  Capture/Compare 4 overcapture flag
                CC4OF: u1,
                padding: u19,
            }),
            ///  event generation register
            EGR: mmio.Mmio(packed struct(u32) {
                ///  Update generation
                UG: u1,
                ///  Capture/compare 1 generation
                CC1G: u1,
                ///  Capture/compare 2 generation
                CC2G: u1,
                ///  Capture/compare 3 generation
                CC3G: u1,
                ///  Capture/compare 4 generation
                CC4G: u1,
                ///  Capture/Compare control update generation
                COMG: u1,
                ///  Trigger generation
                TG: u1,
                ///  Break generation
                BG: u1,
                padding: u24,
            }),
            ///  capture/compare mode register 1 (output mode)
            CCMR1_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 selection
                CC1S: u2,
                ///  Output Compare 1 fast enable
                OC1FE: u1,
                ///  Output Compare 1 preload enable
                OC1PE: u1,
                ///  Output Compare 1 mode
                OC1M: u3,
                ///  Output Compare 1 clear enable
                OC1CE: u1,
                ///  Capture/Compare 2 selection
                CC2S: u2,
                ///  Output Compare 2 fast enable
                OC2FE: u1,
                ///  Output Compare 2 preload enable
                OC2PE: u1,
                ///  Output Compare 2 mode
                OC2M: u3,
                ///  Output Compare 2 clear enable
                OC2CE: u1,
                padding: u16,
            }),
            ///  capture/compare mode register 2 (output mode)
            CCMR2_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 3 selection
                CC3S: u2,
                ///  Output compare 3 fast enable
                OC3FE: u1,
                ///  Output compare 3 preload enable
                OC3PE: u1,
                ///  Output compare 3 mode
                OC3M: u3,
                ///  Output compare 3 clear enable
                OC3CE: u1,
                ///  Capture/Compare 4 selection
                CC4S: u2,
                ///  Output compare 4 fast enable
                OC4FE: u1,
                ///  Output compare 4 preload enable
                OC4PE: u1,
                ///  Output compare 4 mode
                OC4M: u3,
                ///  Output compare 4 clear enable
                OC4CE: u1,
                padding: u16,
            }),
            ///  capture/compare enable register
            CCER: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 output enable
                CC1E: u1,
                ///  Capture/Compare 1 output Polarity
                CC1P: u1,
                ///  Capture/Compare 1 complementary output enable
                CC1NE: u1,
                ///  Capture/Compare 1 output Polarity
                CC1NP: u1,
                ///  Capture/Compare 2 output enable
                CC2E: u1,
                ///  Capture/Compare 2 output Polarity
                CC2P: u1,
                ///  Capture/Compare 2 complementary output enable
                CC2NE: u1,
                ///  Capture/Compare 2 output Polarity
                CC2NP: u1,
                ///  Capture/Compare 3 output enable
                CC3E: u1,
                ///  Capture/Compare 3 output Polarity
                CC3P: u1,
                ///  Capture/Compare 3 complementary output enable
                CC3NE: u1,
                ///  Capture/Compare 3 output Polarity
                CC3NP: u1,
                ///  Capture/Compare 4 output enable
                CC4E: u1,
                ///  Capture/Compare 3 output Polarity
                CC4P: u1,
                padding: u18,
            }),
            ///  counter
            CNT: mmio.Mmio(packed struct(u32) {
                ///  counter value
                CNT: u16,
                padding: u16,
            }),
            ///  prescaler
            PSC: mmio.Mmio(packed struct(u32) {
                ///  Prescaler value
                PSC: u16,
                padding: u16,
            }),
            ///  auto-reload register
            ARR: mmio.Mmio(packed struct(u32) {
                ///  Auto-reload value
                ARR: u16,
                padding: u16,
            }),
            ///  repetition counter register
            RCR: mmio.Mmio(packed struct(u32) {
                ///  Repetition counter value
                REP: u8,
                padding: u24,
            }),
            ///  capture/compare register 1
            CCR1: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 value
                CCR1: u16,
                padding: u16,
            }),
            ///  capture/compare register 2
            CCR2: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 2 value
                CCR2: u16,
                padding: u16,
            }),
            ///  capture/compare register 3
            CCR3: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR3: u16,
                padding: u16,
            }),
            ///  capture/compare register 4
            CCR4: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR4: u16,
                padding: u16,
            }),
            ///  break and dead-time register
            BDTR: mmio.Mmio(packed struct(u32) {
                ///  Dead-time generator setup
                DTG: u8,
                ///  Lock configuration
                LOCK: u2,
                ///  Off-state selection for Idle mode
                OSSI: u1,
                ///  Off-state selection for Run mode
                OSSR: u1,
                ///  Break enable
                BKE: u1,
                ///  Break polarity
                BKP: u1,
                ///  Automatic output enable
                AOE: u1,
                ///  Main output enable
                MOE: u1,
                padding: u16,
            }),
            ///  DMA control register
            DCR: mmio.Mmio(packed struct(u32) {
                ///  DMA base address
                DBA: u5,
                reserved8: u3,
                ///  DMA burst length
                DBL: u5,
                padding: u19,
            }),
            ///  DMA address for full transfer
            DMAR: mmio.Mmio(packed struct(u32) {
                ///  DMA register for burst accesses
                DMAB: u16,
                padding: u16,
            }),
            ///  DMA address for full transfer
            OR1: mmio.Mmio(packed struct(u32) {
                ///  External trigger remap on ADC1 analog watchdog
                ETR_ADC1_RMP: u2,
                ///  External trigger remap on ADC3 analog watchdog
                ETR_ADC3_RMP: u2,
                ///  Input Capture 1 remap
                TI1_RMP: u1,
                padding: u27,
            }),
            ///  capture/compare mode register 2 (output mode)
            CCMR3_Output: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Output compare 5 fast enable
                OC5FE: u1,
                ///  Output compare 5 preload enable
                OC5PE: u1,
                ///  Output compare 5 mode
                OC5M: u3,
                ///  Output compare 5 clear enable
                OC5CE: u1,
                reserved10: u2,
                ///  Output compare 6 fast enable
                OC6FE: u1,
                ///  Output compare 6 preload enable
                OC6PE: u1,
                ///  Output compare 6 mode
                OC6M: u3,
                ///  Output compare 6 clear enable
                OC6CE: u1,
                ///  Output Compare 5 mode bit 3
                OC5M_bit3: u3,
                reserved24: u5,
                ///  Output Compare 6 mode bit 3
                OC6M_bit3: u1,
                padding: u7,
            }),
            ///  capture/compare register 4
            CCR5: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR5: u16,
                reserved29: u13,
                ///  Group Channel 5 and Channel 1
                GC5C1: u1,
                ///  Group Channel 5 and Channel 2
                GC5C2: u1,
                ///  Group Channel 5 and Channel 3
                GC5C3: u1,
            }),
            ///  capture/compare register 4
            CCR6: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR6: u16,
                padding: u16,
            }),
            ///  DMA address for full transfer
            OR2: mmio.Mmio(packed struct(u32) {
                ///  BRK BKIN input enable
                BKINE: u1,
                ///  BRK COMP1 enable
                BKCMP1E: u1,
                ///  BRK COMP2 enable
                BKCMP2E: u1,
                reserved8: u5,
                ///  BRK DFSDM_BREAK0 enable
                BKDFBK0E: u1,
                ///  BRK BKIN input polarity
                BKINP: u1,
                ///  BRK COMP1 input polarity
                BKCMP1P: u1,
                ///  BRK COMP2 input polarity
                BKCMP2P: u1,
                reserved14: u2,
                ///  ETR source selection
                ETRSEL: u3,
                padding: u15,
            }),
            ///  DMA address for full transfer
            OR3: mmio.Mmio(packed struct(u32) {
                ///  BRK2 BKIN input enable
                BK2INE: u1,
                ///  BRK2 COMP1 enable
                BK2CMP1E: u1,
                ///  BRK2 COMP2 enable
                BK2CMP2E: u1,
                reserved8: u5,
                ///  BRK2 DFSDM_BREAK0 enable
                BK2DFBK0E: u1,
                ///  BRK2 BKIN input polarity
                BK2INP: u1,
                ///  BRK2 COMP1 input polarity
                BK2CMP1P: u1,
                ///  BRK2 COMP2 input polarity
                BK2CMP2P: u1,
                padding: u20,
            }),
        };

        ///  Advanced-timers
        pub const TIM8 = extern struct {
            ///  control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Counter enable
                CEN: u1,
                ///  Update disable
                UDIS: u1,
                ///  Update request source
                URS: u1,
                ///  One-pulse mode
                OPM: u1,
                ///  Direction
                DIR: u1,
                ///  Center-aligned mode selection
                CMS: u2,
                ///  Auto-reload preload enable
                ARPE: u1,
                ///  Clock division
                CKD: u2,
                padding: u22,
            }),
            ///  control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                ///  Capture/compare preloaded control
                CCPC: u1,
                reserved2: u1,
                ///  Capture/compare control update selection
                CCUS: u1,
                ///  Capture/compare DMA selection
                CCDS: u1,
                ///  Master mode selection
                MMS: u3,
                ///  TI1 selection
                TI1S: u1,
                ///  Output Idle state 1
                OIS1: u1,
                ///  Output Idle state 1
                OIS1N: u1,
                ///  Output Idle state 2
                OIS2: u1,
                ///  Output Idle state 2
                OIS2N: u1,
                ///  Output Idle state 3
                OIS3: u1,
                ///  Output Idle state 3
                OIS3N: u1,
                ///  Output Idle state 4
                OIS4: u1,
                padding: u17,
            }),
            ///  slave mode control register
            SMCR: mmio.Mmio(packed struct(u32) {
                ///  Slave mode selection
                SMS: u3,
                reserved4: u1,
                ///  Trigger selection
                TS: u3,
                ///  Master/Slave mode
                MSM: u1,
                ///  External trigger filter
                ETF: u4,
                ///  External trigger prescaler
                ETPS: u2,
                ///  External clock enable
                ECE: u1,
                ///  External trigger polarity
                ETP: u1,
                padding: u16,
            }),
            ///  DMA/Interrupt enable register
            DIER: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt enable
                UIE: u1,
                ///  Capture/Compare 1 interrupt enable
                CC1IE: u1,
                ///  Capture/Compare 2 interrupt enable
                CC2IE: u1,
                ///  Capture/Compare 3 interrupt enable
                CC3IE: u1,
                ///  Capture/Compare 4 interrupt enable
                CC4IE: u1,
                ///  COM interrupt enable
                COMIE: u1,
                ///  Trigger interrupt enable
                TIE: u1,
                ///  Break interrupt enable
                BIE: u1,
                ///  Update DMA request enable
                UDE: u1,
                ///  Capture/Compare 1 DMA request enable
                CC1DE: u1,
                ///  Capture/Compare 2 DMA request enable
                CC2DE: u1,
                ///  Capture/Compare 3 DMA request enable
                CC3DE: u1,
                ///  Capture/Compare 4 DMA request enable
                CC4DE: u1,
                ///  COM DMA request enable
                COMDE: u1,
                ///  Trigger DMA request enable
                TDE: u1,
                padding: u17,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt flag
                UIF: u1,
                ///  Capture/compare 1 interrupt flag
                CC1IF: u1,
                ///  Capture/Compare 2 interrupt flag
                CC2IF: u1,
                ///  Capture/Compare 3 interrupt flag
                CC3IF: u1,
                ///  Capture/Compare 4 interrupt flag
                CC4IF: u1,
                ///  COM interrupt flag
                COMIF: u1,
                ///  Trigger interrupt flag
                TIF: u1,
                ///  Break interrupt flag
                BIF: u1,
                reserved9: u1,
                ///  Capture/Compare 1 overcapture flag
                CC1OF: u1,
                ///  Capture/compare 2 overcapture flag
                CC2OF: u1,
                ///  Capture/Compare 3 overcapture flag
                CC3OF: u1,
                ///  Capture/Compare 4 overcapture flag
                CC4OF: u1,
                padding: u19,
            }),
            ///  event generation register
            EGR: mmio.Mmio(packed struct(u32) {
                ///  Update generation
                UG: u1,
                ///  Capture/compare 1 generation
                CC1G: u1,
                ///  Capture/compare 2 generation
                CC2G: u1,
                ///  Capture/compare 3 generation
                CC3G: u1,
                ///  Capture/compare 4 generation
                CC4G: u1,
                ///  Capture/Compare control update generation
                COMG: u1,
                ///  Trigger generation
                TG: u1,
                ///  Break generation
                BG: u1,
                padding: u24,
            }),
            ///  capture/compare mode register 1 (output mode)
            CCMR1_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 selection
                CC1S: u2,
                ///  Output Compare 1 fast enable
                OC1FE: u1,
                ///  Output Compare 1 preload enable
                OC1PE: u1,
                ///  Output Compare 1 mode
                OC1M: u3,
                ///  Output Compare 1 clear enable
                OC1CE: u1,
                ///  Capture/Compare 2 selection
                CC2S: u2,
                ///  Output Compare 2 fast enable
                OC2FE: u1,
                ///  Output Compare 2 preload enable
                OC2PE: u1,
                ///  Output Compare 2 mode
                OC2M: u3,
                ///  Output Compare 2 clear enable
                OC2CE: u1,
                padding: u16,
            }),
            ///  capture/compare mode register 2 (output mode)
            CCMR2_Output: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 3 selection
                CC3S: u2,
                ///  Output compare 3 fast enable
                OC3FE: u1,
                ///  Output compare 3 preload enable
                OC3PE: u1,
                ///  Output compare 3 mode
                OC3M: u3,
                ///  Output compare 3 clear enable
                OC3CE: u1,
                ///  Capture/Compare 4 selection
                CC4S: u2,
                ///  Output compare 4 fast enable
                OC4FE: u1,
                ///  Output compare 4 preload enable
                OC4PE: u1,
                ///  Output compare 4 mode
                OC4M: u3,
                ///  Output compare 4 clear enable
                OC4CE: u1,
                padding: u16,
            }),
            ///  capture/compare enable register
            CCER: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 output enable
                CC1E: u1,
                ///  Capture/Compare 1 output Polarity
                CC1P: u1,
                ///  Capture/Compare 1 complementary output enable
                CC1NE: u1,
                ///  Capture/Compare 1 output Polarity
                CC1NP: u1,
                ///  Capture/Compare 2 output enable
                CC2E: u1,
                ///  Capture/Compare 2 output Polarity
                CC2P: u1,
                ///  Capture/Compare 2 complementary output enable
                CC2NE: u1,
                ///  Capture/Compare 2 output Polarity
                CC2NP: u1,
                ///  Capture/Compare 3 output enable
                CC3E: u1,
                ///  Capture/Compare 3 output Polarity
                CC3P: u1,
                ///  Capture/Compare 3 complementary output enable
                CC3NE: u1,
                ///  Capture/Compare 3 output Polarity
                CC3NP: u1,
                ///  Capture/Compare 4 output enable
                CC4E: u1,
                ///  Capture/Compare 3 output Polarity
                CC4P: u1,
                padding: u18,
            }),
            ///  counter
            CNT: mmio.Mmio(packed struct(u32) {
                ///  counter value
                CNT: u16,
                padding: u16,
            }),
            ///  prescaler
            PSC: mmio.Mmio(packed struct(u32) {
                ///  Prescaler value
                PSC: u16,
                padding: u16,
            }),
            ///  auto-reload register
            ARR: mmio.Mmio(packed struct(u32) {
                ///  Auto-reload value
                ARR: u16,
                padding: u16,
            }),
            ///  repetition counter register
            RCR: mmio.Mmio(packed struct(u32) {
                ///  Repetition counter value
                REP: u8,
                padding: u24,
            }),
            ///  capture/compare register 1
            CCR1: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 1 value
                CCR1: u16,
                padding: u16,
            }),
            ///  capture/compare register 2
            CCR2: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare 2 value
                CCR2: u16,
                padding: u16,
            }),
            ///  capture/compare register 3
            CCR3: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR3: u16,
                padding: u16,
            }),
            ///  capture/compare register 4
            CCR4: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR4: u16,
                padding: u16,
            }),
            ///  break and dead-time register
            BDTR: mmio.Mmio(packed struct(u32) {
                ///  Dead-time generator setup
                DTG: u8,
                ///  Lock configuration
                LOCK: u2,
                ///  Off-state selection for Idle mode
                OSSI: u1,
                ///  Off-state selection for Run mode
                OSSR: u1,
                ///  Break enable
                BKE: u1,
                ///  Break polarity
                BKP: u1,
                ///  Automatic output enable
                AOE: u1,
                ///  Main output enable
                MOE: u1,
                padding: u16,
            }),
            ///  DMA control register
            DCR: mmio.Mmio(packed struct(u32) {
                ///  DMA base address
                DBA: u5,
                reserved8: u3,
                ///  DMA burst length
                DBL: u5,
                padding: u19,
            }),
            ///  DMA address for full transfer
            DMAR: mmio.Mmio(packed struct(u32) {
                ///  DMA register for burst accesses
                DMAB: u16,
                padding: u16,
            }),
            ///  DMA address for full transfer
            OR1: mmio.Mmio(packed struct(u32) {
                ///  External trigger remap on ADC2 analog watchdog
                ETR_ADC2_RMP: u2,
                ///  External trigger remap on ADC3 analog watchdog
                ETR_ADC3_RMP: u2,
                ///  Input Capture 1 remap
                TI1_RMP: u1,
                padding: u27,
            }),
            ///  capture/compare mode register 2 (output mode)
            CCMR3_Output: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Output compare 5 fast enable
                OC5FE: u1,
                ///  Output compare 5 preload enable
                OC5PE: u1,
                ///  Output compare 5 mode
                OC5M: u3,
                ///  Output compare 5 clear enable
                OC5CE: u1,
                reserved10: u2,
                ///  Output compare 6 fast enable
                OC6FE: u1,
                ///  Output compare 6 preload enable
                OC6PE: u1,
                ///  Output compare 6 mode
                OC6M: u3,
                ///  Output compare 6 clear enable
                OC6CE: u1,
                ///  Output Compare 5 mode bit 3
                OC5M_bit3: u3,
                reserved24: u5,
                ///  Output Compare 6 mode bit 3
                OC6M_bit3: u1,
                padding: u7,
            }),
            ///  capture/compare register 4
            CCR5: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR5: u16,
                reserved29: u13,
                ///  Group Channel 5 and Channel 1
                GC5C1: u1,
                ///  Group Channel 5 and Channel 2
                GC5C2: u1,
                ///  Group Channel 5 and Channel 3
                GC5C3: u1,
            }),
            ///  capture/compare register 4
            CCR6: mmio.Mmio(packed struct(u32) {
                ///  Capture/Compare value
                CCR6: u16,
                padding: u16,
            }),
            ///  DMA address for full transfer
            OR2: mmio.Mmio(packed struct(u32) {
                ///  BRK BKIN input enable
                BKINE: u1,
                ///  BRK COMP1 enable
                BKCMP1E: u1,
                ///  BRK COMP2 enable
                BKCMP2E: u1,
                reserved8: u5,
                ///  BRK DFSDM_BREAK2 enable
                BKDFBK2E: u1,
                ///  BRK BKIN input polarity
                BKINP: u1,
                ///  BRK COMP1 input polarity
                BKCMP1P: u1,
                ///  BRK COMP2 input polarity
                BKCMP2P: u1,
                reserved14: u2,
                ///  ETR source selection
                ETRSEL: u3,
                padding: u15,
            }),
            ///  DMA address for full transfer
            OR3: mmio.Mmio(packed struct(u32) {
                ///  BRK2 BKIN input enable
                BK2INE: u1,
                ///  BRK2 COMP1 enable
                BK2CMP1E: u1,
                ///  BRK2 COMP2 enable
                BK2CMP2E: u1,
                reserved8: u5,
                ///  BRK2 DFSDM_BREAK3 enable
                BK2DFBK3E: u1,
                ///  BRK2 BKIN input polarity
                BK2INP: u1,
                ///  BRK2 COMP1 input polarity
                BK2CMP1P: u1,
                ///  BRK2 COMP2 input polarity
                BK2CMP2P: u1,
                padding: u20,
            }),
        };

        ///  Basic-timers
        pub const TIM6 = extern struct {
            ///  control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Counter enable
                CEN: u1,
                ///  Update disable
                UDIS: u1,
                ///  Update request source
                URS: u1,
                ///  One-pulse mode
                OPM: u1,
                reserved7: u3,
                ///  Auto-reload preload enable
                ARPE: u1,
                padding: u24,
            }),
            ///  control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  Master mode selection
                MMS: u3,
                padding: u25,
            }),
            reserved12: [4]u8,
            ///  DMA/Interrupt enable register
            DIER: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt enable
                UIE: u1,
                reserved8: u7,
                ///  Update DMA request enable
                UDE: u1,
                padding: u23,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Update interrupt flag
                UIF: u1,
                padding: u31,
            }),
            ///  event generation register
            EGR: mmio.Mmio(packed struct(u32) {
                ///  Update generation
                UG: u1,
                padding: u31,
            }),
            reserved36: [12]u8,
            ///  counter
            CNT: mmio.Mmio(packed struct(u32) {
                ///  Low counter value
                CNT: u16,
                padding: u16,
            }),
            ///  prescaler
            PSC: mmio.Mmio(packed struct(u32) {
                ///  Prescaler value
                PSC: u16,
                padding: u16,
            }),
            ///  auto-reload register
            ARR: mmio.Mmio(packed struct(u32) {
                ///  Low Auto-reload value
                ARR: u16,
                padding: u16,
            }),
        };

        ///  Flexible memory controller
        pub const FMC = extern struct {
            ///  SRAM/NOR-Flash chip-select control register 1
            BCR1: mmio.Mmio(packed struct(u32) {
                ///  MBKEN
                MBKEN: u1,
                ///  MUXEN
                MUXEN: u1,
                ///  MTYP
                MTYP: u2,
                ///  MWID
                MWID: u2,
                ///  FACCEN
                FACCEN: u1,
                reserved8: u1,
                ///  BURSTEN
                BURSTEN: u1,
                ///  WAITPOL
                WAITPOL: u1,
                reserved11: u1,
                ///  WAITCFG
                WAITCFG: u1,
                ///  WREN
                WREN: u1,
                ///  WAITEN
                WAITEN: u1,
                ///  EXTMOD
                EXTMOD: u1,
                ///  ASYNCWAIT
                ASYNCWAIT: u1,
                reserved19: u3,
                ///  CBURSTRW
                CBURSTRW: u1,
                ///  CCLKEN
                CCLKEN: u1,
                ///  Write FIFO Disable
                WFDIS: u1,
                padding: u10,
            }),
            ///  SRAM/NOR-Flash chip-select timing register 1
            BTR1: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                ///  BUSTURN
                BUSTURN: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
            ///  SRAM/NOR-Flash chip-select control register 2
            BCR2: mmio.Mmio(packed struct(u32) {
                ///  MBKEN
                MBKEN: u1,
                ///  MUXEN
                MUXEN: u1,
                ///  MTYP
                MTYP: u2,
                ///  MWID
                MWID: u2,
                ///  FACCEN
                FACCEN: u1,
                reserved8: u1,
                ///  BURSTEN
                BURSTEN: u1,
                ///  WAITPOL
                WAITPOL: u1,
                ///  WRAPMOD
                WRAPMOD: u1,
                ///  WAITCFG
                WAITCFG: u1,
                ///  WREN
                WREN: u1,
                ///  WAITEN
                WAITEN: u1,
                ///  EXTMOD
                EXTMOD: u1,
                ///  ASYNCWAIT
                ASYNCWAIT: u1,
                reserved19: u3,
                ///  CBURSTRW
                CBURSTRW: u1,
                padding: u12,
            }),
            ///  SRAM/NOR-Flash chip-select timing register 2
            BTR2: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                ///  BUSTURN
                BUSTURN: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
            ///  SRAM/NOR-Flash chip-select control register 3
            BCR3: mmio.Mmio(packed struct(u32) {
                ///  MBKEN
                MBKEN: u1,
                ///  MUXEN
                MUXEN: u1,
                ///  MTYP
                MTYP: u2,
                ///  MWID
                MWID: u2,
                ///  FACCEN
                FACCEN: u1,
                reserved8: u1,
                ///  BURSTEN
                BURSTEN: u1,
                ///  WAITPOL
                WAITPOL: u1,
                ///  WRAPMOD
                WRAPMOD: u1,
                ///  WAITCFG
                WAITCFG: u1,
                ///  WREN
                WREN: u1,
                ///  WAITEN
                WAITEN: u1,
                ///  EXTMOD
                EXTMOD: u1,
                ///  ASYNCWAIT
                ASYNCWAIT: u1,
                reserved19: u3,
                ///  CBURSTRW
                CBURSTRW: u1,
                padding: u12,
            }),
            ///  SRAM/NOR-Flash chip-select timing register 3
            BTR3: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                ///  BUSTURN
                BUSTURN: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
            ///  SRAM/NOR-Flash chip-select control register 4
            BCR4: mmio.Mmio(packed struct(u32) {
                ///  MBKEN
                MBKEN: u1,
                ///  MUXEN
                MUXEN: u1,
                ///  MTYP
                MTYP: u2,
                ///  MWID
                MWID: u2,
                ///  FACCEN
                FACCEN: u1,
                reserved8: u1,
                ///  BURSTEN
                BURSTEN: u1,
                ///  WAITPOL
                WAITPOL: u1,
                ///  WRAPMOD
                WRAPMOD: u1,
                ///  WAITCFG
                WAITCFG: u1,
                ///  WREN
                WREN: u1,
                ///  WAITEN
                WAITEN: u1,
                ///  EXTMOD
                EXTMOD: u1,
                ///  ASYNCWAIT
                ASYNCWAIT: u1,
                reserved19: u3,
                ///  CBURSTRW
                CBURSTRW: u1,
                padding: u12,
            }),
            ///  SRAM/NOR-Flash chip-select timing register 4
            BTR4: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                ///  BUSTURN
                BUSTURN: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
            reserved128: [96]u8,
            ///  PC Card/NAND Flash control register 3
            PCR: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  PWAITEN
                PWAITEN: u1,
                ///  PBKEN
                PBKEN: u1,
                ///  PTYP
                PTYP: u1,
                ///  PWID
                PWID: u2,
                ///  ECCEN
                ECCEN: u1,
                reserved9: u2,
                ///  TCLR
                TCLR: u4,
                ///  TAR
                TAR: u4,
                ///  ECCPS
                ECCPS: u3,
                padding: u12,
            }),
            ///  FIFO status and interrupt register 3
            SR: mmio.Mmio(packed struct(u32) {
                ///  IRS
                IRS: u1,
                ///  ILS
                ILS: u1,
                ///  IFS
                IFS: u1,
                ///  IREN
                IREN: u1,
                ///  ILEN
                ILEN: u1,
                ///  IFEN
                IFEN: u1,
                ///  FEMPT
                FEMPT: u1,
                padding: u25,
            }),
            ///  Common memory space timing register 3
            PMEM: mmio.Mmio(packed struct(u32) {
                ///  MEMSETx
                MEMSETx: u8,
                ///  MEMWAITx
                MEMWAITx: u8,
                ///  MEMHOLDx
                MEMHOLDx: u8,
                ///  MEMHIZx
                MEMHIZx: u8,
            }),
            ///  Attribute memory space timing register 3
            PATT: mmio.Mmio(packed struct(u32) {
                ///  ATTSETx
                ATTSETx: u8,
                ///  ATTWAITx
                ATTWAITx: u8,
                ///  ATTHOLDx
                ATTHOLDx: u8,
                ///  ATTHIZx
                ATTHIZx: u8,
            }),
            reserved148: [4]u8,
            ///  ECC result register 3
            ECCR: mmio.Mmio(packed struct(u32) {
                ///  ECCx
                ECCx: u32,
            }),
            reserved260: [108]u8,
            ///  SRAM/NOR-Flash write timing registers 1
            BWTR1: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                reserved20: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
            reserved268: [4]u8,
            ///  SRAM/NOR-Flash write timing registers 2
            BWTR2: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                reserved20: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
            reserved276: [4]u8,
            ///  SRAM/NOR-Flash write timing registers 3
            BWTR3: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                reserved20: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
            reserved284: [4]u8,
            ///  SRAM/NOR-Flash write timing registers 4
            BWTR4: mmio.Mmio(packed struct(u32) {
                ///  ADDSET
                ADDSET: u4,
                ///  ADDHLD
                ADDHLD: u4,
                ///  DATAST
                DATAST: u8,
                reserved20: u4,
                ///  CLKDIV
                CLKDIV: u4,
                ///  DATLAT
                DATLAT: u4,
                ///  ACCMOD
                ACCMOD: u2,
                padding: u2,
            }),
        };

        ///  Low power timer
        pub const LPTIM1 = extern struct {
            ///  Interrupt and Status Register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  Compare match
                CMPM: u1,
                ///  Autoreload match
                ARRM: u1,
                ///  External trigger edge event
                EXTTRIG: u1,
                ///  Compare register update OK
                CMPOK: u1,
                ///  Autoreload register update OK
                ARROK: u1,
                ///  Counter direction change down to up
                UP: u1,
                ///  Counter direction change up to down
                DOWN: u1,
                padding: u25,
            }),
            ///  Interrupt Clear Register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  compare match Clear Flag
                CMPMCF: u1,
                ///  Autoreload match Clear Flag
                ARRMCF: u1,
                ///  External trigger valid edge Clear Flag
                EXTTRIGCF: u1,
                ///  Compare register update OK Clear Flag
                CMPOKCF: u1,
                ///  Autoreload register update OK Clear Flag
                ARROKCF: u1,
                ///  Direction change to UP Clear Flag
                UPCF: u1,
                ///  Direction change to down Clear Flag
                DOWNCF: u1,
                padding: u25,
            }),
            ///  Interrupt Enable Register
            IER: mmio.Mmio(packed struct(u32) {
                ///  Compare match Interrupt Enable
                CMPMIE: u1,
                ///  Autoreload match Interrupt Enable
                ARRMIE: u1,
                ///  External trigger valid edge Interrupt Enable
                EXTTRIGIE: u1,
                ///  Compare register update OK Interrupt Enable
                CMPOKIE: u1,
                ///  Autoreload register update OK Interrupt Enable
                ARROKIE: u1,
                ///  Direction change to UP Interrupt Enable
                UPIE: u1,
                ///  Direction change to down Interrupt Enable
                DOWNIE: u1,
                padding: u25,
            }),
            ///  Configuration Register
            CFGR: mmio.Mmio(packed struct(u32) {
                ///  Clock selector
                CKSEL: u1,
                ///  Clock Polarity
                CKPOL: u2,
                ///  Configurable digital filter for external clock
                CKFLT: u2,
                reserved6: u1,
                ///  Configurable digital filter for trigger
                TRGFLT: u2,
                reserved9: u1,
                ///  Clock prescaler
                PRESC: u3,
                reserved13: u1,
                ///  Trigger selector
                TRIGSEL: u3,
                reserved17: u1,
                ///  Trigger enable and polarity
                TRIGEN: u2,
                ///  Timeout enable
                TIMOUT: u1,
                ///  Waveform shape
                WAVE: u1,
                ///  Waveform shape polarity
                WAVPOL: u1,
                ///  Registers update mode
                PRELOAD: u1,
                ///  counter mode enabled
                COUNTMODE: u1,
                ///  Encoder mode enable
                ENC: u1,
                padding: u7,
            }),
            ///  Control Register
            CR: mmio.Mmio(packed struct(u32) {
                ///  LPTIM Enable
                ENABLE: u1,
                ///  LPTIM start in single mode
                SNGSTRT: u1,
                ///  Timer start in continuous mode
                CNTSTRT: u1,
                padding: u29,
            }),
            ///  Compare Register
            CMP: mmio.Mmio(packed struct(u32) {
                ///  Compare value
                CMP: u16,
                padding: u16,
            }),
            ///  Autoreload Register
            ARR: mmio.Mmio(packed struct(u32) {
                ///  Auto reload value
                ARR: u16,
                padding: u16,
            }),
            ///  Counter Register
            CNT: mmio.Mmio(packed struct(u32) {
                ///  Counter value
                CNT: u16,
                padding: u16,
            }),
        };

        ///  Operational amplifiers
        pub const OPAMP = extern struct {
            ///  OPAMP1 control/status register
            OPAMP1_CSR: mmio.Mmio(packed struct(u32) {
                ///  Operational amplifier Enable
                OPAEN: u1,
                ///  Operational amplifier Low Power Mode
                OPALPM: u1,
                ///  Operational amplifier PGA mode
                OPAMODE: u2,
                ///  Operational amplifier Programmable amplifier gain value
                PGA_GAIN: u2,
                reserved8: u2,
                ///  Inverting input selection
                VM_SEL: u2,
                ///  Non inverted input selection
                VP_SEL: u1,
                reserved12: u1,
                ///  Calibration mode enabled
                CALON: u1,
                ///  Calibration selection
                CALSEL: u1,
                ///  allows to switch from AOP offset trimmed values to AOP offset
                USERTRIM: u1,
                ///  Operational amplifier calibration output
                CALOUT: u1,
                reserved31: u15,
                ///  Operational amplifier power supply range for stability
                OPA_RANGE: u1,
            }),
            ///  OPAMP1 offset trimming register in normal mode
            OPAMP1_OTR: mmio.Mmio(packed struct(u32) {
                ///  Trim for NMOS differential pairs
                TRIMOFFSETN: u5,
                reserved8: u3,
                ///  Trim for PMOS differential pairs
                TRIMOFFSETP: u5,
                padding: u19,
            }),
            ///  OPAMP1 offset trimming register in low-power mode
            OPAMP1_LPOTR: mmio.Mmio(packed struct(u32) {
                ///  Trim for NMOS differential pairs
                TRIMLPOFFSETN: u5,
                reserved8: u3,
                ///  Trim for PMOS differential pairs
                TRIMLPOFFSETP: u5,
                padding: u19,
            }),
            reserved16: [4]u8,
            ///  OPAMP2 control/status register
            OPAMP2_CSR: mmio.Mmio(packed struct(u32) {
                ///  Operational amplifier Enable
                OPAEN: u1,
                ///  Operational amplifier Low Power Mode
                OPALPM: u1,
                ///  Operational amplifier PGA mode
                OPAMODE: u2,
                ///  Operational amplifier Programmable amplifier gain value
                PGA_GAIN: u2,
                reserved8: u2,
                ///  Inverting input selection
                VM_SEL: u2,
                ///  Non inverted input selection
                VP_SEL: u1,
                reserved12: u1,
                ///  Calibration mode enabled
                CALON: u1,
                ///  Calibration selection
                CALSEL: u1,
                ///  allows to switch from AOP offset trimmed values to AOP offset
                USERTRIM: u1,
                ///  Operational amplifier calibration output
                CALOUT: u1,
                padding: u16,
            }),
            ///  OPAMP2 offset trimming register in normal mode
            OPAMP2_OTR: mmio.Mmio(packed struct(u32) {
                ///  Trim for NMOS differential pairs
                TRIMOFFSETN: u5,
                reserved8: u3,
                ///  Trim for PMOS differential pairs
                TRIMOFFSETP: u5,
                padding: u19,
            }),
            ///  OPAMP2 offset trimming register in low-power mode
            OPAMP2_LPOTR: mmio.Mmio(packed struct(u32) {
                ///  Trim for NMOS differential pairs
                TRIMLPOFFSETN: u5,
                reserved8: u3,
                ///  Trim for PMOS differential pairs
                TRIMLPOFFSETP: u5,
                padding: u19,
            }),
        };

        ///  Universal synchronous asynchronous receiver transmitter
        pub const USART1 = extern struct {
            ///  Control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  USART enable
                UE: u1,
                ///  USART enable in Stop mode
                UESM: u1,
                ///  Receiver enable
                RE: u1,
                ///  Transmitter enable
                TE: u1,
                ///  IDLE interrupt enable
                IDLEIE: u1,
                ///  RXNE interrupt enable
                RXNEIE: u1,
                ///  Transmission complete interrupt enable
                TCIE: u1,
                ///  interrupt enable
                TXEIE: u1,
                ///  PE interrupt enable
                PEIE: u1,
                ///  Parity selection
                PS: u1,
                ///  Parity control enable
                PCE: u1,
                ///  Receiver wakeup method
                WAKE: u1,
                ///  Word length
                M0: u1,
                ///  Mute mode enable
                MME: u1,
                ///  Character match interrupt enable
                CMIE: u1,
                ///  Oversampling mode
                OVER8: u1,
                ///  DEDT0
                DEDT0: u1,
                ///  DEDT1
                DEDT1: u1,
                ///  DEDT2
                DEDT2: u1,
                ///  DEDT3
                DEDT3: u1,
                ///  Driver Enable de-assertion time
                DEDT4: u1,
                ///  DEAT0
                DEAT0: u1,
                ///  DEAT1
                DEAT1: u1,
                ///  DEAT2
                DEAT2: u1,
                ///  DEAT3
                DEAT3: u1,
                ///  Driver Enable assertion time
                DEAT4: u1,
                ///  Receiver timeout interrupt enable
                RTOIE: u1,
                ///  End of Block interrupt enable
                EOBIE: u1,
                ///  Word length
                M1: u1,
                padding: u3,
            }),
            ///  Control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  7-bit Address Detection/4-bit Address Detection
                ADDM7: u1,
                ///  LIN break detection length
                LBDL: u1,
                ///  LIN break detection interrupt enable
                LBDIE: u1,
                reserved8: u1,
                ///  Last bit clock pulse
                LBCL: u1,
                ///  Clock phase
                CPHA: u1,
                ///  Clock polarity
                CPOL: u1,
                ///  Clock enable
                CLKEN: u1,
                ///  STOP bits
                STOP: u2,
                ///  LIN mode enable
                LINEN: u1,
                ///  Swap TX/RX pins
                SWAP: u1,
                ///  RX pin active level inversion
                RXINV: u1,
                ///  TX pin active level inversion
                TXINV: u1,
                ///  Binary data inversion
                TAINV: u1,
                ///  Most significant bit first
                MSBFIRST: u1,
                ///  Auto baud rate enable
                ABREN: u1,
                ///  ABRMOD0
                ABRMOD0: u1,
                ///  Auto baud rate mode
                ABRMOD1: u1,
                ///  Receiver timeout enable
                RTOEN: u1,
                ///  Address of the USART node
                ADD0_3: u4,
                ///  Address of the USART node
                ADD4_7: u4,
            }),
            ///  Control register 3
            CR3: mmio.Mmio(packed struct(u32) {
                ///  Error interrupt enable
                EIE: u1,
                ///  Ir mode enable
                IREN: u1,
                ///  Ir low-power
                IRLP: u1,
                ///  Half-duplex selection
                HDSEL: u1,
                ///  Smartcard NACK enable
                NACK: u1,
                ///  Smartcard mode enable
                SCEN: u1,
                ///  DMA enable receiver
                DMAR: u1,
                ///  DMA enable transmitter
                DMAT: u1,
                ///  RTS enable
                RTSE: u1,
                ///  CTS enable
                CTSE: u1,
                ///  CTS interrupt enable
                CTSIE: u1,
                ///  One sample bit method enable
                ONEBIT: u1,
                ///  Overrun Disable
                OVRDIS: u1,
                ///  DMA Disable on Reception Error
                DDRE: u1,
                ///  Driver enable mode
                DEM: u1,
                ///  Driver enable polarity selection
                DEP: u1,
                reserved17: u1,
                ///  Smartcard auto-retry count
                SCARCNT: u3,
                ///  Wakeup from Stop mode interrupt flag selection
                WUS: u2,
                ///  Wakeup from Stop mode interrupt enable
                WUFIE: u1,
                padding: u9,
            }),
            ///  Baud rate register
            BRR: mmio.Mmio(packed struct(u32) {
                ///  DIV_Fraction
                DIV_Fraction: u4,
                ///  DIV_Mantissa
                DIV_Mantissa: u12,
                padding: u16,
            }),
            ///  Guard time and prescaler register
            GTPR: mmio.Mmio(packed struct(u32) {
                ///  Prescaler value
                PSC: u8,
                ///  Guard time value
                GT: u8,
                padding: u16,
            }),
            ///  Receiver timeout register
            RTOR: mmio.Mmio(packed struct(u32) {
                ///  Receiver timeout value
                RTO: u24,
                ///  Block Length
                BLEN: u8,
            }),
            ///  Request register
            RQR: mmio.Mmio(packed struct(u32) {
                ///  Auto baud rate request
                ABRRQ: u1,
                ///  Send break request
                SBKRQ: u1,
                ///  Mute mode request
                MMRQ: u1,
                ///  Receive data flush request
                RXFRQ: u1,
                ///  Transmit data flush request
                TXFRQ: u1,
                padding: u27,
            }),
            ///  Interrupt & status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  PE
                PE: u1,
                ///  FE
                FE: u1,
                ///  NF
                NF: u1,
                ///  ORE
                ORE: u1,
                ///  IDLE
                IDLE: u1,
                ///  RXNE
                RXNE: u1,
                ///  TC
                TC: u1,
                ///  TXE
                TXE: u1,
                ///  LBDF
                LBDF: u1,
                ///  CTSIF
                CTSIF: u1,
                ///  CTS
                CTS: u1,
                ///  RTOF
                RTOF: u1,
                ///  EOBF
                EOBF: u1,
                reserved14: u1,
                ///  ABRE
                ABRE: u1,
                ///  ABRF
                ABRF: u1,
                ///  BUSY
                BUSY: u1,
                ///  CMF
                CMF: u1,
                ///  SBKF
                SBKF: u1,
                ///  RWU
                RWU: u1,
                ///  WUF
                WUF: u1,
                ///  TEACK
                TEACK: u1,
                ///  REACK
                REACK: u1,
                padding: u9,
            }),
            ///  Interrupt flag clear register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  Parity error clear flag
                PECF: u1,
                ///  Framing error clear flag
                FECF: u1,
                ///  Noise detected clear flag
                NCF: u1,
                ///  Overrun error clear flag
                ORECF: u1,
                ///  Idle line detected clear flag
                IDLECF: u1,
                reserved6: u1,
                ///  Transmission complete clear flag
                TCCF: u1,
                reserved8: u1,
                ///  LIN break detection clear flag
                LBDCF: u1,
                ///  CTS clear flag
                CTSCF: u1,
                reserved11: u1,
                ///  Receiver timeout clear flag
                RTOCF: u1,
                ///  End of block clear flag
                EOBCF: u1,
                reserved17: u4,
                ///  Character match clear flag
                CMCF: u1,
                reserved20: u2,
                ///  Wakeup from Stop mode clear flag
                WUCF: u1,
                padding: u11,
            }),
            ///  Receive data register
            RDR: mmio.Mmio(packed struct(u32) {
                ///  Receive data value
                RDR: u9,
                padding: u23,
            }),
            ///  Transmit data register
            TDR: mmio.Mmio(packed struct(u32) {
                ///  Transmit data value
                TDR: u9,
                padding: u23,
            }),
        };

        ///  Single Wire Protocol Master Interface
        pub const SWPMI1 = extern struct {
            ///  SWPMI Configuration/Control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Reception DMA enable
                RXDMA: u1,
                ///  Transmission DMA enable
                TXDMA: u1,
                ///  Reception buffering mode
                RXMODE: u1,
                ///  Transmission buffering mode
                TXMODE: u1,
                ///  Loopback mode enable
                LPBK: u1,
                ///  Single wire protocol master interface enable
                SWPME: u1,
                reserved10: u4,
                ///  Single wire protocol master interface deactivate
                DEACT: u1,
                padding: u21,
            }),
            ///  SWPMI Bitrate register
            BRR: mmio.Mmio(packed struct(u32) {
                ///  Bitrate prescaler
                BR: u6,
                padding: u26,
            }),
            reserved12: [4]u8,
            ///  SWPMI Interrupt and Status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  Receive buffer full flag
                RXBFF: u1,
                ///  Transmit buffer empty flag
                TXBEF: u1,
                ///  Receive CRC error flag
                RXBERF: u1,
                ///  Receive overrun error flag
                RXOVRF: u1,
                ///  Transmit underrun error flag
                TXUNRF: u1,
                ///  Receive data register not empty
                RXNE: u1,
                ///  Transmit data register empty
                TXE: u1,
                ///  Transfer complete flag
                TCF: u1,
                ///  Slave resume flag
                SRF: u1,
                ///  SUSPEND flag
                SUSP: u1,
                ///  DEACTIVATED flag
                DEACTF: u1,
                padding: u21,
            }),
            ///  SWPMI Interrupt Flag Clear register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  Clear receive buffer full flag
                CRXBFF: u1,
                ///  Clear transmit buffer empty flag
                CTXBEF: u1,
                ///  Clear receive CRC error flag
                CRXBERF: u1,
                ///  Clear receive overrun error flag
                CRXOVRF: u1,
                ///  Clear transmit underrun error flag
                CTXUNRF: u1,
                reserved7: u2,
                ///  Clear transfer complete flag
                CTCF: u1,
                ///  Clear slave resume flag
                CSRF: u1,
                padding: u23,
            }),
            ///  SWPMI Interrupt Enable register
            IER: mmio.Mmio(packed struct(u32) {
                ///  Receive buffer full interrupt enable
                RXBFIE: u1,
                ///  Transmit buffer empty interrupt enable
                TXBEIE: u1,
                ///  Receive CRC error interrupt enable
                RXBERIE: u1,
                ///  Receive overrun error interrupt enable
                RXOVRIE: u1,
                ///  Transmit underrun error interrupt enable
                TXUNRIE: u1,
                ///  Receive interrupt enable
                RIE: u1,
                ///  Transmit interrupt enable
                TIE: u1,
                ///  Transmit complete interrupt enable
                TCIE: u1,
                ///  Slave resume interrupt enable
                SRIE: u1,
                padding: u23,
            }),
            ///  SWPMI Receive Frame Length register
            RFL: mmio.Mmio(packed struct(u32) {
                ///  Receive frame length
                RFL: u5,
                padding: u27,
            }),
            ///  SWPMI Transmit data register
            TDR: mmio.Mmio(packed struct(u32) {
                ///  Transmit data
                TD: u32,
            }),
            ///  SWPMI Receive data register
            RDR: mmio.Mmio(packed struct(u32) {
                ///  received data
                RD: u32,
            }),
        };

        ///  USB on the go full speed
        pub const OTG_FS_PWRCLK = extern struct {
            ///  OTG_FS power and clock gating control register (OTG_FS_PCGCCTL)
            FS_PCGCCTL: mmio.Mmio(packed struct(u32) {
                ///  Stop PHY clock
                STPPCLK: u1,
                ///  Gate HCLK
                GATEHCLK: u1,
                reserved4: u2,
                ///  PHY Suspended
                PHYSUSP: u1,
                padding: u27,
            }),
        };

        ///  USB on the go full speed
        pub const OTG_FS_DEVICE = extern struct {
            ///  OTG_FS device configuration register (OTG_FS_DCFG)
            FS_DCFG: mmio.Mmio(packed struct(u32) {
                ///  Device speed
                DSPD: u2,
                ///  Non-zero-length status OUT handshake
                NZLSOHSK: u1,
                reserved4: u1,
                ///  Device address
                DAD: u7,
                ///  Periodic frame interval
                PFIVL: u2,
                padding: u19,
            }),
            ///  OTG_FS device control register (OTG_FS_DCTL)
            FS_DCTL: mmio.Mmio(packed struct(u32) {
                ///  Remote wakeup signaling
                RWUSIG: u1,
                ///  Soft disconnect
                SDIS: u1,
                ///  Global IN NAK status
                GINSTS: u1,
                ///  Global OUT NAK status
                GONSTS: u1,
                ///  Test control
                TCTL: u3,
                ///  Set global IN NAK
                SGINAK: u1,
                ///  Clear global IN NAK
                CGINAK: u1,
                ///  Set global OUT NAK
                SGONAK: u1,
                ///  Clear global OUT NAK
                CGONAK: u1,
                ///  Power-on programming done
                POPRGDNE: u1,
                padding: u20,
            }),
            ///  OTG_FS device status register (OTG_FS_DSTS)
            FS_DSTS: mmio.Mmio(packed struct(u32) {
                ///  Suspend status
                SUSPSTS: u1,
                ///  Enumerated speed
                ENUMSPD: u2,
                ///  Erratic error
                EERR: u1,
                reserved8: u4,
                ///  Frame number of the received SOF
                FNSOF: u14,
                padding: u10,
            }),
            reserved16: [4]u8,
            ///  OTG_FS device IN endpoint common interrupt mask register (OTG_FS_DIEPMSK)
            FS_DIEPMSK: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed interrupt mask
                XFRCM: u1,
                ///  Endpoint disabled interrupt mask
                EPDM: u1,
                reserved3: u1,
                ///  Timeout condition mask (Non-isochronous endpoints)
                TOM: u1,
                ///  IN token received when TxFIFO empty mask
                ITTXFEMSK: u1,
                ///  IN token received with EP mismatch mask
                INEPNMM: u1,
                ///  IN endpoint NAK effective mask
                INEPNEM: u1,
                padding: u25,
            }),
            ///  OTG_FS device OUT endpoint common interrupt mask register (OTG_FS_DOEPMSK)
            FS_DOEPMSK: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed interrupt mask
                XFRCM: u1,
                ///  Endpoint disabled interrupt mask
                EPDM: u1,
                reserved3: u1,
                ///  SETUP phase done mask
                STUPM: u1,
                ///  OUT token received when endpoint disabled mask
                OTEPDM: u1,
                padding: u27,
            }),
            ///  OTG_FS device all endpoints interrupt register (OTG_FS_DAINT)
            FS_DAINT: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint interrupt bits
                IEPINT: u16,
                ///  OUT endpoint interrupt bits
                OEPINT: u16,
            }),
            ///  OTG_FS all endpoints interrupt mask register (OTG_FS_DAINTMSK)
            FS_DAINTMSK: mmio.Mmio(packed struct(u32) {
                ///  IN EP interrupt mask bits
                IEPM: u16,
                ///  OUT endpoint interrupt bits
                OEPINT: u16,
            }),
            reserved40: [8]u8,
            ///  OTG_FS device VBUS discharge time register
            DVBUSDIS: mmio.Mmio(packed struct(u32) {
                ///  Device VBUS discharge time
                VBUSDT: u16,
                padding: u16,
            }),
            ///  OTG_FS device VBUS pulsing time register
            DVBUSPULSE: mmio.Mmio(packed struct(u32) {
                ///  Device VBUS pulsing time
                DVBUSP: u12,
                padding: u20,
            }),
            reserved52: [4]u8,
            ///  OTG_FS device IN endpoint FIFO empty interrupt mask register
            DIEPEMPMSK: mmio.Mmio(packed struct(u32) {
                ///  IN EP Tx FIFO empty interrupt mask bits
                INEPTXFEM: u16,
                padding: u16,
            }),
            reserved256: [200]u8,
            ///  OTG_FS device control IN endpoint 0 control register (OTG_FS_DIEPCTL0)
            FS_DIEPCTL0: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u2,
                reserved15: u13,
                ///  USB active endpoint
                USBAEP: u1,
                reserved17: u1,
                ///  NAK status
                NAKSTS: u1,
                ///  Endpoint type
                EPTYP: u2,
                reserved21: u1,
                ///  STALL handshake
                STALL: u1,
                ///  TxFIFO number
                TXFNUM: u4,
                ///  Clear NAK
                CNAK: u1,
                ///  Set NAK
                SNAK: u1,
                reserved30: u2,
                ///  Endpoint disable
                EPDIS: u1,
                ///  Endpoint enable
                EPENA: u1,
            }),
            reserved264: [4]u8,
            ///  device endpoint-x interrupt register
            DIEPINT0: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  TOC
                TOC: u1,
                ///  ITTXFE
                ITTXFE: u1,
                reserved6: u1,
                ///  INEPNE
                INEPNE: u1,
                ///  TXFE
                TXFE: u1,
                padding: u24,
            }),
            reserved272: [4]u8,
            ///  device endpoint-0 transfer size register
            DIEPTSIZ0: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u7,
                reserved19: u12,
                ///  Packet count
                PKTCNT: u2,
                padding: u11,
            }),
            reserved280: [4]u8,
            ///  OTG_FS device IN endpoint transmit FIFO status register
            DTXFSTS0: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint TxFIFO space available
                INEPTFSAV: u16,
                padding: u16,
            }),
            reserved288: [4]u8,
            ///  OTG device endpoint-1 control register
            DIEPCTL1: mmio.Mmio(packed struct(u32) {
                ///  MPSIZ
                MPSIZ: u11,
                reserved15: u4,
                ///  USBAEP
                USBAEP: u1,
                ///  EONUM/DPID
                EONUM_DPID: u1,
                ///  NAKSTS
                NAKSTS: u1,
                ///  EPTYP
                EPTYP: u2,
                reserved21: u1,
                ///  Stall
                Stall: u1,
                ///  TXFNUM
                TXFNUM: u4,
                ///  CNAK
                CNAK: u1,
                ///  SNAK
                SNAK: u1,
                ///  SD0PID/SEVNFRM
                SD0PID_SEVNFRM: u1,
                ///  SODDFRM/SD1PID
                SODDFRM_SD1PID: u1,
                ///  EPDIS
                EPDIS: u1,
                ///  EPENA
                EPENA: u1,
            }),
            reserved296: [4]u8,
            ///  device endpoint-1 interrupt register
            DIEPINT1: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  TOC
                TOC: u1,
                ///  ITTXFE
                ITTXFE: u1,
                reserved6: u1,
                ///  INEPNE
                INEPNE: u1,
                ///  TXFE
                TXFE: u1,
                padding: u24,
            }),
            reserved304: [4]u8,
            ///  device endpoint-1 transfer size register
            DIEPTSIZ1: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Multi count
                MCNT: u2,
                padding: u1,
            }),
            reserved312: [4]u8,
            ///  OTG_FS device IN endpoint transmit FIFO status register
            DTXFSTS1: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint TxFIFO space available
                INEPTFSAV: u16,
                padding: u16,
            }),
            reserved320: [4]u8,
            ///  OTG device endpoint-2 control register
            DIEPCTL2: mmio.Mmio(packed struct(u32) {
                ///  MPSIZ
                MPSIZ: u11,
                reserved15: u4,
                ///  USBAEP
                USBAEP: u1,
                ///  EONUM/DPID
                EONUM_DPID: u1,
                ///  NAKSTS
                NAKSTS: u1,
                ///  EPTYP
                EPTYP: u2,
                reserved21: u1,
                ///  Stall
                Stall: u1,
                ///  TXFNUM
                TXFNUM: u4,
                ///  CNAK
                CNAK: u1,
                ///  SNAK
                SNAK: u1,
                ///  SD0PID/SEVNFRM
                SD0PID_SEVNFRM: u1,
                ///  SODDFRM
                SODDFRM: u1,
                ///  EPDIS
                EPDIS: u1,
                ///  EPENA
                EPENA: u1,
            }),
            reserved328: [4]u8,
            ///  device endpoint-2 interrupt register
            DIEPINT2: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  TOC
                TOC: u1,
                ///  ITTXFE
                ITTXFE: u1,
                reserved6: u1,
                ///  INEPNE
                INEPNE: u1,
                ///  TXFE
                TXFE: u1,
                padding: u24,
            }),
            reserved336: [4]u8,
            ///  device endpoint-2 transfer size register
            DIEPTSIZ2: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Multi count
                MCNT: u2,
                padding: u1,
            }),
            reserved344: [4]u8,
            ///  OTG_FS device IN endpoint transmit FIFO status register
            DTXFSTS2: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint TxFIFO space available
                INEPTFSAV: u16,
                padding: u16,
            }),
            reserved352: [4]u8,
            ///  OTG device endpoint-3 control register
            DIEPCTL3: mmio.Mmio(packed struct(u32) {
                ///  MPSIZ
                MPSIZ: u11,
                reserved15: u4,
                ///  USBAEP
                USBAEP: u1,
                ///  EONUM/DPID
                EONUM_DPID: u1,
                ///  NAKSTS
                NAKSTS: u1,
                ///  EPTYP
                EPTYP: u2,
                reserved21: u1,
                ///  Stall
                Stall: u1,
                ///  TXFNUM
                TXFNUM: u4,
                ///  CNAK
                CNAK: u1,
                ///  SNAK
                SNAK: u1,
                ///  SD0PID/SEVNFRM
                SD0PID_SEVNFRM: u1,
                ///  SODDFRM
                SODDFRM: u1,
                ///  EPDIS
                EPDIS: u1,
                ///  EPENA
                EPENA: u1,
            }),
            reserved360: [4]u8,
            ///  device endpoint-3 interrupt register
            DIEPINT3: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  TOC
                TOC: u1,
                ///  ITTXFE
                ITTXFE: u1,
                reserved6: u1,
                ///  INEPNE
                INEPNE: u1,
                ///  TXFE
                TXFE: u1,
                padding: u24,
            }),
            reserved368: [4]u8,
            ///  device endpoint-3 transfer size register
            DIEPTSIZ3: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Multi count
                MCNT: u2,
                padding: u1,
            }),
            reserved376: [4]u8,
            ///  OTG_FS device IN endpoint transmit FIFO status register
            DTXFSTS3: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint TxFIFO space available
                INEPTFSAV: u16,
                padding: u16,
            }),
            reserved768: [388]u8,
            ///  device endpoint-0 control register
            DOEPCTL0: mmio.Mmio(packed struct(u32) {
                ///  MPSIZ
                MPSIZ: u2,
                reserved15: u13,
                ///  USBAEP
                USBAEP: u1,
                reserved17: u1,
                ///  NAKSTS
                NAKSTS: u1,
                ///  EPTYP
                EPTYP: u2,
                ///  SNPM
                SNPM: u1,
                ///  Stall
                Stall: u1,
                reserved26: u4,
                ///  CNAK
                CNAK: u1,
                ///  SNAK
                SNAK: u1,
                reserved30: u2,
                ///  EPDIS
                EPDIS: u1,
                ///  EPENA
                EPENA: u1,
            }),
            reserved776: [4]u8,
            ///  device endpoint-0 interrupt register
            DOEPINT0: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  STUP
                STUP: u1,
                ///  OTEPDIS
                OTEPDIS: u1,
                reserved6: u1,
                ///  B2BSTUP
                B2BSTUP: u1,
                padding: u25,
            }),
            reserved784: [4]u8,
            ///  device OUT endpoint-0 transfer size register
            DOEPTSIZ0: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u7,
                reserved19: u12,
                ///  Packet count
                PKTCNT: u1,
                reserved29: u9,
                ///  SETUP packet count
                STUPCNT: u2,
                padding: u1,
            }),
            reserved800: [12]u8,
            ///  device endpoint-1 control register
            DOEPCTL1: mmio.Mmio(packed struct(u32) {
                ///  MPSIZ
                MPSIZ: u11,
                reserved15: u4,
                ///  USBAEP
                USBAEP: u1,
                ///  EONUM/DPID
                EONUM_DPID: u1,
                ///  NAKSTS
                NAKSTS: u1,
                ///  EPTYP
                EPTYP: u2,
                ///  SNPM
                SNPM: u1,
                ///  Stall
                Stall: u1,
                reserved26: u4,
                ///  CNAK
                CNAK: u1,
                ///  SNAK
                SNAK: u1,
                ///  SD0PID/SEVNFRM
                SD0PID_SEVNFRM: u1,
                ///  SODDFRM
                SODDFRM: u1,
                ///  EPDIS
                EPDIS: u1,
                ///  EPENA
                EPENA: u1,
            }),
            reserved808: [4]u8,
            ///  device endpoint-1 interrupt register
            DOEPINT1: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  STUP
                STUP: u1,
                ///  OTEPDIS
                OTEPDIS: u1,
                reserved6: u1,
                ///  B2BSTUP
                B2BSTUP: u1,
                padding: u25,
            }),
            reserved816: [4]u8,
            ///  device OUT endpoint-1 transfer size register
            DOEPTSIZ1: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Received data PID/SETUP packet count
                RXDPID_STUPCNT: u2,
                padding: u1,
            }),
            reserved832: [12]u8,
            ///  device endpoint-2 control register
            DOEPCTL2: mmio.Mmio(packed struct(u32) {
                ///  MPSIZ
                MPSIZ: u11,
                reserved15: u4,
                ///  USBAEP
                USBAEP: u1,
                ///  EONUM/DPID
                EONUM_DPID: u1,
                ///  NAKSTS
                NAKSTS: u1,
                ///  EPTYP
                EPTYP: u2,
                ///  SNPM
                SNPM: u1,
                ///  Stall
                Stall: u1,
                reserved26: u4,
                ///  CNAK
                CNAK: u1,
                ///  SNAK
                SNAK: u1,
                ///  SD0PID/SEVNFRM
                SD0PID_SEVNFRM: u1,
                ///  SODDFRM
                SODDFRM: u1,
                ///  EPDIS
                EPDIS: u1,
                ///  EPENA
                EPENA: u1,
            }),
            reserved840: [4]u8,
            ///  device endpoint-2 interrupt register
            DOEPINT2: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  STUP
                STUP: u1,
                ///  OTEPDIS
                OTEPDIS: u1,
                reserved6: u1,
                ///  B2BSTUP
                B2BSTUP: u1,
                padding: u25,
            }),
            reserved848: [4]u8,
            ///  device OUT endpoint-2 transfer size register
            DOEPTSIZ2: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Received data PID/SETUP packet count
                RXDPID_STUPCNT: u2,
                padding: u1,
            }),
            reserved864: [12]u8,
            ///  device endpoint-3 control register
            DOEPCTL3: mmio.Mmio(packed struct(u32) {
                ///  MPSIZ
                MPSIZ: u11,
                reserved15: u4,
                ///  USBAEP
                USBAEP: u1,
                ///  EONUM/DPID
                EONUM_DPID: u1,
                ///  NAKSTS
                NAKSTS: u1,
                ///  EPTYP
                EPTYP: u2,
                ///  SNPM
                SNPM: u1,
                ///  Stall
                Stall: u1,
                reserved26: u4,
                ///  CNAK
                CNAK: u1,
                ///  SNAK
                SNAK: u1,
                ///  SD0PID/SEVNFRM
                SD0PID_SEVNFRM: u1,
                ///  SODDFRM
                SODDFRM: u1,
                ///  EPDIS
                EPDIS: u1,
                ///  EPENA
                EPENA: u1,
            }),
            reserved872: [4]u8,
            ///  device endpoint-3 interrupt register
            DOEPINT3: mmio.Mmio(packed struct(u32) {
                ///  XFRC
                XFRC: u1,
                ///  EPDISD
                EPDISD: u1,
                reserved3: u1,
                ///  STUP
                STUP: u1,
                ///  OTEPDIS
                OTEPDIS: u1,
                reserved6: u1,
                ///  B2BSTUP
                B2BSTUP: u1,
                padding: u25,
            }),
            reserved880: [4]u8,
            ///  device OUT endpoint-3 transfer size register
            DOEPTSIZ3: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Received data PID/SETUP packet count
                RXDPID_STUPCNT: u2,
                padding: u1,
            }),
        };

        ///  USB on the go full speed
        pub const OTG_FS_HOST = extern struct {
            ///  OTG_FS host configuration register (OTG_FS_HCFG)
            FS_HCFG: mmio.Mmio(packed struct(u32) {
                ///  FS/LS PHY clock select
                FSLSPCS: u2,
                ///  FS- and LS-only support
                FSLSS: u1,
                padding: u29,
            }),
            ///  OTG_FS Host frame interval register
            HFIR: mmio.Mmio(packed struct(u32) {
                ///  Frame interval
                FRIVL: u16,
                padding: u16,
            }),
            ///  OTG_FS host frame number/frame time remaining register (OTG_FS_HFNUM)
            FS_HFNUM: mmio.Mmio(packed struct(u32) {
                ///  Frame number
                FRNUM: u16,
                ///  Frame time remaining
                FTREM: u16,
            }),
            reserved16: [4]u8,
            ///  OTG_FS_Host periodic transmit FIFO/queue status register (OTG_FS_HPTXSTS)
            FS_HPTXSTS: mmio.Mmio(packed struct(u32) {
                ///  Periodic transmit data FIFO space available
                PTXFSAVL: u16,
                ///  Periodic transmit request queue space available
                PTXQSAV: u8,
                ///  Top of the periodic transmit request queue
                PTXQTOP: u8,
            }),
            ///  OTG_FS Host all channels interrupt register
            HAINT: mmio.Mmio(packed struct(u32) {
                ///  Channel interrupts
                HAINT: u16,
                padding: u16,
            }),
            ///  OTG_FS host all channels interrupt mask register
            HAINTMSK: mmio.Mmio(packed struct(u32) {
                ///  Channel interrupt mask
                HAINTM: u16,
                padding: u16,
            }),
            reserved64: [36]u8,
            ///  OTG_FS host port control and status register (OTG_FS_HPRT)
            FS_HPRT: mmio.Mmio(packed struct(u32) {
                ///  Port connect status
                PCSTS: u1,
                ///  Port connect detected
                PCDET: u1,
                ///  Port enable
                PENA: u1,
                ///  Port enable/disable change
                PENCHNG: u1,
                ///  Port overcurrent active
                POCA: u1,
                ///  Port overcurrent change
                POCCHNG: u1,
                ///  Port resume
                PRES: u1,
                ///  Port suspend
                PSUSP: u1,
                ///  Port reset
                PRST: u1,
                reserved10: u1,
                ///  Port line status
                PLSTS: u2,
                ///  Port power
                PPWR: u1,
                ///  Port test control
                PTCTL: u4,
                ///  Port speed
                PSPD: u2,
                padding: u13,
            }),
            reserved256: [188]u8,
            ///  OTG_FS host channel-0 characteristics register (OTG_FS_HCCHAR0)
            FS_HCCHAR0: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved264: [4]u8,
            ///  OTG_FS host channel-0 interrupt register (OTG_FS_HCINT0)
            FS_HCINT0: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-0 mask register (OTG_FS_HCINTMSK0)
            FS_HCINTMSK0: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-0 transfer size register
            FS_HCTSIZ0: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
            reserved288: [12]u8,
            ///  OTG_FS host channel-1 characteristics register (OTG_FS_HCCHAR1)
            FS_HCCHAR1: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved296: [4]u8,
            ///  OTG_FS host channel-1 interrupt register (OTG_FS_HCINT1)
            FS_HCINT1: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-1 mask register (OTG_FS_HCINTMSK1)
            FS_HCINTMSK1: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-1 transfer size register
            FS_HCTSIZ1: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
            reserved320: [12]u8,
            ///  OTG_FS host channel-2 characteristics register (OTG_FS_HCCHAR2)
            FS_HCCHAR2: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved328: [4]u8,
            ///  OTG_FS host channel-2 interrupt register (OTG_FS_HCINT2)
            FS_HCINT2: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-2 mask register (OTG_FS_HCINTMSK2)
            FS_HCINTMSK2: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-2 transfer size register
            FS_HCTSIZ2: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
            reserved352: [12]u8,
            ///  OTG_FS host channel-3 characteristics register (OTG_FS_HCCHAR3)
            FS_HCCHAR3: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved360: [4]u8,
            ///  OTG_FS host channel-3 interrupt register (OTG_FS_HCINT3)
            FS_HCINT3: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-3 mask register (OTG_FS_HCINTMSK3)
            FS_HCINTMSK3: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-3 transfer size register
            FS_HCTSIZ3: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
            reserved384: [12]u8,
            ///  OTG_FS host channel-4 characteristics register (OTG_FS_HCCHAR4)
            FS_HCCHAR4: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved392: [4]u8,
            ///  OTG_FS host channel-4 interrupt register (OTG_FS_HCINT4)
            FS_HCINT4: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-4 mask register (OTG_FS_HCINTMSK4)
            FS_HCINTMSK4: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-x transfer size register
            FS_HCTSIZ4: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
            reserved416: [12]u8,
            ///  OTG_FS host channel-5 characteristics register (OTG_FS_HCCHAR5)
            FS_HCCHAR5: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved424: [4]u8,
            ///  OTG_FS host channel-5 interrupt register (OTG_FS_HCINT5)
            FS_HCINT5: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-5 mask register (OTG_FS_HCINTMSK5)
            FS_HCINTMSK5: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-5 transfer size register
            FS_HCTSIZ5: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
            reserved448: [12]u8,
            ///  OTG_FS host channel-6 characteristics register (OTG_FS_HCCHAR6)
            FS_HCCHAR6: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved456: [4]u8,
            ///  OTG_FS host channel-6 interrupt register (OTG_FS_HCINT6)
            FS_HCINT6: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-6 mask register (OTG_FS_HCINTMSK6)
            FS_HCINTMSK6: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-6 transfer size register
            FS_HCTSIZ6: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
            reserved480: [12]u8,
            ///  OTG_FS host channel-7 characteristics register (OTG_FS_HCCHAR7)
            FS_HCCHAR7: mmio.Mmio(packed struct(u32) {
                ///  Maximum packet size
                MPSIZ: u11,
                ///  Endpoint number
                EPNUM: u4,
                ///  Endpoint direction
                EPDIR: u1,
                reserved17: u1,
                ///  Low-speed device
                LSDEV: u1,
                ///  Endpoint type
                EPTYP: u2,
                ///  Multicount
                MCNT: u2,
                ///  Device address
                DAD: u7,
                ///  Odd frame
                ODDFRM: u1,
                ///  Channel disable
                CHDIS: u1,
                ///  Channel enable
                CHENA: u1,
            }),
            reserved488: [4]u8,
            ///  OTG_FS host channel-7 interrupt register (OTG_FS_HCINT7)
            FS_HCINT7: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed
                XFRC: u1,
                ///  Channel halted
                CHH: u1,
                reserved3: u1,
                ///  STALL response received interrupt
                STALL: u1,
                ///  NAK response received interrupt
                NAK: u1,
                ///  ACK response received/transmitted interrupt
                ACK: u1,
                reserved7: u1,
                ///  Transaction error
                TXERR: u1,
                ///  Babble error
                BBERR: u1,
                ///  Frame overrun
                FRMOR: u1,
                ///  Data toggle error
                DTERR: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-7 mask register (OTG_FS_HCINTMSK7)
            FS_HCINTMSK7: mmio.Mmio(packed struct(u32) {
                ///  Transfer completed mask
                XFRCM: u1,
                ///  Channel halted mask
                CHHM: u1,
                reserved3: u1,
                ///  STALL response received interrupt mask
                STALLM: u1,
                ///  NAK response received interrupt mask
                NAKM: u1,
                ///  ACK response received/transmitted interrupt mask
                ACKM: u1,
                ///  response received interrupt mask
                NYET: u1,
                ///  Transaction error mask
                TXERRM: u1,
                ///  Babble error mask
                BBERRM: u1,
                ///  Frame overrun mask
                FRMORM: u1,
                ///  Data toggle error mask
                DTERRM: u1,
                padding: u21,
            }),
            ///  OTG_FS host channel-7 transfer size register
            FS_HCTSIZ7: mmio.Mmio(packed struct(u32) {
                ///  Transfer size
                XFRSIZ: u19,
                ///  Packet count
                PKTCNT: u10,
                ///  Data PID
                DPID: u2,
                padding: u1,
            }),
        };

        ///  Universal synchronous asynchronous receiver transmitter
        pub const LPUART1 = extern struct {
            ///  Control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  USART enable
                UE: u1,
                ///  USART enable in Stop mode
                UESM: u1,
                ///  Receiver enable
                RE: u1,
                ///  Transmitter enable
                TE: u1,
                ///  IDLE interrupt enable
                IDLEIE: u1,
                ///  RXNE interrupt enable
                RXNEIE: u1,
                ///  Transmission complete interrupt enable
                TCIE: u1,
                ///  interrupt enable
                TXEIE: u1,
                ///  PE interrupt enable
                PEIE: u1,
                ///  Parity selection
                PS: u1,
                ///  Parity control enable
                PCE: u1,
                ///  Receiver wakeup method
                WAKE: u1,
                ///  Word length
                M0: u1,
                ///  Mute mode enable
                MME: u1,
                ///  Character match interrupt enable
                CMIE: u1,
                reserved16: u1,
                ///  DEDT0
                DEDT0: u1,
                ///  DEDT1
                DEDT1: u1,
                ///  DEDT2
                DEDT2: u1,
                ///  DEDT3
                DEDT3: u1,
                ///  Driver Enable de-assertion time
                DEDT4: u1,
                ///  DEAT0
                DEAT0: u1,
                ///  DEAT1
                DEAT1: u1,
                ///  DEAT2
                DEAT2: u1,
                ///  DEAT3
                DEAT3: u1,
                ///  Driver Enable assertion time
                DEAT4: u1,
                reserved28: u2,
                ///  Word length
                M1: u1,
                padding: u3,
            }),
            ///  Control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                reserved4: u4,
                ///  7-bit Address Detection/4-bit Address Detection
                ADDM7: u1,
                reserved11: u6,
                ///  Clock enable
                CLKEN: u1,
                ///  STOP bits
                STOP: u2,
                reserved15: u1,
                ///  Swap TX/RX pins
                SWAP: u1,
                ///  RX pin active level inversion
                RXINV: u1,
                ///  TX pin active level inversion
                TXINV: u1,
                ///  Binary data inversion
                TAINV: u1,
                ///  Most significant bit first
                MSBFIRST: u1,
                reserved24: u4,
                ///  Address of the USART node
                ADD0_3: u4,
                ///  Address of the USART node
                ADD4_7: u4,
            }),
            ///  Control register 3
            CR3: mmio.Mmio(packed struct(u32) {
                ///  Error interrupt enable
                EIE: u1,
                reserved3: u2,
                ///  Half-duplex selection
                HDSEL: u1,
                reserved6: u2,
                ///  DMA enable receiver
                DMAR: u1,
                ///  DMA enable transmitter
                DMAT: u1,
                ///  RTS enable
                RTSE: u1,
                ///  CTS enable
                CTSE: u1,
                ///  CTS interrupt enable
                CTSIE: u1,
                reserved12: u1,
                ///  Overrun Disable
                OVRDIS: u1,
                ///  DMA Disable on Reception Error
                DDRE: u1,
                ///  Driver enable mode
                DEM: u1,
                ///  Driver enable polarity selection
                DEP: u1,
                reserved20: u4,
                ///  Wakeup from Stop mode interrupt flag selection
                WUS: u2,
                ///  Wakeup from Stop mode interrupt enable
                WUFIE: u1,
                padding: u9,
            }),
            ///  Baud rate register
            BRR: mmio.Mmio(packed struct(u32) {
                ///  BRR
                BRR: u20,
                padding: u12,
            }),
            reserved24: [8]u8,
            ///  Request register
            RQR: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  Send break request
                SBKRQ: u1,
                ///  Mute mode request
                MMRQ: u1,
                ///  Receive data flush request
                RXFRQ: u1,
                padding: u28,
            }),
            ///  Interrupt & status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  PE
                PE: u1,
                ///  FE
                FE: u1,
                ///  NF
                NF: u1,
                ///  ORE
                ORE: u1,
                ///  IDLE
                IDLE: u1,
                ///  RXNE
                RXNE: u1,
                ///  TC
                TC: u1,
                ///  TXE
                TXE: u1,
                reserved9: u1,
                ///  CTSIF
                CTSIF: u1,
                ///  CTS
                CTS: u1,
                reserved16: u5,
                ///  BUSY
                BUSY: u1,
                ///  CMF
                CMF: u1,
                ///  SBKF
                SBKF: u1,
                ///  RWU
                RWU: u1,
                ///  WUF
                WUF: u1,
                ///  TEACK
                TEACK: u1,
                ///  REACK
                REACK: u1,
                padding: u9,
            }),
            ///  Interrupt flag clear register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  Parity error clear flag
                PECF: u1,
                ///  Framing error clear flag
                FECF: u1,
                ///  Noise detected clear flag
                NCF: u1,
                ///  Overrun error clear flag
                ORECF: u1,
                ///  Idle line detected clear flag
                IDLECF: u1,
                reserved6: u1,
                ///  Transmission complete clear flag
                TCCF: u1,
                reserved9: u2,
                ///  CTS clear flag
                CTSCF: u1,
                reserved17: u7,
                ///  Character match clear flag
                CMCF: u1,
                reserved20: u2,
                ///  Wakeup from Stop mode clear flag
                WUCF: u1,
                padding: u11,
            }),
            ///  Receive data register
            RDR: mmio.Mmio(packed struct(u32) {
                ///  Receive data value
                RDR: u9,
                padding: u23,
            }),
            ///  Transmit data register
            TDR: mmio.Mmio(packed struct(u32) {
                ///  Transmit data value
                TDR: u9,
                padding: u23,
            }),
        };

        ///  Serial peripheral interface/Inter-IC sound
        pub const SPI1 = extern struct {
            ///  control register 1
            CR1: mmio.Mmio(packed struct(u32) {
                ///  Clock phase
                CPHA: u1,
                ///  Clock polarity
                CPOL: u1,
                ///  Master selection
                MSTR: u1,
                ///  Baud rate control
                BR: u3,
                ///  SPI enable
                SPE: u1,
                ///  Frame format
                LSBFIRST: u1,
                ///  Internal slave select
                SSI: u1,
                ///  Software slave management
                SSM: u1,
                ///  Receive only
                RXONLY: u1,
                ///  Data frame format
                DFF: u1,
                ///  CRC transfer next
                CRCNEXT: u1,
                ///  Hardware CRC calculation enable
                CRCEN: u1,
                ///  Output enable in bidirectional mode
                BIDIOE: u1,
                ///  Bidirectional data mode enable
                BIDIMODE: u1,
                padding: u16,
            }),
            ///  control register 2
            CR2: mmio.Mmio(packed struct(u32) {
                ///  Rx buffer DMA enable
                RXDMAEN: u1,
                ///  Tx buffer DMA enable
                TXDMAEN: u1,
                ///  SS output enable
                SSOE: u1,
                ///  NSS pulse management
                NSSP: u1,
                ///  Frame format
                FRF: u1,
                ///  Error interrupt enable
                ERRIE: u1,
                ///  RX buffer not empty interrupt enable
                RXNEIE: u1,
                ///  Tx buffer empty interrupt enable
                TXEIE: u1,
                ///  Data size
                DS: u4,
                ///  FIFO reception threshold
                FRXTH: u1,
                ///  Last DMA transfer for reception
                LDMA_RX: u1,
                ///  Last DMA transfer for transmission
                LDMA_TX: u1,
                padding: u17,
            }),
            ///  status register
            SR: mmio.Mmio(packed struct(u32) {
                ///  Receive buffer not empty
                RXNE: u1,
                ///  Transmit buffer empty
                TXE: u1,
                reserved4: u2,
                ///  CRC error flag
                CRCERR: u1,
                ///  Mode fault
                MODF: u1,
                ///  Overrun flag
                OVR: u1,
                ///  Busy flag
                BSY: u1,
                ///  TI frame format error
                TIFRFE: u1,
                ///  FIFO reception level
                FRLVL: u2,
                ///  FIFO transmission level
                FTLVL: u2,
                padding: u19,
            }),
            ///  data register
            DR: mmio.Mmio(packed struct(u32) {
                ///  Data register
                DR: u16,
                padding: u16,
            }),
            ///  CRC polynomial register
            CRCPR: mmio.Mmio(packed struct(u32) {
                ///  CRC polynomial register
                CRCPOLY: u16,
                padding: u16,
            }),
            ///  RX CRC register
            RXCRCR: mmio.Mmio(packed struct(u32) {
                ///  Rx CRC register
                RxCRC: u16,
                padding: u16,
            }),
            ///  TX CRC register
            TXCRCR: mmio.Mmio(packed struct(u32) {
                ///  Tx CRC register
                TxCRC: u16,
                padding: u16,
            }),
        };

        ///  USB on the go full speed
        pub const OTG_FS_GLOBAL = extern struct {
            ///  OTG_FS control and status register (OTG_FS_GOTGCTL)
            FS_GOTGCTL: mmio.Mmio(packed struct(u32) {
                ///  Session request success
                SRQSCS: u1,
                ///  Session request
                SRQ: u1,
                reserved8: u6,
                ///  Host negotiation success
                HNGSCS: u1,
                ///  HNP request
                HNPRQ: u1,
                ///  Host set HNP enable
                HSHNPEN: u1,
                ///  Device HNP enabled
                DHNPEN: u1,
                reserved16: u4,
                ///  Connector ID status
                CIDSTS: u1,
                ///  Long/short debounce time
                DBCT: u1,
                ///  A-session valid
                ASVLD: u1,
                ///  B-session valid
                BSVLD: u1,
                padding: u12,
            }),
            ///  OTG_FS interrupt register (OTG_FS_GOTGINT)
            FS_GOTGINT: mmio.Mmio(packed struct(u32) {
                reserved2: u2,
                ///  Session end detected
                SEDET: u1,
                reserved8: u5,
                ///  Session request success status change
                SRSSCHG: u1,
                ///  Host negotiation success status change
                HNSSCHG: u1,
                reserved17: u7,
                ///  Host negotiation detected
                HNGDET: u1,
                ///  A-device timeout change
                ADTOCHG: u1,
                ///  Debounce done
                DBCDNE: u1,
                padding: u12,
            }),
            ///  OTG_FS AHB configuration register (OTG_FS_GAHBCFG)
            FS_GAHBCFG: mmio.Mmio(packed struct(u32) {
                ///  Global interrupt mask
                GINT: u1,
                reserved7: u6,
                ///  TxFIFO empty level
                TXFELVL: u1,
                ///  Periodic TxFIFO empty level
                PTXFELVL: u1,
                padding: u23,
            }),
            ///  OTG_FS USB configuration register (OTG_FS_GUSBCFG)
            FS_GUSBCFG: mmio.Mmio(packed struct(u32) {
                ///  FS timeout calibration
                TOCAL: u3,
                reserved6: u3,
                ///  Full Speed serial transceiver select
                PHYSEL: u1,
                reserved8: u1,
                ///  SRP-capable
                SRPCAP: u1,
                ///  HNP-capable
                HNPCAP: u1,
                ///  USB turnaround time
                TRDT: u4,
                reserved29: u15,
                ///  Force host mode
                FHMOD: u1,
                ///  Force device mode
                FDMOD: u1,
                ///  Corrupt Tx packet
                CTXPKT: u1,
            }),
            ///  OTG_FS reset register (OTG_FS_GRSTCTL)
            FS_GRSTCTL: mmio.Mmio(packed struct(u32) {
                ///  Core soft reset
                CSRST: u1,
                ///  HCLK soft reset
                HSRST: u1,
                ///  Host frame counter reset
                FCRST: u1,
                reserved4: u1,
                ///  RxFIFO flush
                RXFFLSH: u1,
                ///  TxFIFO flush
                TXFFLSH: u1,
                ///  TxFIFO number
                TXFNUM: u5,
                reserved31: u20,
                ///  AHB master idle
                AHBIDL: u1,
            }),
            ///  OTG_FS core interrupt register (OTG_FS_GINTSTS)
            FS_GINTSTS: mmio.Mmio(packed struct(u32) {
                ///  Current mode of operation
                CMOD: u1,
                ///  Mode mismatch interrupt
                MMIS: u1,
                ///  OTG interrupt
                OTGINT: u1,
                ///  Start of frame
                SOF: u1,
                ///  RxFIFO non-empty
                RXFLVL: u1,
                ///  Non-periodic TxFIFO empty
                NPTXFE: u1,
                ///  Global IN non-periodic NAK effective
                GINAKEFF: u1,
                ///  Global OUT NAK effective
                GOUTNAKEFF: u1,
                reserved10: u2,
                ///  Early suspend
                ESUSP: u1,
                ///  USB suspend
                USBSUSP: u1,
                ///  USB reset
                USBRST: u1,
                ///  Enumeration done
                ENUMDNE: u1,
                ///  Isochronous OUT packet dropped interrupt
                ISOODRP: u1,
                ///  End of periodic frame interrupt
                EOPF: u1,
                reserved18: u2,
                ///  IN endpoint interrupt
                IEPINT: u1,
                ///  OUT endpoint interrupt
                OEPINT: u1,
                ///  Incomplete isochronous IN transfer
                IISOIXFR: u1,
                ///  Incomplete periodic transfer(Host mode)/Incomplete isochronous OUT transfer(Device mode)
                IPXFR_INCOMPISOOUT: u1,
                reserved24: u2,
                ///  Host port interrupt
                HPRTINT: u1,
                ///  Host channels interrupt
                HCINT: u1,
                ///  Periodic TxFIFO empty
                PTXFE: u1,
                reserved28: u1,
                ///  Connector ID status change
                CIDSCHG: u1,
                ///  Disconnect detected interrupt
                DISCINT: u1,
                ///  Session request/new session detected interrupt
                SRQINT: u1,
                ///  Resume/remote wakeup detected interrupt
                WKUPINT: u1,
            }),
            ///  OTG_FS interrupt mask register (OTG_FS_GINTMSK)
            FS_GINTMSK: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  Mode mismatch interrupt mask
                MMISM: u1,
                ///  OTG interrupt mask
                OTGINT: u1,
                ///  Start of frame mask
                SOFM: u1,
                ///  Receive FIFO non-empty mask
                RXFLVLM: u1,
                ///  Non-periodic TxFIFO empty mask
                NPTXFEM: u1,
                ///  Global non-periodic IN NAK effective mask
                GINAKEFFM: u1,
                ///  Global OUT NAK effective mask
                GONAKEFFM: u1,
                reserved10: u2,
                ///  Early suspend mask
                ESUSPM: u1,
                ///  USB suspend mask
                USBSUSPM: u1,
                ///  USB reset mask
                USBRST: u1,
                ///  Enumeration done mask
                ENUMDNEM: u1,
                ///  Isochronous OUT packet dropped interrupt mask
                ISOODRPM: u1,
                ///  End of periodic frame interrupt mask
                EOPFM: u1,
                reserved17: u1,
                ///  Endpoint mismatch interrupt mask
                EPMISM: u1,
                ///  IN endpoints interrupt mask
                IEPINT: u1,
                ///  OUT endpoints interrupt mask
                OEPINT: u1,
                ///  Incomplete isochronous IN transfer mask
                IISOIXFRM: u1,
                ///  Incomplete periodic transfer mask(Host mode)/Incomplete isochronous OUT transfer mask(Device mode)
                IPXFRM_IISOOXFRM: u1,
                reserved24: u2,
                ///  Host port interrupt mask
                PRTIM: u1,
                ///  Host channels interrupt mask
                HCIM: u1,
                ///  Periodic TxFIFO empty mask
                PTXFEM: u1,
                reserved28: u1,
                ///  Connector ID status change mask
                CIDSCHGM: u1,
                ///  Disconnect detected interrupt mask
                DISCINT: u1,
                ///  Session request/new session detected interrupt mask
                SRQIM: u1,
                ///  Resume/remote wakeup detected interrupt mask
                WUIM: u1,
            }),
            ///  OTG_FS Receive status debug read(Device mode)
            FS_GRXSTSR_Device: mmio.Mmio(packed struct(u32) {
                ///  Endpoint number
                EPNUM: u4,
                ///  Byte count
                BCNT: u11,
                ///  Data PID
                DPID: u2,
                ///  Packet status
                PKTSTS: u4,
                ///  Frame number
                FRMNUM: u4,
                padding: u7,
            }),
            reserved36: [4]u8,
            ///  OTG_FS Receive FIFO size register (OTG_FS_GRXFSIZ)
            FS_GRXFSIZ: mmio.Mmio(packed struct(u32) {
                ///  RxFIFO depth
                RXFD: u16,
                padding: u16,
            }),
            ///  OTG_FS non-periodic transmit FIFO size register (Device mode)
            FS_GNPTXFSIZ_Device: mmio.Mmio(packed struct(u32) {
                ///  Endpoint 0 transmit RAM start address
                TX0FSA: u16,
                ///  Endpoint 0 TxFIFO depth
                TX0FD: u16,
            }),
            ///  OTG_FS non-periodic transmit FIFO/queue status register (OTG_FS_GNPTXSTS)
            FS_GNPTXSTS: mmio.Mmio(packed struct(u32) {
                ///  Non-periodic TxFIFO space available
                NPTXFSAV: u16,
                ///  Non-periodic transmit request queue space available
                NPTQXSAV: u8,
                ///  Top of the non-periodic transmit request queue
                NPTXQTOP: u7,
                padding: u1,
            }),
            reserved56: [8]u8,
            ///  OTG_FS general core configuration register (OTG_FS_GCCFG)
            FS_GCCFG: mmio.Mmio(packed struct(u32) {
                reserved16: u16,
                ///  Power down
                PWRDWN: u1,
                reserved18: u1,
                ///  Enable the VBUS sensing device
                VBUSASEN: u1,
                ///  Enable the VBUS sensing device
                VBUSBSEN: u1,
                ///  SOF output enable
                SOFOUTEN: u1,
                padding: u11,
            }),
            ///  core ID register
            FS_CID: mmio.Mmio(packed struct(u32) {
                ///  Product ID field
                PRODUCT_ID: u32,
            }),
            reserved256: [192]u8,
            ///  OTG_FS Host periodic transmit FIFO size register (OTG_FS_HPTXFSIZ)
            FS_HPTXFSIZ: mmio.Mmio(packed struct(u32) {
                ///  Host periodic TxFIFO start address
                PTXSA: u16,
                ///  Host periodic TxFIFO depth
                PTXFSIZ: u16,
            }),
            ///  OTG_FS device IN endpoint transmit FIFO size register (OTG_FS_DIEPTXF2)
            FS_DIEPTXF1: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint FIFO2 transmit RAM start address
                INEPTXSA: u16,
                ///  IN endpoint TxFIFO depth
                INEPTXFD: u16,
            }),
            ///  OTG_FS device IN endpoint transmit FIFO size register (OTG_FS_DIEPTXF3)
            FS_DIEPTXF2: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint FIFO3 transmit RAM start address
                INEPTXSA: u16,
                ///  IN endpoint TxFIFO depth
                INEPTXFD: u16,
            }),
            ///  OTG_FS device IN endpoint transmit FIFO size register (OTG_FS_DIEPTXF4)
            FS_DIEPTXF3: mmio.Mmio(packed struct(u32) {
                ///  IN endpoint FIFO4 transmit RAM start address
                INEPTXSA: u16,
                ///  IN endpoint TxFIFO depth
                INEPTXFD: u16,
            }),
        };

        ///  Real-time clock
        pub const RTC = extern struct {
            ///  time register
            TR: mmio.Mmio(packed struct(u32) {
                ///  Second units in BCD format
                SU: u4,
                ///  Second tens in BCD format
                ST: u3,
                reserved8: u1,
                ///  Minute units in BCD format
                MNU: u4,
                ///  Minute tens in BCD format
                MNT: u3,
                reserved16: u1,
                ///  Hour units in BCD format
                HU: u4,
                ///  Hour tens in BCD format
                HT: u2,
                ///  AM/PM notation
                PM: u1,
                padding: u9,
            }),
            ///  date register
            DR: mmio.Mmio(packed struct(u32) {
                ///  Date units in BCD format
                DU: u4,
                ///  Date tens in BCD format
                DT: u2,
                reserved8: u2,
                ///  Month units in BCD format
                MU: u4,
                ///  Month tens in BCD format
                MT: u1,
                ///  Week day units
                WDU: u3,
                ///  Year units in BCD format
                YU: u4,
                ///  Year tens in BCD format
                YT: u4,
                padding: u8,
            }),
            ///  control register
            CR: mmio.Mmio(packed struct(u32) {
                ///  Wakeup clock selection
                WCKSEL: u3,
                ///  Time-stamp event active edge
                TSEDGE: u1,
                ///  Reference clock detection enable (50 or 60 Hz)
                REFCKON: u1,
                ///  Bypass the shadow registers
                BYPSHAD: u1,
                ///  Hour format
                FMT: u1,
                reserved8: u1,
                ///  Alarm A enable
                ALRAE: u1,
                ///  Alarm B enable
                ALRBE: u1,
                ///  Wakeup timer enable
                WUTE: u1,
                ///  Time stamp enable
                TSE: u1,
                ///  Alarm A interrupt enable
                ALRAIE: u1,
                ///  Alarm B interrupt enable
                ALRBIE: u1,
                ///  Wakeup timer interrupt enable
                WUTIE: u1,
                ///  Time-stamp interrupt enable
                TSIE: u1,
                ///  Add 1 hour (summer time change)
                ADD1H: u1,
                ///  Subtract 1 hour (winter time change)
                SUB1H: u1,
                ///  Backup
                BKP: u1,
                ///  Calibration output selection
                COSEL: u1,
                ///  Output polarity
                POL: u1,
                ///  Output selection
                OSEL: u2,
                ///  Calibration output enable
                COE: u1,
                ///  timestamp on internal event enable
                ITSE: u1,
                padding: u7,
            }),
            ///  initialization and status register
            ISR: mmio.Mmio(packed struct(u32) {
                ///  Alarm A write flag
                ALRAWF: u1,
                ///  Alarm B write flag
                ALRBWF: u1,
                ///  Wakeup timer write flag
                WUTWF: u1,
                ///  Shift operation pending
                SHPF: u1,
                ///  Initialization status flag
                INITS: u1,
                ///  Registers synchronization flag
                RSF: u1,
                ///  Initialization flag
                INITF: u1,
                ///  Initialization mode
                INIT: u1,
                ///  Alarm A flag
                ALRAF: u1,
                ///  Alarm B flag
                ALRBF: u1,
                ///  Wakeup timer flag
                WUTF: u1,
                ///  Time-stamp flag
                TSF: u1,
                ///  Time-stamp overflow flag
                TSOVF: u1,
                ///  Tamper detection flag
                TAMP1F: u1,
                ///  RTC_TAMP2 detection flag
                TAMP2F: u1,
                ///  RTC_TAMP3 detection flag
                TAMP3F: u1,
                ///  Recalibration pending Flag
                RECALPF: u1,
                padding: u15,
            }),
            ///  prescaler register
            PRER: mmio.Mmio(packed struct(u32) {
                ///  Synchronous prescaler factor
                PREDIV_S: u15,
                reserved16: u1,
                ///  Asynchronous prescaler factor
                PREDIV_A: u7,
                padding: u9,
            }),
            ///  wakeup timer register
            WUTR: mmio.Mmio(packed struct(u32) {
                ///  Wakeup auto-reload value bits
                WUT: u16,
                padding: u16,
            }),
            reserved28: [4]u8,
            ///  alarm A register
            ALRMAR: mmio.Mmio(packed struct(u32) {
                ///  Second units in BCD format
                SU: u4,
                ///  Second tens in BCD format
                ST: u3,
                ///  Alarm A seconds mask
                MSK1: u1,
                ///  Minute units in BCD format
                MNU: u4,
                ///  Minute tens in BCD format
                MNT: u3,
                ///  Alarm A minutes mask
                MSK2: u1,
                ///  Hour units in BCD format
                HU: u4,
                ///  Hour tens in BCD format
                HT: u2,
                ///  AM/PM notation
                PM: u1,
                ///  Alarm A hours mask
                MSK3: u1,
                ///  Date units or day in BCD format
                DU: u4,
                ///  Date tens in BCD format
                DT: u2,
                ///  Week day selection
                WDSEL: u1,
                ///  Alarm A date mask
                MSK4: u1,
            }),
            ///  alarm B register
            ALRMBR: mmio.Mmio(packed struct(u32) {
                ///  Second units in BCD format
                SU: u4,
                ///  Second tens in BCD format
                ST: u3,
                ///  Alarm B seconds mask
                MSK1: u1,
                ///  Minute units in BCD format
                MNU: u4,
                ///  Minute tens in BCD format
                MNT: u3,
                ///  Alarm B minutes mask
                MSK2: u1,
                ///  Hour units in BCD format
                HU: u4,
                ///  Hour tens in BCD format
                HT: u2,
                ///  AM/PM notation
                PM: u1,
                ///  Alarm B hours mask
                MSK3: u1,
                ///  Date units or day in BCD format
                DU: u4,
                ///  Date tens in BCD format
                DT: u2,
                ///  Week day selection
                WDSEL: u1,
                ///  Alarm B date mask
                MSK4: u1,
            }),
            ///  write protection register
            WPR: mmio.Mmio(packed struct(u32) {
                ///  Write protection key
                KEY: u8,
                padding: u24,
            }),
            ///  sub second register
            SSR: mmio.Mmio(packed struct(u32) {
                ///  Sub second value
                SS: u16,
                padding: u16,
            }),
            ///  shift control register
            SHIFTR: mmio.Mmio(packed struct(u32) {
                ///  Subtract a fraction of a second
                SUBFS: u15,
                reserved31: u16,
                ///  Add one second
                ADD1S: u1,
            }),
            ///  time stamp time register
            TSTR: mmio.Mmio(packed struct(u32) {
                ///  Second units in BCD format
                SU: u4,
                ///  Second tens in BCD format
                ST: u3,
                reserved8: u1,
                ///  Minute units in BCD format
                MNU: u4,
                ///  Minute tens in BCD format
                MNT: u3,
                reserved16: u1,
                ///  Hour units in BCD format
                HU: u4,
                ///  Hour tens in BCD format
                HT: u2,
                ///  AM/PM notation
                PM: u1,
                padding: u9,
            }),
            ///  time stamp date register
            TSDR: mmio.Mmio(packed struct(u32) {
                ///  Date units in BCD format
                DU: u4,
                ///  Date tens in BCD format
                DT: u2,
                reserved8: u2,
                ///  Month units in BCD format
                MU: u4,
                ///  Month tens in BCD format
                MT: u1,
                ///  Week day units
                WDU: u3,
                padding: u16,
            }),
            ///  timestamp sub second register
            TSSSR: mmio.Mmio(packed struct(u32) {
                ///  Sub second value
                SS: u16,
                padding: u16,
            }),
            ///  calibration register
            CALR: mmio.Mmio(packed struct(u32) {
                ///  Calibration minus
                CALM: u9,
                reserved13: u4,
                ///  Use a 16-second calibration cycle period
                CALW16: u1,
                ///  Use an 8-second calibration cycle period
                CALW8: u1,
                ///  Increase frequency of RTC by 488.5 ppm
                CALP: u1,
                padding: u16,
            }),
            ///  tamper configuration register
            TAMPCR: mmio.Mmio(packed struct(u32) {
                ///  Tamper 1 detection enable
                TAMP1E: u1,
                ///  Active level for tamper 1
                TAMP1TRG: u1,
                ///  Tamper interrupt enable
                TAMPIE: u1,
                ///  Tamper 2 detection enable
                TAMP2E: u1,
                ///  Active level for tamper 2
                TAMP2TRG: u1,
                ///  Tamper 3 detection enable
                TAMP3E: u1,
                ///  Active level for tamper 3
                TAMP3TRG: u1,
                ///  Activate timestamp on tamper detection event
                TAMPTS: u1,
                ///  Tamper sampling frequency
                TAMPFREQ: u3,
                ///  Tamper filter count
                TAMPFLT: u2,
                ///  Tamper precharge duration
                TAMPPRCH: u2,
                ///  TAMPER pull-up disable
                TAMPPUDIS: u1,
                ///  Tamper 1 interrupt enable
                TAMP1IE: u1,
                ///  Tamper 1 no erase
                TAMP1NOERASE: u1,
                ///  Tamper 1 mask flag
                TAMP1MF: u1,
                ///  Tamper 2 interrupt enable
                TAMP2IE: u1,
                ///  Tamper 2 no erase
                TAMP2NOERASE: u1,
                ///  Tamper 2 mask flag
                TAMP2MF: u1,
                ///  Tamper 3 interrupt enable
                TAMP3IE: u1,
                ///  Tamper 3 no erase
                TAMP3NOERASE: u1,
                ///  Tamper 3 mask flag
                TAMP3MF: u1,
                padding: u7,
            }),
            ///  alarm A sub second register
            ALRMASSR: mmio.Mmio(packed struct(u32) {
                ///  Sub seconds value
                SS: u15,
                reserved24: u9,
                ///  Mask the most-significant bits starting at this bit
                MASKSS: u4,
                padding: u4,
            }),
            ///  alarm B sub second register
            ALRMBSSR: mmio.Mmio(packed struct(u32) {
                ///  Sub seconds value
                SS: u15,
                reserved24: u9,
                ///  Mask the most-significant bits starting at this bit
                MASKSS: u4,
                padding: u4,
            }),
            ///  option register
            OR: mmio.Mmio(packed struct(u32) {
                ///  RTC_ALARM on PC13 output type
                RTC_ALARM_TYPE: u1,
                ///  RTC_OUT remap
                RTC_OUT_RMP: u1,
                padding: u30,
            }),
            ///  backup register
            BKP0R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP1R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP2R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP3R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP4R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP5R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP6R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP7R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP8R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP9R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP10R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP11R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP12R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP13R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP14R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP15R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP16R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP17R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP18R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP19R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP20R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP21R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP22R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP23R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP24R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP25R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP26R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP27R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP28R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP29R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP30R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
            ///  backup register
            BKP31R: mmio.Mmio(packed struct(u32) {
                ///  BKP
                BKP: u32,
            }),
        };

        ///  Secure digital input/output interface
        pub const SDMMC1 = extern struct {
            ///  power control register
            POWER: mmio.Mmio(packed struct(u32) {
                ///  PWRCTRL
                PWRCTRL: u2,
                padding: u30,
            }),
            ///  SDI clock control register
            CLKCR: mmio.Mmio(packed struct(u32) {
                ///  Clock divide factor
                CLKDIV: u8,
                ///  Clock enable bit
                CLKEN: u1,
                ///  Power saving configuration bit
                PWRSAV: u1,
                ///  Clock divider bypass enable bit
                BYPASS: u1,
                ///  Wide bus mode enable bit
                WIDBUS: u2,
                ///  SDIO_CK dephasing selection bit
                NEGEDGE: u1,
                ///  HW Flow Control enable
                HWFC_EN: u1,
                padding: u17,
            }),
            ///  argument register
            ARG: mmio.Mmio(packed struct(u32) {
                ///  Command argument
                CMDARG: u32,
            }),
            ///  command register
            CMD: mmio.Mmio(packed struct(u32) {
                ///  Command index
                CMDINDEX: u6,
                ///  Wait for response bits
                WAITRESP: u2,
                ///  CPSM waits for interrupt request
                WAITINT: u1,
                ///  CPSM Waits for ends of data transfer (CmdPend internal signal)
                WAITPEND: u1,
                ///  Command path state machine (CPSM) Enable bit
                CPSMEN: u1,
                ///  SD I/O suspend command
                SDIOSuspend: u1,
                ///  Enable CMD completion
                ENCMDcompl: u1,
                ///  not Interrupt Enable
                nIEN: u1,
                ///  CE-ATA command
                CE_ATACMD: u1,
                padding: u17,
            }),
            ///  command response register
            RESPCMD: mmio.Mmio(packed struct(u32) {
                ///  Response command index
                RESPCMD: u6,
                padding: u26,
            }),
            ///  response 1..4 register
            RESP1: mmio.Mmio(packed struct(u32) {
                ///  see Table 132
                CARDSTATUS1: u32,
            }),
            ///  response 1..4 register
            RESP2: mmio.Mmio(packed struct(u32) {
                ///  see Table 132
                CARDSTATUS2: u32,
            }),
            ///  response 1..4 register
            RESP3: mmio.Mmio(packed struct(u32) {
                ///  see Table 132
                CARDSTATUS3: u32,
            }),
            ///  response 1..4 register
            RESP4: mmio.Mmio(packed struct(u32) {
                ///  see Table 132
                CARDSTATUS4: u32,
            }),
            ///  data timer register
            DTIMER: mmio.Mmio(packed struct(u32) {
                ///  Data timeout period
                DATATIME: u32,
            }),
            ///  data length register
            DLEN: mmio.Mmio(packed struct(u32) {
                ///  Data length value
                DATALENGTH: u25,
                padding: u7,
            }),
            ///  data control register
            DCTRL: mmio.Mmio(packed struct(u32) {
                ///  DTEN
                DTEN: u1,
                ///  Data transfer direction selection
                DTDIR: u1,
                ///  Data transfer mode selection 1: Stream or SDIO multibyte data transfer
                DTMODE: u1,
                ///  DMA enable bit
                DMAEN: u1,
                ///  Data block size
                DBLOCKSIZE: u4,
                ///  Read wait start
                RWSTART: u1,
                ///  Read wait stop
                RWSTOP: u1,
                ///  Read wait mode
                RWMOD: u1,
                ///  SD I/O enable functions
                SDIOEN: u1,
                padding: u20,
            }),
            ///  data counter register
            DCOUNT: mmio.Mmio(packed struct(u32) {
                ///  Data count value
                DATACOUNT: u25,
                padding: u7,
            }),
            ///  status register
            STA: mmio.Mmio(packed struct(u32) {
                ///  Command response received (CRC check failed)
                CCRCFAIL: u1,
                ///  Data block sent/received (CRC check failed)
                DCRCFAIL: u1,
                ///  Command response timeout
                CTIMEOUT: u1,
                ///  Data timeout
                DTIMEOUT: u1,
                ///  Transmit FIFO underrun error
                TXUNDERR: u1,
                ///  Received FIFO overrun error
                RXOVERR: u1,
                ///  Command response received (CRC check passed)
                CMDREND: u1,
                ///  Command sent (no response required)
                CMDSENT: u1,
                ///  Data end (data counter, SDIDCOUNT, is zero)
                DATAEND: u1,
                ///  Start bit not detected on all data signals in wide bus mode
                STBITERR: u1,
                ///  Data block sent/received (CRC check passed)
                DBCKEND: u1,
                ///  Command transfer in progress
                CMDACT: u1,
                ///  Data transmit in progress
                TXACT: u1,
                ///  Data receive in progress
                RXACT: u1,
                ///  Transmit FIFO half empty: at least 8 words can be written into the FIFO
                TXFIFOHE: u1,
                ///  Receive FIFO half full: there are at least 8 words in the FIFO
                RXFIFOHF: u1,
                ///  Transmit FIFO full
                TXFIFOF: u1,
                ///  Receive FIFO full
                RXFIFOF: u1,
                ///  Transmit FIFO empty
                TXFIFOE: u1,
                ///  Receive FIFO empty
                RXFIFOE: u1,
                ///  Data available in transmit FIFO
                TXDAVL: u1,
                ///  Data available in receive FIFO
                RXDAVL: u1,
                ///  SDIO interrupt received
                SDIOIT: u1,
                ///  CE-ATA command completion signal received for CMD61
                CEATAEND: u1,
                padding: u8,
            }),
            ///  interrupt clear register
            ICR: mmio.Mmio(packed struct(u32) {
                ///  CCRCFAIL flag clear bit
                CCRCFAILC: u1,
                ///  DCRCFAIL flag clear bit
                DCRCFAILC: u1,
                ///  CTIMEOUT flag clear bit
                CTIMEOUTC: u1,
                ///  DTIMEOUT flag clear bit
                DTIMEOUTC: u1,
                ///  TXUNDERR flag clear bit
                TXUNDERRC: u1,
                ///  RXOVERR flag clear bit
                RXOVERRC: u1,
                ///  CMDREND flag clear bit
                CMDRENDC: u1,
                ///  CMDSENT flag clear bit
                CMDSENTC: u1,
                ///  DATAEND flag clear bit
                DATAENDC: u1,
                ///  STBITERR flag clear bit
                STBITERRC: u1,
                ///  DBCKEND flag clear bit
                DBCKENDC: u1,
                reserved22: u11,
                ///  SDIOIT flag clear bit
                SDIOITC: u1,
                ///  CEATAEND flag clear bit
                CEATAENDC: u1,
                padding: u8,
            }),
            ///  mask register
            MASK: mmio.Mmio(packed struct(u32) {
                ///  Command CRC fail interrupt enable
                CCRCFAILIE: u1,
                ///  Data CRC fail interrupt enable
                DCRCFAILIE: u1,
                ///  Command timeout interrupt enable
                CTIMEOUTIE: u1,
                ///  Data timeout interrupt enable
                DTIMEOUTIE: u1,
                ///  Tx FIFO underrun error interrupt enable
                TXUNDERRIE: u1,
                ///  Rx FIFO overrun error interrupt enable
                RXOVERRIE: u1,
                ///  Command response received interrupt enable
                CMDRENDIE: u1,
                ///  Command sent interrupt enable
                CMDSENTIE: u1,
                ///  Data end interrupt enable
                DATAENDIE: u1,
                ///  Start bit error interrupt enable
                STBITERRIE: u1,
                ///  Data block end interrupt enable
                DBCKENDIE: u1,
                ///  Command acting interrupt enable
                CMDACTIE: u1,
                ///  Data transmit acting interrupt enable
                TXACTIE: u1,
                ///  Data receive acting interrupt enable
                RXACTIE: u1,
                ///  Tx FIFO half empty interrupt enable
                TXFIFOHEIE: u1,
                ///  Rx FIFO half full interrupt enable
                RXFIFOHFIE: u1,
                ///  Tx FIFO full interrupt enable
                TXFIFOFIE: u1,
                ///  Rx FIFO full interrupt enable
                RXFIFOFIE: u1,
                ///  Tx FIFO empty interrupt enable
                TXFIFOEIE: u1,
                ///  Rx FIFO empty interrupt enable
                RXFIFOEIE: u1,
                ///  Data available in Tx FIFO interrupt enable
                TXDAVLIE: u1,
                ///  Data available in Rx FIFO interrupt enable
                RXDAVLIE: u1,
                ///  SDIO mode interrupt received interrupt enable
                SDIOITIE: u1,
                ///  CE-ATA command completion signal received interrupt enable
                CEATAENDIE: u1,
                padding: u8,
            }),
            reserved72: [8]u8,
            ///  FIFO counter register
            FIFOCNT: mmio.Mmio(packed struct(u32) {
                ///  Remaining number of words to be written to or read from the FIFO
                FIFOCOUNT: u24,
                padding: u8,
            }),
            reserved128: [52]u8,
            ///  data FIFO register
            FIFO: mmio.Mmio(packed struct(u32) {
                ///  Receive and transmit FIFO data
                FIFOData: u32,
            }),
        };

        ///  External interrupt/event controller
        pub const EXTI = extern struct {
            ///  Interrupt mask register
            IMR1: mmio.Mmio(packed struct(u32) {
                ///  Interrupt Mask on line 0
                MR0: u1,
                ///  Interrupt Mask on line 1
                MR1: u1,
                ///  Interrupt Mask on line 2
                MR2: u1,
                ///  Interrupt Mask on line 3
                MR3: u1,
                ///  Interrupt Mask on line 4
                MR4: u1,
                ///  Interrupt Mask on line 5
                MR5: u1,
                ///  Interrupt Mask on line 6
                MR6: u1,
                ///  Interrupt Mask on line 7
                MR7: u1,
                ///  Interrupt Mask on line 8
                MR8: u1,
                ///  Interrupt Mask on line 9
                MR9: u1,
                ///  Interrupt Mask on line 10
                MR10: u1,
                ///  Interrupt Mask on line 11
                MR11: u1,
                ///  Interrupt Mask on line 12
                MR12: u1,
                ///  Interrupt Mask on line 13
                MR13: u1,
                ///  Interrupt Mask on line 14
                MR14: u1,
                ///  Interrupt Mask on line 15
                MR15: u1,
                ///  Interrupt Mask on line 16
                MR16: u1,
                ///  Interrupt Mask on line 17
                MR17: u1,
                ///  Interrupt Mask on line 18
                MR18: u1,
                ///  Interrupt Mask on line 19
                MR19: u1,
                ///  Interrupt Mask on line 20
                MR20: u1,
                ///  Interrupt Mask on line 21
                MR21: u1,
                ///  Interrupt Mask on line 22
                MR22: u1,
                ///  Interrupt Mask on line 23
                MR23: u1,
                ///  Interrupt Mask on line 24
                MR24: u1,
                ///  Interrupt Mask on line 25
                MR25: u1,
                ///  Interrupt Mask on line 26
                MR26: u1,
                ///  Interrupt Mask on line 27
                MR27: u1,
                ///  Interrupt Mask on line 28
                MR28: u1,
                ///  Interrupt Mask on line 29
                MR29: u1,
                ///  Interrupt Mask on line 30
                MR30: u1,
                ///  Interrupt Mask on line 31
                MR31: u1,
            }),
            ///  Event mask register
            EMR1: mmio.Mmio(packed struct(u32) {
                ///  Event Mask on line 0
                MR0: u1,
                ///  Event Mask on line 1
                MR1: u1,
                ///  Event Mask on line 2
                MR2: u1,
                ///  Event Mask on line 3
                MR3: u1,
                ///  Event Mask on line 4
                MR4: u1,
                ///  Event Mask on line 5
                MR5: u1,
                ///  Event Mask on line 6
                MR6: u1,
                ///  Event Mask on line 7
                MR7: u1,
                ///  Event Mask on line 8
                MR8: u1,
                ///  Event Mask on line 9
                MR9: u1,
                ///  Event Mask on line 10
                MR10: u1,
                ///  Event Mask on line 11
                MR11: u1,
                ///  Event Mask on line 12
                MR12: u1,
                ///  Event Mask on line 13
                MR13: u1,
                ///  Event Mask on line 14
                MR14: u1,
                ///  Event Mask on line 15
                MR15: u1,
                ///  Event Mask on line 16
                MR16: u1,
                ///  Event Mask on line 17
                MR17: u1,
                ///  Event Mask on line 18
                MR18: u1,
                ///  Event Mask on line 19
                MR19: u1,
                ///  Event Mask on line 20
                MR20: u1,
                ///  Event Mask on line 21
                MR21: u1,
                ///  Event Mask on line 22
                MR22: u1,
                ///  Event Mask on line 23
                MR23: u1,
                ///  Event Mask on line 24
                MR24: u1,
                ///  Event Mask on line 25
                MR25: u1,
                ///  Event Mask on line 26
                MR26: u1,
                ///  Event Mask on line 27
                MR27: u1,
                ///  Event Mask on line 28
                MR28: u1,
                ///  Event Mask on line 29
                MR29: u1,
                ///  Event Mask on line 30
                MR30: u1,
                ///  Event Mask on line 31
                MR31: u1,
            }),
            ///  Rising Trigger selection register
            RTSR1: mmio.Mmio(packed struct(u32) {
                ///  Rising trigger event configuration of line 0
                TR0: u1,
                ///  Rising trigger event configuration of line 1
                TR1: u1,
                ///  Rising trigger event configuration of line 2
                TR2: u1,
                ///  Rising trigger event configuration of line 3
                TR3: u1,
                ///  Rising trigger event configuration of line 4
                TR4: u1,
                ///  Rising trigger event configuration of line 5
                TR5: u1,
                ///  Rising trigger event configuration of line 6
                TR6: u1,
                ///  Rising trigger event configuration of line 7
                TR7: u1,
                ///  Rising trigger event configuration of line 8
                TR8: u1,
                ///  Rising trigger event configuration of line 9
                TR9: u1,
                ///  Rising trigger event configuration of line 10
                TR10: u1,
                ///  Rising trigger event configuration of line 11
                TR11: u1,
                ///  Rising trigger event configuration of line 12
                TR12: u1,
                ///  Rising trigger event configuration of line 13
                TR13: u1,
                ///  Rising trigger event configuration of line 14
                TR14: u1,
                ///  Rising trigger event configuration of line 15
                TR15: u1,
                ///  Rising trigger event configuration of line 16
                TR16: u1,
                reserved18: u1,
                ///  Rising trigger event configuration of line 18
                TR18: u1,
                ///  Rising trigger event configuration of line 19
                TR19: u1,
                ///  Rising trigger event configuration of line 20
                TR20: u1,
                ///  Rising trigger event configuration of line 21
                TR21: u1,
                ///  Rising trigger event configuration of line 22
                TR22: u1,
                padding: u9,
            }),
            ///  Falling Trigger selection register
            FTSR1: mmio.Mmio(packed struct(u32) {
                ///  Falling trigger event configuration of line 0
                TR0: u1,
                ///  Falling trigger event configuration of line 1
                TR1: u1,
                ///  Falling trigger event configuration of line 2
                TR2: u1,
                ///  Falling trigger event configuration of line 3
                TR3: u1,
                ///  Falling trigger event configuration of line 4
                TR4: u1,
                ///  Falling trigger event configuration of line 5
                TR5: u1,
                ///  Falling trigger event configuration of line 6
                TR6: u1,
                ///  Falling trigger event configuration of line 7
                TR7: u1,
                ///  Falling trigger event configuration of line 8
                TR8: u1,
                ///  Falling trigger event configuration of line 9
                TR9: u1,
                ///  Falling trigger event configuration of line 10
                TR10: u1,
                ///  Falling trigger event configuration of line 11
                TR11: u1,
                ///  Falling trigger event configuration of line 12
                TR12: u1,
                ///  Falling trigger event configuration of line 13
                TR13: u1,
                ///  Falling trigger event configuration of line 14
                TR14: u1,
                ///  Falling trigger event configuration of line 15
                TR15: u1,
                ///  Falling trigger event configuration of line 16
                TR16: u1,
                reserved18: u1,
                ///  Falling trigger event configuration of line 18
                TR18: u1,
                ///  Falling trigger event configuration of line 19
                TR19: u1,
                ///  Falling trigger event configuration of line 20
                TR20: u1,
                ///  Falling trigger event configuration of line 21
                TR21: u1,
                ///  Falling trigger event configuration of line 22
                TR22: u1,
                padding: u9,
            }),
            ///  Software interrupt event register
            SWIER1: mmio.Mmio(packed struct(u32) {
                ///  Software Interrupt on line 0
                SWIER0: u1,
                ///  Software Interrupt on line 1
                SWIER1: u1,
                ///  Software Interrupt on line 2
                SWIER2: u1,
                ///  Software Interrupt on line 3
                SWIER3: u1,
                ///  Software Interrupt on line 4
                SWIER4: u1,
                ///  Software Interrupt on line 5
                SWIER5: u1,
                ///  Software Interrupt on line 6
                SWIER6: u1,
                ///  Software Interrupt on line 7
                SWIER7: u1,
                ///  Software Interrupt on line 8
                SWIER8: u1,
                ///  Software Interrupt on line 9
                SWIER9: u1,
                ///  Software Interrupt on line 10
                SWIER10: u1,
                ///  Software Interrupt on line 11
                SWIER11: u1,
                ///  Software Interrupt on line 12
                SWIER12: u1,
                ///  Software Interrupt on line 13
                SWIER13: u1,
                ///  Software Interrupt on line 14
                SWIER14: u1,
                ///  Software Interrupt on line 15
                SWIER15: u1,
                ///  Software Interrupt on line 16
                SWIER16: u1,
                reserved18: u1,
                ///  Software Interrupt on line 18
                SWIER18: u1,
                ///  Software Interrupt on line 19
                SWIER19: u1,
                ///  Software Interrupt on line 20
                SWIER20: u1,
                ///  Software Interrupt on line 21
                SWIER21: u1,
                ///  Software Interrupt on line 22
                SWIER22: u1,
                padding: u9,
            }),
            ///  Pending register
            PR1: mmio.Mmio(packed struct(u32) {
                ///  Pending bit 0
                PR0: u1,
                ///  Pending bit 1
                PR1: u1,
                ///  Pending bit 2
                PR2: u1,
                ///  Pending bit 3
                PR3: u1,
                ///  Pending bit 4
                PR4: u1,
                ///  Pending bit 5
                PR5: u1,
                ///  Pending bit 6
                PR6: u1,
                ///  Pending bit 7
                PR7: u1,
                ///  Pending bit 8
                PR8: u1,
                ///  Pending bit 9
                PR9: u1,
                ///  Pending bit 10
                PR10: u1,
                ///  Pending bit 11
                PR11: u1,
                ///  Pending bit 12
                PR12: u1,
                ///  Pending bit 13
                PR13: u1,
                ///  Pending bit 14
                PR14: u1,
                ///  Pending bit 15
                PR15: u1,
                ///  Pending bit 16
                PR16: u1,
                reserved18: u1,
                ///  Pending bit 18
                PR18: u1,
                ///  Pending bit 19
                PR19: u1,
                ///  Pending bit 20
                PR20: u1,
                ///  Pending bit 21
                PR21: u1,
                ///  Pending bit 22
                PR22: u1,
                padding: u9,
            }),
            reserved32: [8]u8,
            ///  Interrupt mask register
            IMR2: mmio.Mmio(packed struct(u32) {
                ///  Interrupt Mask on external/internal line 32
                MR32: u1,
                ///  Interrupt Mask on external/internal line 33
                MR33: u1,
                ///  Interrupt Mask on external/internal line 34
                MR34: u1,
                ///  Interrupt Mask on external/internal line 35
                MR35: u1,
                ///  Interrupt Mask on external/internal line 36
                MR36: u1,
                ///  Interrupt Mask on external/internal line 37
                MR37: u1,
                ///  Interrupt Mask on external/internal line 38
                MR38: u1,
                ///  Interrupt Mask on external/internal line 39
                MR39: u1,
                padding: u24,
            }),
            ///  Event mask register
            EMR2: mmio.Mmio(packed struct(u32) {
                ///  Event mask on external/internal line 32
                MR32: u1,
                ///  Event mask on external/internal line 33
                MR33: u1,
                ///  Event mask on external/internal line 34
                MR34: u1,
                ///  Event mask on external/internal line 35
                MR35: u1,
                ///  Event mask on external/internal line 36
                MR36: u1,
                ///  Event mask on external/internal line 37
                MR37: u1,
                ///  Event mask on external/internal line 38
                MR38: u1,
                ///  Event mask on external/internal line 39
                MR39: u1,
                padding: u24,
            }),
            ///  Rising Trigger selection register
            RTSR2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  Rising trigger event configuration bit of line 35
                RT35: u1,
                ///  Rising trigger event configuration bit of line 36
                RT36: u1,
                ///  Rising trigger event configuration bit of line 37
                RT37: u1,
                ///  Rising trigger event configuration bit of line 38
                RT38: u1,
                padding: u25,
            }),
            ///  Falling Trigger selection register
            FTSR2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  Falling trigger event configuration bit of line 35
                FT35: u1,
                ///  Falling trigger event configuration bit of line 36
                FT36: u1,
                ///  Falling trigger event configuration bit of line 37
                FT37: u1,
                ///  Falling trigger event configuration bit of line 38
                FT38: u1,
                padding: u25,
            }),
            ///  Software interrupt event register
            SWIER2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  Software interrupt on line 35
                SWI35: u1,
                ///  Software interrupt on line 36
                SWI36: u1,
                ///  Software interrupt on line 37
                SWI37: u1,
                ///  Software interrupt on line 38
                SWI38: u1,
                padding: u25,
            }),
            ///  Pending register
            PR2: mmio.Mmio(packed struct(u32) {
                reserved3: u3,
                ///  Pending interrupt flag on line 35
                PIF35: u1,
                ///  Pending interrupt flag on line 36
                PIF36: u1,
                ///  Pending interrupt flag on line 37
                PIF37: u1,
                ///  Pending interrupt flag on line 38
                PIF38: u1,
                padding: u25,
            }),
        };

        ///  Voltage reference buffer
        pub const VREFBUF = extern struct {
            ///  VREF control and status register
            CSR: mmio.Mmio(packed struct(u32) {
                ///  Voltage reference buffer enable
                ENVR: u1,
                ///  High impedance mode
                HIZ: u1,
                ///  Voltage reference scale
                VRS: u1,
                ///  Voltage reference buffer ready
                VRR: u1,
                padding: u28,
            }),
            ///  calibration control register
            CCR: mmio.Mmio(packed struct(u32) {
                ///  Trimming code
                TRIM: u6,
                padding: u26,
            }),
        };

        ///  Controller area network
        pub const CAN1 = extern struct {
            ///  master control register
            MCR: mmio.Mmio(packed struct(u32) {
                ///  INRQ
                INRQ: u1,
                ///  SLEEP
                SLEEP: u1,
                ///  TXFP
                TXFP: u1,
                ///  RFLM
                RFLM: u1,
                ///  NART
                NART: u1,
                ///  AWUM
                AWUM: u1,
                ///  ABOM
                ABOM: u1,
                ///  TTCM
                TTCM: u1,
                reserved15: u7,
                ///  RESET
                RESET: u1,
                ///  DBF
                DBF: u1,
                padding: u15,
            }),
            ///  master status register
            MSR: mmio.Mmio(packed struct(u32) {
                ///  INAK
                INAK: u1,
                ///  SLAK
                SLAK: u1,
                ///  ERRI
                ERRI: u1,
                ///  WKUI
                WKUI: u1,
                ///  SLAKI
                SLAKI: u1,
                reserved8: u3,
                ///  TXM
                TXM: u1,
                ///  RXM
                RXM: u1,
                ///  SAMP
                SAMP: u1,
                ///  RX
                RX: u1,
                padding: u20,
            }),
            ///  transmit status register
            TSR: mmio.Mmio(packed struct(u32) {
                ///  RQCP0
                RQCP0: u1,
                ///  TXOK0
                TXOK0: u1,
                ///  ALST0
                ALST0: u1,
                ///  TERR0
                TERR0: u1,
                reserved7: u3,
                ///  ABRQ0
                ABRQ0: u1,
                ///  RQCP1
                RQCP1: u1,
                ///  TXOK1
                TXOK1: u1,
                ///  ALST1
                ALST1: u1,
                ///  TERR1
                TERR1: u1,
                reserved15: u3,
                ///  ABRQ1
                ABRQ1: u1,
                ///  RQCP2
                RQCP2: u1,
                ///  TXOK2
                TXOK2: u1,
                ///  ALST2
                ALST2: u1,
                ///  TERR2
                TERR2: u1,
                reserved23: u3,
                ///  ABRQ2
                ABRQ2: u1,
                ///  CODE
                CODE: u2,
                ///  Lowest priority flag for mailbox 0
                TME0: u1,
                ///  Lowest priority flag for mailbox 1
                TME1: u1,
                ///  Lowest priority flag for mailbox 2
                TME2: u1,
                ///  Lowest priority flag for mailbox 0
                LOW0: u1,
                ///  Lowest priority flag for mailbox 1
                LOW1: u1,
                ///  Lowest priority flag for mailbox 2
                LOW2: u1,
            }),
            ///  receive FIFO 0 register
            RF0R: mmio.Mmio(packed struct(u32) {
                ///  FMP0
                FMP0: u2,
                reserved3: u1,
                ///  FULL0
                FULL0: u1,
                ///  FOVR0
                FOVR0: u1,
                ///  RFOM0
                RFOM0: u1,
                padding: u26,
            }),
            ///  receive FIFO 1 register
            RF1R: mmio.Mmio(packed struct(u32) {
                ///  FMP1
                FMP1: u2,
                reserved3: u1,
                ///  FULL1
                FULL1: u1,
                ///  FOVR1
                FOVR1: u1,
                ///  RFOM1
                RFOM1: u1,
                padding: u26,
            }),
            ///  interrupt enable register
            IER: mmio.Mmio(packed struct(u32) {
                ///  TMEIE
                TMEIE: u1,
                ///  FMPIE0
                FMPIE0: u1,
                ///  FFIE0
                FFIE0: u1,
                ///  FOVIE0
                FOVIE0: u1,
                ///  FMPIE1
                FMPIE1: u1,
                ///  FFIE1
                FFIE1: u1,
                ///  FOVIE1
                FOVIE1: u1,
                reserved8: u1,
                ///  EWGIE
                EWGIE: u1,
                ///  EPVIE
                EPVIE: u1,
                ///  BOFIE
                BOFIE: u1,
                ///  LECIE
                LECIE: u1,
                reserved15: u3,
                ///  ERRIE
                ERRIE: u1,
                ///  WKUIE
                WKUIE: u1,
                ///  SLKIE
                SLKIE: u1,
                padding: u14,
            }),
            ///  interrupt enable register
            ESR: mmio.Mmio(packed struct(u32) {
                ///  EWGF
                EWGF: u1,
                ///  EPVF
                EPVF: u1,
                ///  BOFF
                BOFF: u1,
                reserved4: u1,
                ///  LEC
                LEC: u3,
                reserved16: u9,
                ///  TEC
                TEC: u8,
                ///  REC
                REC: u8,
            }),
            ///  bit timing register
            BTR: mmio.Mmio(packed struct(u32) {
                ///  BRP
                BRP: u10,
                reserved16: u6,
                ///  TS1
                TS1: u4,
                ///  TS2
                TS2: u3,
                reserved24: u1,
                ///  SJW
                SJW: u2,
                reserved30: u4,
                ///  LBKM
                LBKM: u1,
                ///  SILM
                SILM: u1,
            }),
            reserved384: [352]u8,
            ///  TX mailbox identifier register
            TI0R: mmio.Mmio(packed struct(u32) {
                ///  TXRQ
                TXRQ: u1,
                ///  RTR
                RTR: u1,
                ///  IDE
                IDE: u1,
                ///  EXID
                EXID: u18,
                ///  STID
                STID: u11,
            }),
            ///  mailbox data length control and time stamp register
            TDT0R: mmio.Mmio(packed struct(u32) {
                ///  DLC
                DLC: u4,
                reserved8: u4,
                ///  TGT
                TGT: u1,
                reserved16: u7,
                ///  TIME
                TIME: u16,
            }),
            ///  mailbox data low register
            TDL0R: mmio.Mmio(packed struct(u32) {
                ///  DATA0
                DATA0: u8,
                ///  DATA1
                DATA1: u8,
                ///  DATA2
                DATA2: u8,
                ///  DATA3
                DATA3: u8,
            }),
            ///  mailbox data high register
            TDH0R: mmio.Mmio(packed struct(u32) {
                ///  DATA4
                DATA4: u8,
                ///  DATA5
                DATA5: u8,
                ///  DATA6
                DATA6: u8,
                ///  DATA7
                DATA7: u8,
            }),
            ///  mailbox identifier register
            TI1R: mmio.Mmio(packed struct(u32) {
                ///  TXRQ
                TXRQ: u1,
                ///  RTR
                RTR: u1,
                ///  IDE
                IDE: u1,
                ///  EXID
                EXID: u18,
                ///  STID
                STID: u11,
            }),
            ///  mailbox data length control and time stamp register
            TDT1R: mmio.Mmio(packed struct(u32) {
                ///  DLC
                DLC: u4,
                reserved8: u4,
                ///  TGT
                TGT: u1,
                reserved16: u7,
                ///  TIME
                TIME: u16,
            }),
            ///  mailbox data low register
            TDL1R: mmio.Mmio(packed struct(u32) {
                ///  DATA0
                DATA0: u8,
                ///  DATA1
                DATA1: u8,
                ///  DATA2
                DATA2: u8,
                ///  DATA3
                DATA3: u8,
            }),
            ///  mailbox data high register
            TDH1R: mmio.Mmio(packed struct(u32) {
                ///  DATA4
                DATA4: u8,
                ///  DATA5
                DATA5: u8,
                ///  DATA6
                DATA6: u8,
                ///  DATA7
                DATA7: u8,
            }),
            ///  mailbox identifier register
            TI2R: mmio.Mmio(packed struct(u32) {
                ///  TXRQ
                TXRQ: u1,
                ///  RTR
                RTR: u1,
                ///  IDE
                IDE: u1,
                ///  EXID
                EXID: u18,
                ///  STID
                STID: u11,
            }),
            ///  mailbox data length control and time stamp register
            TDT2R: mmio.Mmio(packed struct(u32) {
                ///  DLC
                DLC: u4,
                reserved8: u4,
                ///  TGT
                TGT: u1,
                reserved16: u7,
                ///  TIME
                TIME: u16,
            }),
            ///  mailbox data low register
            TDL2R: mmio.Mmio(packed struct(u32) {
                ///  DATA0
                DATA0: u8,
                ///  DATA1
                DATA1: u8,
                ///  DATA2
                DATA2: u8,
                ///  DATA3
                DATA3: u8,
            }),
            ///  mailbox data high register
            TDH2R: mmio.Mmio(packed struct(u32) {
                ///  DATA4
                DATA4: u8,
                ///  DATA5
                DATA5: u8,
                ///  DATA6
                DATA6: u8,
                ///  DATA7
                DATA7: u8,
            }),
            ///  receive FIFO mailbox identifier register
            RI0R: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  RTR
                RTR: u1,
                ///  IDE
                IDE: u1,
                ///  EXID
                EXID: u18,
                ///  STID
                STID: u11,
            }),
            ///  mailbox data high register
            RDT0R: mmio.Mmio(packed struct(u32) {
                ///  DLC
                DLC: u4,
                reserved8: u4,
                ///  FMI
                FMI: u8,
                ///  TIME
                TIME: u16,
            }),
            ///  mailbox data high register
            RDL0R: mmio.Mmio(packed struct(u32) {
                ///  DATA0
                DATA0: u8,
                ///  DATA1
                DATA1: u8,
                ///  DATA2
                DATA2: u8,
                ///  DATA3
                DATA3: u8,
            }),
            ///  receive FIFO mailbox data high register
            RDH0R: mmio.Mmio(packed struct(u32) {
                ///  DATA4
                DATA4: u8,
                ///  DATA5
                DATA5: u8,
                ///  DATA6
                DATA6: u8,
                ///  DATA7
                DATA7: u8,
            }),
            ///  mailbox data high register
            RI1R: mmio.Mmio(packed struct(u32) {
                reserved1: u1,
                ///  RTR
                RTR: u1,
                ///  IDE
                IDE: u1,
                ///  EXID
                EXID: u18,
                ///  STID
                STID: u11,
            }),
            ///  mailbox data high register
            RDT1R: mmio.Mmio(packed struct(u32) {
                ///  DLC
                DLC: u4,
                reserved8: u4,
                ///  FMI
                FMI: u8,
                ///  TIME
                TIME: u16,
            }),
            ///  mailbox data high register
            RDL1R: mmio.Mmio(packed struct(u32) {
                ///  DATA0
                DATA0: u8,
                ///  DATA1
                DATA1: u8,
                ///  DATA2
                DATA2: u8,
                ///  DATA3
                DATA3: u8,
            }),
            ///  mailbox data high register
            RDH1R: mmio.Mmio(packed struct(u32) {
                ///  DATA4
                DATA4: u8,
                ///  DATA5
                DATA5: u8,
                ///  DATA6
                DATA6: u8,
                ///  DATA7
                DATA7: u8,
            }),
            reserved512: [48]u8,
            ///  filter master register
            FMR: mmio.Mmio(packed struct(u32) {
                ///  Filter initialization mode
                FINIT: u1,
                reserved8: u7,
                ///  CAN start bank
                CANSB: u6,
                padding: u18,
            }),
            ///  filter mode register
            FM1R: mmio.Mmio(packed struct(u32) {
                ///  Filter mode
                FBM0: u1,
                ///  Filter mode
                FBM1: u1,
                ///  Filter mode
                FBM2: u1,
                ///  Filter mode
                FBM3: u1,
                ///  Filter mode
                FBM4: u1,
                ///  Filter mode
                FBM5: u1,
                ///  Filter mode
                FBM6: u1,
                ///  Filter mode
                FBM7: u1,
                ///  Filter mode
                FBM8: u1,
                ///  Filter mode
                FBM9: u1,
                ///  Filter mode
                FBM10: u1,
                ///  Filter mode
                FBM11: u1,
                ///  Filter mode
                FBM12: u1,
                ///  Filter mode
                FBM13: u1,
                ///  Filter mode
                FBM14: u1,
                ///  Filter mode
                FBM15: u1,
                ///  Filter mode
                FBM16: u1,
                ///  Filter mode
                FBM17: u1,
                ///  Filter mode
                FBM18: u1,
                ///  Filter mode
                FBM19: u1,
                ///  Filter mode
                FBM20: u1,
                ///  Filter mode
                FBM21: u1,
                ///  Filter mode
                FBM22: u1,
                ///  Filter mode
                FBM23: u1,
                ///  Filter mode
                FBM24: u1,
                ///  Filter mode
                FBM25: u1,
                ///  Filter mode
                FBM26: u1,
                ///  Filter mode
                FBM27: u1,
                padding: u4,
            }),
            reserved524: [4]u8,
            ///  filter scale register
            FS1R: mmio.Mmio(packed struct(u32) {
                ///  Filter scale configuration
                FSC0: u1,
                ///  Filter scale configuration
                FSC1: u1,
                ///  Filter scale configuration
                FSC2: u1,
                ///  Filter scale configuration
                FSC3: u1,
                ///  Filter scale configuration
                FSC4: u1,
                ///  Filter scale configuration
                FSC5: u1,
                ///  Filter scale configuration
                FSC6: u1,
                ///  Filter scale configuration
                FSC7: u1,
                ///  Filter scale configuration
                FSC8: u1,
                ///  Filter scale configuration
                FSC9: u1,
                ///  Filter scale configuration
                FSC10: u1,
                ///  Filter scale configuration
                FSC11: u1,
                ///  Filter scale configuration
                FSC12: u1,
                ///  Filter scale configuration
                FSC13: u1,
                ///  Filter scale configuration
                FSC14: u1,
                ///  Filter scale configuration
                FSC15: u1,
                ///  Filter scale configuration
                FSC16: u1,
                ///  Filter scale configuration
                FSC17: u1,
                ///  Filter scale configuration
                FSC18: u1,
                ///  Filter scale configuration
                FSC19: u1,
                ///  Filter scale configuration
                FSC20: u1,
                ///  Filter scale configuration
                FSC21: u1,
                ///  Filter scale configuration
                FSC22: u1,
                ///  Filter scale configuration
                FSC23: u1,
                ///  Filter scale configuration
                FSC24: u1,
                ///  Filter scale configuration
                FSC25: u1,
                ///  Filter scale configuration
                FSC26: u1,
                ///  Filter scale configuration
                FSC27: u1,
                padding: u4,
            }),
            reserved532: [4]u8,
            ///  filter FIFO assignment register
            FFA1R: mmio.Mmio(packed struct(u32) {
                ///  Filter FIFO assignment for filter 0
                FFA0: u1,
                ///  Filter FIFO assignment for filter 1
                FFA1: u1,
                ///  Filter FIFO assignment for filter 2
                FFA2: u1,
                ///  Filter FIFO assignment for filter 3
                FFA3: u1,
                ///  Filter FIFO assignment for filter 4
                FFA4: u1,
                ///  Filter FIFO assignment for filter 5
                FFA5: u1,
                ///  Filter FIFO assignment for filter 6
                FFA6: u1,
                ///  Filter FIFO assignment for filter 7
                FFA7: u1,
                ///  Filter FIFO assignment for filter 8
                FFA8: u1,
                ///  Filter FIFO assignment for filter 9
                FFA9: u1,
                ///  Filter FIFO assignment for filter 10
                FFA10: u1,
                ///  Filter FIFO assignment for filter 11
                FFA11: u1,
                ///  Filter FIFO assignment for filter 12
                FFA12: u1,
                ///  Filter FIFO assignment for filter 13
                FFA13: u1,
                ///  Filter FIFO assignment for filter
                FFA14: u1,
                ///  Filter FIFO assignment for filter
                FFA15: u1,
                ///  Filter FIFO assignment for filter
                FFA16: u1,
                ///  Filter FIFO assignment for filter
                FFA17: u1,
                ///  Filter FIFO assignment for filter
                FFA18: u1,
                ///  Filter FIFO assignment for filter
                FFA19: u1,
                ///  Filter FIFO assignment for filter
                FFA20: u1,
                ///  Filter FIFO assignment for filter
                FFA21: u1,
                ///  Filter FIFO assignment for filter
                FFA22: u1,
                ///  Filter FIFO assignment for filter
                FFA23: u1,
                ///  Filter FIFO assignment for filter
                FFA24: u1,
                ///  Filter FIFO assignment for filter
                FFA25: u1,
                ///  Filter FIFO assignment for filter
                FFA26: u1,
                ///  Filter FIFO assignment for filter
                FFA27: u1,
                padding: u4,
            }),
            reserved540: [4]u8,
            ///  filter activation register
            FA1R: mmio.Mmio(packed struct(u32) {
                ///  Filter active
                FACT0: u1,
                ///  Filter active
                FACT1: u1,
                ///  Filter active
                FACT2: u1,
                ///  Filter active
                FACT3: u1,
                ///  Filter active
                FACT4: u1,
                ///  Filter active
                FACT5: u1,
                ///  Filter active
                FACT6: u1,
                ///  Filter active
                FACT7: u1,
                ///  Filter active
                FACT8: u1,
                ///  Filter active
                FACT9: u1,
                ///  Filter active
                FACT10: u1,
                ///  Filter active
                FACT11: u1,
                ///  Filter active
                FACT12: u1,
                ///  Filter active
                FACT13: u1,
                ///  Filter active
                FACT14: u1,
                ///  Filter active
                FACT15: u1,
                ///  Filter active
                FACT16: u1,
                ///  Filter active
                FACT17: u1,
                ///  Filter active
                FACT18: u1,
                ///  Filter active
                FACT19: u1,
                ///  Filter active
                FACT20: u1,
                ///  Filter active
                FACT21: u1,
                ///  Filter active
                FACT22: u1,
                ///  Filter active
                FACT23: u1,
                ///  Filter active
                FACT24: u1,
                ///  Filter active
                FACT25: u1,
                ///  Filter active
                FACT26: u1,
                ///  Filter active
                FACT27: u1,
                padding: u4,
            }),
            reserved576: [32]u8,
            ///  Filter bank 0 register 1
            F0R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 0 register 2
            F0R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 1 register 1
            F1R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 1 register 2
            F1R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 2 register 1
            F2R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 2 register 2
            F2R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 3 register 1
            F3R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 3 register 2
            F3R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 4 register 1
            F4R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 4 register 2
            F4R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 5 register 1
            F5R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 5 register 2
            F5R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 6 register 1
            F6R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 6 register 2
            F6R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 7 register 1
            F7R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 7 register 2
            F7R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 8 register 1
            F8R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 8 register 2
            F8R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 9 register 1
            F9R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 9 register 2
            F9R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 10 register 1
            F10R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 10 register 2
            F10R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 11 register 1
            F11R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 11 register 2
            F11R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 4 register 1
            F12R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 12 register 2
            F12R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 13 register 1
            F13R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 13 register 2
            F13R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 14 register 1
            F14R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 14 register 2
            F14R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 15 register 1
            F15R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 15 register 2
            F15R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 16 register 1
            F16R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 16 register 2
            F16R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 17 register 1
            F17R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 17 register 2
            F17R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 18 register 1
            F18R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 18 register 2
            F18R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 19 register 1
            F19R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 19 register 2
            F19R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 20 register 1
            F20R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 20 register 2
            F20R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 21 register 1
            F21R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 21 register 2
            F21R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 22 register 1
            F22R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 22 register 2
            F22R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 23 register 1
            F23R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 23 register 2
            F23R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 24 register 1
            F24R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 24 register 2
            F24R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 25 register 1
            F25R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 25 register 2
            F25R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 26 register 1
            F26R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 26 register 2
            F26R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 27 register 1
            F27R1: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
            ///  Filter bank 27 register 2
            F27R2: mmio.Mmio(packed struct(u32) {
                ///  Filter bits
                FB0: u1,
                ///  Filter bits
                FB1: u1,
                ///  Filter bits
                FB2: u1,
                ///  Filter bits
                FB3: u1,
                ///  Filter bits
                FB4: u1,
                ///  Filter bits
                FB5: u1,
                ///  Filter bits
                FB6: u1,
                ///  Filter bits
                FB7: u1,
                ///  Filter bits
                FB8: u1,
                ///  Filter bits
                FB9: u1,
                ///  Filter bits
                FB10: u1,
                ///  Filter bits
                FB11: u1,
                ///  Filter bits
                FB12: u1,
                ///  Filter bits
                FB13: u1,
                ///  Filter bits
                FB14: u1,
                ///  Filter bits
                FB15: u1,
                ///  Filter bits
                FB16: u1,
                ///  Filter bits
                FB17: u1,
                ///  Filter bits
                FB18: u1,
                ///  Filter bits
                FB19: u1,
                ///  Filter bits
                FB20: u1,
                ///  Filter bits
                FB21: u1,
                ///  Filter bits
                FB22: u1,
                ///  Filter bits
                FB23: u1,
                ///  Filter bits
                FB24: u1,
                ///  Filter bits
                FB25: u1,
                ///  Filter bits
                FB26: u1,
                ///  Filter bits
                FB27: u1,
                ///  Filter bits
                FB28: u1,
                ///  Filter bits
                FB29: u1,
                ///  Filter bits
                FB30: u1,
                ///  Filter bits
                FB31: u1,
            }),
        };
    };
};
